,subreddit,query,sort,date,title,author,stickied,upvote_ratio,score,id,url,num_comments,created,body
0,machinelearning,open-ai,top,2023-03-15 22:34:01,[D] Our community must get serious about opposing OpenAI,SOCSChamp,False,0.95,2971,11sboh1,https://www.reddit.com/r/MachineLearning/comments/11sboh1/d_our_community_must_get_serious_about_opposing/,448,1678919641.0,"OpenAI was founded for the explicit purpose of democratizing access to AI and acting as a counterbalance to the closed off world of big tech by developing open source tools.

They have abandoned this idea entirely.

Today, with the release of GPT4 and their direct statement that they will not release details of the model creation due to ""safety concerns"" and the competitive environment, they have created a precedent worse than those that existed before they entered the field. We're at risk now of other major players, who previously at least published their work and contributed to open source tools, close themselves off as well.

AI alignment is a serious issue that we definitely have not solved. Its a huge field with a dizzying array of ideas, beliefs and approaches. We're talking about trying to capture the interests and goals of all humanity, after all. In this space, the one approach that is horrifying (and the one that OpenAI was LITERALLY created to prevent) is a singular or oligarchy of for profit corporations making this decision for us. This is exactly what OpenAI plans to do.

I get it, GPT4 is incredible. However, we are talking about the single most transformative technology and societal change that humanity has ever made. It needs to be for everyone or else the average person is going to be left behind.

We need to unify around open source development; choose companies that contribute to science, and condemn the ones that don't.

This conversation will only ever get more important."
1,machinelearning,open-ai,top,2020-04-23 15:15:06,[P] I trained a recurrent neural network trained to draw dick doodles,RichardRNN,False,0.96,1781,g6og9l,https://www.reddit.com/r/MachineLearning/comments/g6og9l/p_i_trained_a_recurrent_neural_network_trained_to/,121,1587654906.0,"# DICK-RNN

A recurrent neural network trained to draw dicks.

Demo: https://dickrnn.github.io/

GitHub: https://github.com/dickrnn/dickrnn.github.io/

This project is a fork of Google's [sketch-rnn demo](https://magenta.tensorflow.org/assets/sketch_rnn_demo/index.html). The methodology is described in this [paper](https://arxiv.org/abs/1704.03477), and the dataset used for training is based on [Quickdraw-appendix](https://github.com/studiomoniker/Quickdraw-appendix).

# Why?

From Studio Moniker's [Quickdraw-appendix](https://studiomoniker.com/projects/do-not-draw-a-penis) project:

*In 2018 Google open-sourced the [Quickdraw data set](https://github.com/googlecreativelab/quickdraw-dataset). “The world's largest doodling data set”. The set consists of 345 categories and over 50 million drawings. For obvious reasons the data set was missing a few specific categories that people seem to enjoy drawing. This made us at Moniker think about the moral reality big tech companies are imposing on our global community and that most people willingly accept this. Therefore we decided to publish an appendix to the Google Quickdraw data set.*

I also believe that [“Doodling a penis is a light-hearted symbol for a rebellious act”](https://www.theverge.com/tldr/2019/6/17/18681733/google-ai-doodle-detector-penis-protest-moniker-mozilla) and also “think our moral compasses should not be in the hands of big tech”.

# Dick Demos

[Main Dick Demo](https://dickrnn.github.io/)

[Predict Multiple Dicks](https://dickrnn.github.io/multi.html)

[Simple Dick Demo](https://dickrnn.github.io/simple.html)

[Predict Single Dick with Temperature Adjust](https://dickrnn.github.io/predict.html)

## Example Dicks from Main Demo

The dicks are embedded in the query string after `share.html`.

Examples of sharable generated dick doodles:

[Example 1](https://dickrnn.github.io/share.html?s=f38BfXcBe3wBeHsBfH4BfX4Bdn8BfIMBdogBfIYBfYgBfogBf40BgYYBg4YBhocBiYcBhIEBlX8BhHsBg3oBgnoBgXoBgHsBf3wBf48BiowBhIQBhIIBhoABhn8Bhn4Bh3gBjHABgnoBgXsBgHsBgHoBf3IBfXgBfXsBeHYBe30Ban8BfoABfYABe4AAW2kBf2wBf2QBf24Bf2wBgHUBf3EBgHIBgHkBgHkBgnQBgXsBgnkBgXwBgnwBgX8BgoABg4EBg4IBgoQBgYMBgYMBgokBgJABf74BfosBfYYBfogBfoUBf5MBf4sBgIIAVwABgIIBgIIBgYEBgIEBgn8BiYABhX8BhX4Bgn8Bg34BgX8Bg34BgH8Bf34Bgn0AZFMBgYUBgIMBgIEBf4MBgIIBf4MAf2cBf30BgXoBgngBg3gBhHgBhHoAhXgBgncBg3sBinYBiHoAWb8Bfn8Bf38BgX8Bgn4BhH8Bhn8BjYEBh4MBhoMAMXAA)

[Example 2](https://dickrnn.github.io/share.html?s=f38BfnYBe3sBensBeX0BeX4Bdn8BfIEBfoMBfYQBfoUBf48BgIgBhIgBiosBhIABg4ABgn4Bg3wBhXkBfX8Be4IBe4MBe4QBfYUBfoQBf4kBgIUBg4YBhIUBhYMBhIABhIABhX4BhXoBhHoBg3kBgncBgHcBgHkBf3sBfn0BfX4Bfn8Bfn4BfX4Bfn4BfX4Aa0gBhHwBhnsBiXkBiXsBinsBlHkBjXsBi3wBiX0BiX4Bh34Bjn4BiX8BhX4Bg38BhX8BhX8BgH8BgH8BgYABgIABgIEBgH8BgYABgIEBgoMBgIEBgIEBgYMBgIIBgYUBf4MBfoUBfYEBfIEBdYQBd4IBb4MBeIABd4EBd4EBZoQBbYUBdoIBd4IBeoEBdYIBeIEBeoABe4EBe4EBfYABfYABfn8BfoABfoABf38Bf38A/ikBf38Bf38Bf4EBf4QBgIQBgYMBgIEBgoMBgIEBgoQBgYEBgIEBgYEBgYEBf38Bf38Bf4AAhmsBf38Bf4ABf38Bf38Bf38Bf38Bf34Bf38Bf34Bf38Bf34Bfn8Bf38AipkA)

[Example 3](https://dickrnn.github.io/share.html?s=f38Bh30BjH8BkIMBjYQBhoQBgIgBf4sBe40BeoYBeoUBeoIBeIEBd4ABd38BdnkBeXkBe3cBe3UBfHUBenMBgn0BhH0BhHsBgn0AxocBgH8Bgn4BjHwBiH0BhX8Bgn8Bh4IBhYQBhoUBhYcBhIgBgYYBf4YBf4cBf4EBfIMBeoMBdoMBdYEBdoABd38BeH0Bd3sBensBdXEBfHcBfXcBfngBf3gAcmEBf34BgX4BgXsBgXgBgXIBgHcBgWYBgHUBf3UBgHABf3oBfnsBfnsBfnoBf30BgHwBgXsBgX0BgnwBg3wBiHoBiHsBgn4Bg38BhX8BgYABgoEBgYIBgIIBgYcBgYkBgIQBf4YBf4QBf4kBf4UBf4QBf4MBf4MBf4QBf4QBf4QBfoUBfYQBfoUBf4IBfYcBfYoBf4IBfoYBfoMBfoMBf4EAbAABf4MBf4EBf4IBf4ABfoMBf38Bf4AAfH0BgX8Bk4IBg4ABgn8BgoABgoAASrIA)

[Example 4](https://dickrnn.github.io/share.html?s=f38BZn8BdIUBdokBeo0BfY8BfpQBhY4BiowBj4YBkIEBlH8BjHkBi3IBiXEBgnUBgXkBf6YBgYwBhYkBi4gBjYIBjIEBi38BiHkBh3UBg3MBgm0BgXIBfnMBenUBenkBdXUAAEcBhH8BhXkBiXgBi3IBkG4BkHEBk28Bk3IBnmYBi3gBi3oBk3kBiX8BioIBjYkBh4kBhYwBgYkBgY0BfY4BdZEBc48Bd4gBd4cBcYoBd4UAMDEBf4EBgoABiocBk4gBlIUBjX8Bh34BhXoAZEMBe3wBfHsBfH4BfX0BfX0AtJQBin8BhX0BhX8Bf34AqHoBf30BgX4BhXIBgn0BinUAhXoBfn8BhH4Bj3oBlXgBjH8BjYMAkKUBhH8BloQBh4IBjYUAapkBjXkBpHoBkH8Ac8YBhYcBhocBiYsBh4sBhIgARGgA)

# Dataset

This recurrent neural network was trained on a [dataset](https://github.com/studiomoniker/Quickdraw-appendix) of roughly 10,000 dick doodles."
2,machinelearning,open-ai,top,2022-05-27 05:46:54,"[D] I don't really trust papers out of ""Top Labs"" anymore",MrAcurite,False,0.97,1678,uyratt,https://www.reddit.com/r/MachineLearning/comments/uyratt/d_i_dont_really_trust_papers_out_of_top_labs/,262,1653630414.0,"I mean, I trust that the numbers they got are accurate and that they really did the work and got the results. I believe those. It's just that, take the recent ""An Evolutionary Approach to Dynamic Introduction of Tasks in Large-scale Multitask Learning Systems"" paper. It's 18 pages of talking through this pretty convoluted evolutionary and multitask learning algorithm, it's pretty interesting, solves a bunch of problems. But two notes. 

One, the big number they cite as the success metric is 99.43 on CIFAR-10, against a SotA of 99.40, so woop-de-fucking-doo in the grand scheme of things.

Two, there's a chart towards the end of the paper that details how many TPU core-hours were used for just the training regimens that results in the final results. The sum total is 17,810 core-hours. Let's assume that for someone who doesn't work at Google, you'd have to use on-demand pricing of $3.22/hr. This means that these trained models cost $57,348. 

Strictly speaking, throwing enough compute at a general enough genetic algorithm will eventually produce arbitrarily good performance, so while you can absolutely read this paper and collect interesting ideas about how to use genetic algorithms to accomplish multitask learning by having each new task leverage learned weights from previous tasks by defining modifications to a subset of components of a pre-existing model, there's a meta-textual level on which this paper is just ""Jeff Dean spent enough money to feed a family of four for half a decade to get a 0.03% improvement on CIFAR-10.""

OpenAI is far and away the worst offender here, but it seems like everyone's doing it. You throw a fuckton of compute and a light ganache of new ideas at an existing problem with existing data and existing benchmarks, and then if your numbers are infinitesimally higher than their numbers, you get to put a lil' sticker on your CV. Why should I trust that your ideas are even any good? I can't check them, I can't apply them to my own projects. 

Is this really what we're comfortable with as a community? A handful of corporations and the occasional university waving their dicks at everyone because they've got the compute to burn and we don't? There's a level at which I think there should be a new journal, exclusively for papers in which you can replicate their experimental results in under eight hours on a single consumer GPU."
3,machinelearning,open-ai,top,2017-07-03 20:24:09,[D] Why can't you guys comment your fucking code?,didntfinishhighschoo,False,0.86,1661,6l2esd,https://www.reddit.com/r/MachineLearning/comments/6l2esd/d_why_cant_you_guys_comment_your_fucking_code/,477,1499113449.0,"Seriously.

I spent the last few years doing web app development. Dug into DL a couple months ago. Supposedly, compared to the post-post-post-docs doing AI stuff, JavaScript developers should be inbred peasants. But every project these peasants release, even a fucking library that colorizes CLI output, has a catchy name, extensive docs, shitloads of comments, fuckton of tests, semantic versioning, changelog, and, oh my god, better variable names than `ctx_h` or `lang_hs` or `fuck_you_for_trying_to_understand`.

The concepts and ideas behind DL, GANs, LSTMs, CNNs, whatever – it's clear, it's simple, it's intuitive. The slog is to go through the jargon (that keeps changing beneath your feet - what's the point of using fancy words if you can't keep them consistent?), the unnecessary equations, trying to squeeze meaning from bullshit language used in papers, figuring out the super important steps, preprocessing, hyperparameters optimization that the authors, oops, failed to mention.

Sorry for singling out, but [look at this](https://github.com/facebookresearch/end-to-end-negotiator/blob/master/src/agent.py) - what the fuck? If a developer anywhere else at Facebook would get this code for a review they would throw up.

- Do you intentionally try to obfuscate your papers? Is pseudo-code a fucking premium? Can you at least try to give some intuition before showering the reader with equations?

- How the fuck do you dare to release a paper without source code?

- Why the fuck do you never ever add comments to you code?

- When naming things, are you charged by the character? Do you get a bonus for acronyms?

- Do you realize that OpenAI having needed to release a ""baseline"" TRPO implementation is a fucking disgrace to your profession?

- Jesus christ, who decided to name a tensor concatenation function `cat`?
"
4,machinelearning,open-ai,top,2022-08-07 21:25:26,[D] The current and future state of AI/ML is shockingly demoralizing with little hope of redemption,Flaky_Suit_8665,False,0.88,1430,wiqjxv,https://www.reddit.com/r/MachineLearning/comments/wiqjxv/d_the_current_and_future_state_of_aiml_is/,399,1659907526.0,"I recently encountered the PaLM (Scaling Language Modeling with Pathways) paper from Google Research and it opened up a can of worms of ideas I’ve felt I’ve intuitively had for a while, but have been unable to express – and I know I can’t be the only one. Sometimes I wonder what the original pioneers of AI – Turing, Neumann, McCarthy, etc. – would think if they could see the state of AI that we’ve gotten ourselves into. 67 authors, 83 pages, 540B parameters in a model, the internals of which no one can say they comprehend with a straight face, 6144 TPUs in a commercial lab that no one has access to, on a rig that no one can afford, trained on a volume of data that a human couldn’t process in a lifetime, 1 page on ethics with the same ideas that have been rehashed over and over elsewhere with no attempt at a solution – bias, racism, malicious use, etc. – for purposes that who asked for?

When I started my career as an AI/ML research engineer 2016, I was most interested in two types of tasks – 1.) those that most humans could do but that would universally be considered tedious and non-scalable. I’m talking image classification, sentiment analysis, even document summarization, etc. 2.) tasks that humans lack the capacity to perform as well as computers for various reasons – forecasting, risk analysis, game playing, and so forth. I still love my career, and I try to only work on projects in these areas, but it’s getting harder and harder.

This is because, somewhere along the way, it became popular and unquestionably acceptable to push AI into domains that were originally uniquely human, those areas that sit at the top of Maslows’s hierarchy of needs in terms of self-actualization – art, music, writing, singing, programming, and so forth. These areas of endeavor have negative logarithmic ability curves – the vast majority of people cannot do them well at all, about 10% can do them decently, and 1% or less can do them extraordinarily. The little discussed problem with AI-generation is that, without extreme deterrence, we will sacrifice human achievement at the top percentile in the name of lowering the bar for a larger volume of people, until the AI ability range is the norm. This is because relative to humans, AI is cheap, fast, and infinite, to the extent that investments in human achievement will be watered down at the societal, educational, and individual level with each passing year. And unlike AI gameplay which superseded humans decades ago, we won’t be able to just disqualify the machines and continue to play as if they didn’t exist.

Almost everywhere I go, even this forum, I encounter almost universal deference given to current SOTA AI generation systems like GPT-3, CODEX, DALL-E, etc., with almost no one extending their implications to its logical conclusion, which is long-term convergence to the mean, to mediocrity, in the fields they claim to address or even enhance. If you’re an artist or writer and you’re using DALL-E or GPT-3 to “enhance” your work, or if you’re a programmer saying, “GitHub Co-Pilot makes me a better programmer?”, then how could you possibly know? You’ve disrupted and bypassed your own creative process, which is thoughts -> (optionally words) -> actions -> feedback -> repeat, and instead seeded your canvas with ideas from a machine, the provenance of which you can’t understand, nor can the machine reliably explain. And the more you do this, the more you make your creative processes dependent on said machine, until you must question whether or not you could work at the same level without it.

When I was a college student, I often dabbled with weed, LSD, and mushrooms, and for a while, I thought the ideas I was having while under the influence were revolutionary and groundbreaking – that is until took it upon myself to actually start writing down those ideas and then reviewing them while sober, when I realized they weren’t that special at all. What I eventually determined is that, under the influence, it was impossible for me to accurately evaluate the drug-induced ideas I was having because the influencing agent the generates the ideas themselves was disrupting the same frame of reference that is responsible evaluating said ideas. This is the same principle of – if you took a pill and it made you stupider, would even know it? I believe that, especially over the long-term timeframe that crosses generations, there’s significant risk that current AI-generation developments produces a similar effect on humanity, and we mostly won’t even realize it has happened, much like a frog in boiling water. If you have children like I do, how can you be aware of the the current SOTA in these areas, project that 20 to 30 years, and then and tell them with a straight face that it is worth them pursuing their talent in art, writing, or music? How can you be honest and still say that widespread implementation of auto-correction hasn’t made you and others worse and worse at spelling over the years (a task that even I believe most would agree is tedious and worth automating).

Furthermore, I’ve yet to set anyone discuss the train – generate – train - generate feedback loop that long-term application of AI-generation systems imply. The first generations of these models were trained on wide swaths of web data generated by humans, but if these systems are permitted to continually spit out content without restriction or verification, especially to the extent that it reduces or eliminates development and investment in human talent over the long term, then what happens to the 4th or 5th generation of models? Eventually we encounter this situation where the AI is being trained almost exclusively on AI-generated content, and therefore with each generation, it settles more and more into the mean and mediocrity with no way out using current methods. By the time that happens, what will we have lost in terms of the creative capacity of people, and will we be able to get it back?

By relentlessly pursuing this direction so enthusiastically, I’m convinced that we as AI/ML developers, companies, and nations are past the point of no return, and it mostly comes down the investments in time and money that we’ve made, as well as a prisoner’s dilemma with our competitors. As a society though, this direction we’ve chosen for short-term gains will almost certainly make humanity worse off, mostly for those who are powerless to do anything about it – our children, our grandchildren, and generations to come.

If you’re an AI researcher or a data scientist like myself, how do you turn things back for yourself when you’ve spent years on years building your career in this direction? You’re likely making near or north of $200k annually TC and have a family to support, and so it’s too late, no matter how you feel about the direction the field has gone. If you’re a company, how do you standby and let your competitors aggressively push their AutoML solutions into more and more markets without putting out your own? Moreover, if you’re a manager or thought leader in this field like Jeff Dean how do you justify to your own boss and your shareholders your team’s billions of dollars in AI investment while simultaneously balancing ethical concerns? You can’t – the only answer is bigger and bigger models, more and more applications, more and more data, and more and more automation, and then automating that even further. If you’re a country like the US, how do responsibly develop AI while your competitors like China single-mindedly push full steam ahead without an iota of ethical concern to replace you in numerous areas in global power dynamics? Once again, failing to compete would be pre-emptively admitting defeat.

Even assuming that none of what I’ve described here happens to such an extent, how are so few people not taking this seriously and discounting this possibility? If everything I’m saying is fear-mongering and non-sense, then I’d be interested in hearing what you think human-AI co-existence looks like in 20 to 30 years and why it isn’t as demoralizing as I’ve made it out to be.

&#x200B;

EDIT: Day after posting this -- this post took off way more than I expected. Even if I received 20 - 25 comments, I would have considered that a success, but this went much further. Thank you to each one of you that has read this post, even more so if you left a comment, and triply so for those who gave awards! I've read almost every comment that has come in (even the troll ones), and am truly grateful for each one, including those in sharp disagreement. I've learned much more from this discussion with the sub than I could have imagined on this topic, from so many perspectives. While I will try to reply as many comments as I can, the sheer comment volume combined with limited free time between work and family unfortunately means that there are many that I likely won't be able to get to. That will invariably include some that I would love respond to under the assumption of infinite time, but I will do my best, even if the latency stretches into days. Thank you all once again!"
5,machinelearning,open-ai,top,2023-05-17 22:15:28,[D] Does anybody else despise OpenAI?,onesynthguy,False,0.86,1410,13kfxzy,https://www.reddit.com/r/MachineLearning/comments/13kfxzy/d_does_anybody_else_despise_openai/,426,1684361728.0," I  mean, don't get me started with the closed source models they have that were trained using the work of unassuming individuals who will never  see a penny for it. Put it up on Github they said. I'm all for  open-source, but when a company turns around and charges you for a  product they made with freely and publicly made content, while forbidding you from using the output to create competing models, that is where I  draw the line. It is simply ridiculous. 

Sam Altman couldn't be anymore predictable with his recent attempts to get the government to start regulating AI.

What  risks? The AI is just a messenger for information that is already out  there if one knows how/where to look. You don't need AI to learn how to  hack, to learn how to make weapons, etc. Fake news/propaganda? The  internet has all of that covered. LLMs are no where near the level of AI  you see in sci-fi. I mean, are people really afraid of text? Yes, I  know that text can sometimes be malicious code such as viruses, but  those can be found on github as well.  If they fall for this they might  as well shutdown the internet while they're at it.

He  is simply blowing things out of proportion and using fear to increase  the likelihood that they do what he wants, hurt the competition. I  bet he is probably teething with bitterness everytime a new huggingface  model comes out. The thought of us peasants being able to use AI  privately is too dangerous. No, instead we must be fed scraps while they  slowly take away our jobs and determine our future.

This  is not a doomer post, as I am all in favor of the advancement of AI.  However, the real danger here lies in having a company like OpenAI  dictate the future of humanity. I get it, the writing is on the wall;  the cost of human intelligence will go down, but if everyone has their  personal AI then it wouldn't seem so bad or unfair would it? Listen,  something that has the power to render a college degree that costs  thousands of dollars worthless should be available to the public. This  is to offset the damages and job layoffs that will come as a result of  such an entity. It wouldn't be as bitter of a taste as it would if you were replaced by it while still not being able to access it. Everyone should be able to use it as leverage, it is the only fair solution.

If  we don't take action now, a company like ClosedAI will, and they are  not in favor of the common folk. Sam Altman is so calculated to the  point where there were times when he seemed to be shooting OpenAI in the foot during his talk.  This move is to simply conceal his real intentions, to climb the ladder and take it with him. If he didn't include his company in his  ramblings, he would be easily read. So instead, he pretends to be scared of his own product, in an effort to legitimize his claim. Don't fall  for it.

They are slowly making a  reputation as one the most hated tech companies, right up there with  Adobe, and they don't show any sign of change. They have no moat,  othewise they wouldn't feel so threatened to the point where they would have to resort to creating barriers of entry via regulation. This only  means one thing, we are slowly catching up. We just need someone to  vouch for humanity's well-being, while acting as an opposing force to the  evil corporations who are only looking out for themselves. Question is,  who would be a good candidate?"
6,machinelearning,open-ai,top,2018-02-17 12:45:30,[P] Landing the Falcon booster with Reinforcement Learning in OpenAI,EmbersArc,False,0.95,1286,7y6g79,https://gfycat.com/CoarseEmbellishedIsopod,55,1518871530.0,
7,machinelearning,open-ai,top,2023-04-15 17:14:58,[P] OpenAssistant - The world's largest open-source replication of ChatGPT,ykilcher,False,0.97,1268,12nbixk,https://www.reddit.com/r/MachineLearning/comments/12nbixk/p_openassistant_the_worlds_largest_opensource/,175,1681578898.0,"We’re excited to announce the release of OpenAssistant.

The future of AI development depends heavily on high quality datasets and models being made publicly available, and that’s exactly what this project does.

Watch the annoucement video:

[https://youtu.be/ddG2fM9i4Kk](https://youtu.be/ddG2fM9i4Kk)

&#x200B;

Our team has worked tirelessly over the past several months collecting large amounts of text-based input and feedback to create an incredibly diverse and unique dataset designed specifically for training language models or other AI applications.

With over 600k human-generated data points covering a wide range of topics and styles of writing, our dataset will be an invaluable tool for any developer looking to create state-of-the-art instruction models!

To make things even better, we are making this entire dataset free and accessible to all who wish to use it. Check it out today at our HF org: OpenAssistant

On top of that, we've trained very powerful models that you can try right now at: [open-assistant.io/chat](https://open-assistant.io/chat) !"
8,machinelearning,open-ai,top,2023-05-04 16:13:30,"[D] Google ""We Have No Moat, And Neither Does OpenAI"": Leaked Internal Google Document Claims Open Source AI Will Outcompete Google and OpenAI",hardmaru,False,0.98,1180,137rxgw,https://www.semianalysis.com/p/google-we-have-no-moat-and-neither,206,1683216810.0,
9,machinelearning,open-ai,top,2019-01-24 20:55:23,"We are Oriol Vinyals and David Silver from DeepMind’s AlphaStar team, joined by StarCraft II pro players TLO and MaNa! Ask us anything",OriolVinyals,False,0.99,1172,ajgzoc,https://www.reddit.com/r/MachineLearning/comments/ajgzoc/we_are_oriol_vinyals_and_david_silver_from/,1010,1548363323.0,"Hi there! We are Oriol Vinyals (/u/OriolVinyals) and David Silver (/u/David_Silver), lead researchers on DeepMind’s AlphaStar team, joined by StarCraft II pro players TLO, and MaNa.

This evening at DeepMind HQ we held a livestream demonstration of AlphaStar playing against TLO and MaNa - you can read more about the matches [here](https://deepmind.com/blog/alphastar-mastering-real-time-strategy-game-starcraft-ii/) or re-watch the stream on YouTube [here](https://www.youtube.com/watch?v=cUTMhmVh1qs).

Now, we’re excited to talk with you about AlphaStar, the challenge of real-time strategy games for AI research, the matches themselves, and anything you’d like to know from TLO and MaNa about their experience playing against AlphaStar! :)

We are opening this thread now and will be here at **16:00 GMT / 11:00 ET / 08:00PT** on Friday, 25 January to answer your questions.

&#x200B;

EDIT: Thanks everyone for your great questions. It was a blast, hope you enjoyed it as well!"
10,machinelearning,open-ai,top,2023-03-28 05:57:03,[N] OpenAI may have benchmarked GPT-4’s coding ability on it’s own training data,Balance-,False,0.97,1003,124eyso,https://www.reddit.com/r/MachineLearning/comments/124eyso/n_openai_may_have_benchmarked_gpt4s_coding/,135,1679983023.0,"[GPT-4 and professional benchmarks: the wrong answer to the wrong question](https://aisnakeoil.substack.com/p/gpt-4-and-professional-benchmarks)

*OpenAI may have tested on the training data. Besides, human benchmarks are meaningless for bots.*

 **Problem 1: training data contamination**

To benchmark GPT-4’s coding ability, OpenAI evaluated it on problems from Codeforces, a website that hosts coding competitions. Surprisingly, Horace He pointed out that GPT-4 solved 10/10 pre-2021 problems and 0/10 recent problems in the easy category. The training data cutoff for GPT-4 is September 2021. This strongly suggests that the model is able to memorize solutions from its training set — or at least partly memorize them, enough that it can fill in what it can’t recall.

As further evidence for this hypothesis, we tested it on Codeforces problems from different times in 2021. We found that it could regularly solve problems in the easy category before September 5, but none of the problems after September 12.

In fact, we can definitively show that it has memorized problems in its training set: when prompted with the title of a Codeforces problem, GPT-4 includes a link to the exact contest where the problem appears (and the round number is almost correct: it is off by one). Note that GPT-4 cannot access the Internet, so memorization is the only explanation."
11,machinelearning,open-ai,top,2021-04-10 20:46:18,[P] Using PyTorch + NumPy? A bug that plagues thousands of open-source ML projects.,tanelai,False,0.98,980,mocpgj,https://www.reddit.com/r/MachineLearning/comments/mocpgj/p_using_pytorch_numpy_a_bug_that_plagues/,159,1618087578.0,"Using NumPy’s random number generator with multi-process data loading in PyTorch causes identical augmentations unless you specifically set seeds using the worker\_init\_fn option in the DataLoader. I didn’t and this bug silently regressed my model’s accuracy.

How many others has this bug done damage to? Curious, I downloaded over a hundred thousand repositories from GitHub that import PyTorch, and analysed their source code. I kept projects that define a custom dataset, use NumPy’s random number generator with multi-process data loading, and are more-or-less straightforward to analyse using abstract syntax trees. Out of these, over 95% of the repositories are plagued by this problem. It’s inside PyTorch's official tutorial, OpenAI’s code, and NVIDIA’s projects. Even Karpathy admitted falling prey to it.

For example, the following image shows the duplicated random crop augmentations you get when you blindly follow the official PyTorch tutorial on custom datasets:

https://preview.redd.it/pccy5wskpes61.png?width=1652&format=png&auto=webp&s=f292d0282ad954cbac2c693a9656d62fa0dd9682

You can read more details [here](https://tanelp.github.io/posts/a-bug-that-plagues-thousands-of-open-source-ml-projects/)."
12,machinelearning,open-ai,top,2021-01-05 19:48:05,[R] New Paper from OpenAI: DALL·E: Creating Images from Text,programmerChilli,False,0.99,895,kr63ot,https://openai.com/blog/dall-e/,232,1609876085.0,
13,machinelearning,open-ai,top,2023-05-22 16:15:53,[R] GPT-4 didn't really score 90th percentile on the bar exam,salamenzon,False,0.97,849,13ovc04,https://www.reddit.com/r/MachineLearning/comments/13ovc04/r_gpt4_didnt_really_score_90th_percentile_on_the/,160,1684772153.0,"According to [this article](https://papers.ssrn.com/sol3/papers.cfm?abstract_id=4441311), OpenAI's claim that it scored 90th percentile on the UBE appears to be based on approximate conversions from estimates of February administrations of the Illinois Bar Exam, which ""are heavily skewed towards repeat test-takers who failed the July administration and score significantly lower than the general test-taking population.""

Compared to July test-takers, GPT-4's UBE score would be 68th percentile, including \~48th on essays. Compared to first-time test takers, GPT-4's UBE score is estimated to be \~63rd percentile, including \~42nd on essays. Compared to those who actually passed, its UBE score would be \~48th percentile, including \~15th percentile on essays."
14,machinelearning,open-ai,top,2023-04-19 15:29:34,"[N] Stability AI announce their open-source language model, StableLM",Philpax,False,0.99,836,12rxtjj,https://www.reddit.com/r/MachineLearning/comments/12rxtjj/n_stability_ai_announce_their_opensource_language/,182,1681918174.0,"Repo: https://github.com/stability-AI/stableLM/

Excerpt from the Discord announcement:

> We’re incredibly excited to announce the launch of StableLM-Alpha; a nice and sparkly newly released open-sourced language model! Developers, researchers, and curious hobbyists alike can freely inspect, use, and adapt our StableLM base models for commercial and or research purposes! *Excited yet?*
>
> Let’s talk about parameters! The Alpha version of the model is available in 3 billion and 7 billion parameters, with 15 billion to 65 billion parameter models to follow. StableLM is trained on a new experimental dataset built on “The Pile” from EleutherAI (a 825GiB diverse, open source language modeling data set that consists of 22 smaller, high quality datasets combined together!) The richness of this dataset gives StableLM surprisingly high performance in conversational and coding tasks, despite its small size of 3-7 billion parameters."
15,machinelearning,open-ai,top,2022-03-04 15:24:42,"Hey all, I'm Sebastian Raschka, author of Machine Learning with Pytorch and Scikit-Learn. Please feel free to ask me anything!",seraschka,False,0.98,826,t6lcyz,https://www.reddit.com/r/MachineLearning/comments/t6lcyz/hey_all_im_sebastian_raschka_author_of_machine/,106,1646407482.0,"Hello everyone. I am excited about the invitation to do an AMA here. It's my first AMA on reddit, and I will be trying my best!
I recently wrote the ""Machine Learning with Pytorch and Scikit-Learn"" book and joined a startup(Grid.ai) in January. I am also an Assistant Professor of Statistics at the University of Wisconsin-Madison since 2018. Btw. I am also a very passionate Python programmer and love open source.

Please feel free to ask me anything about my [book](https://sebastianraschka.com/blog/2022/ml-pytorch-book.html), working in industry (although my experience is still limited, haha), academia, or my [research projects](https://sebastianraschka.com/publications/). But also don't hesitate to go on tangents and ask about other things -- this is an ask me **anything** after all (... topics like cross-country skiing come to mind).

EDIT:

**Thanks everyone for making my first AMA here a really fun experience! Unfortunately, I have to call it a day, but I had a good time! Thanks for all the good questions, and sorry that I couldn't get to all of them!**"
16,machinelearning,open-ai,top,2021-02-23 19:55:50,[N] 20 hours of new lectures on Deep Learning and Reinforcement Learning with lots of examples,cwkx,False,0.98,826,lqrek7,https://www.reddit.com/r/MachineLearning/comments/lqrek7/n_20_hours_of_new_lectures_on_deep_learning_and/,45,1614110150.0,"If anyone's interested in a Deep Learning and Reinforcement Learning series, I uploaded 20 hours of lectures on YouTube yesterday. Compared to other lectures, I think this gives quite a broad/compact overview of the fields with lots of minimal examples to build on. Here are the links:

**Deep Learning** ([playlist](https://www.youtube.com/playlist?list=PLMsTLcO6etti_SObSLvk9ZNvoS_0yia57))  
*The first five lectures are more theoretical, the second half is more applied.*

* Lecture 1: Introduction. ([slides](https://cwkx.github.io/data/teaching/dl-and-rl/dl-lecture1.pdf), [video](https://www.youtube.com/watch?v=s2uXPz3wyCk&list=PLMsTLcO6etti_SObSLvk9ZNvoS_0yia57&index=1))
* Lecture 2: Mathematical principles and backpropagation. ([slides](https://cwkx.github.io/data/teaching/dl-and-rl/dl-lecture2.pdf), [colab](https://colab.research.google.com/gist/cwkx/dfa207c8ceed5999bdad1ec6f637dd47/distributions.ipynb), [video](https://www.youtube.com/watch?v=dfZ0cIQSjm4&list=PLMsTLcO6etti_SObSLvk9ZNvoS_0yia57&index=2))
* Lecture 3: PyTorch programming: *coding session*. ([colab1](https://colab.research.google.com/gist/cwkx/441e508d3b904413fd3950a09a1d3bd6/classifier.ipynb), [colab2](https://colab.research.google.com/gist/cwkx/3a6eba039aa9f68d0b9d37a02216d385/convnet.ipynb), [video](https://www.youtube.com/watch?v=KiqXWOcz4Z0&list=PLMsTLcO6etti_SObSLvk9ZNvoS_0yia57&index=3)) - minor issues with audio, but it fixes itself later.
* Lecture 4: Designing models to generalise. ([slides](https://cwkx.github.io/data/teaching/dl-and-rl/dl-lecture4.pdf), [video](https://www.youtube.com/watch?v=4vKKj8bkS-E&list=PLMsTLcO6etti_SObSLvk9ZNvoS_0yia57&index=4))
* Lecture 5: Generative models. ([slides](https://cwkx.github.io/data/teaching/dl-and-rl/dl-lecture5.pdf), [desmos](https://www.desmos.com/calculator/2sboqbhler), [colab](https://colab.research.google.com/gist/cwkx/e3ef25d0adb6e2f2bf747ce664bab318/conv-autoencoder.ipynb), [video](https://www.youtube.com/watch?v=hyxlTwvLi-o&list=PLMsTLcO6etti_SObSLvk9ZNvoS_0yia57&index=5))
* Lecture 6: Adversarial models. ([slides](https://cwkx.github.io/data/teaching/dl-and-rl/dl-lecture6.pdf), [colab1](https://colab.research.google.com/gist/cwkx/74e33bc96f94f381bd15032d57e43786/simple-gan.ipynb), [colab2](https://colab.research.google.com/gist/cwkx/348cde3bf11a08c45a69b1873ebb6de3/conditional-gan.ipynb), [colab3](https://colab.research.google.com/gist/cwkx/7f5377ed8414a096180128b487846698/info-gan.ipynb), [colab4](https://colab.research.google.com/gist/cwkx/aece978bc38ba35c2267d91b793a1456/unet.ipynb), [video](https://www.youtube.com/watch?v=JLHyU7AjB4s&list=PLMsTLcO6etti_SObSLvk9ZNvoS_0yia57&index=6))
* Lecture 7: Energy-based models. ([slides](https://cwkx.github.io/data/teaching/dl-and-rl/dl-lecture7.pdf), [colab](https://colab.research.google.com/gist/cwkx/6b2d802e804e908a3ee3d58c1e0e73be/dbm.ipynb), [video](https://www.youtube.com/watch?v=kpulMklVmRU&list=PLMsTLcO6etti_SObSLvk9ZNvoS_0yia57&index=7))
* Lecture 8: Sequential models: *by* u/samb-t. ([slides](https://cwkx.github.io/data/teaching/dl-and-rl/dl-lecture8.pdf), [colab1](https://colab.research.google.com/gist/samb-t/ac6dbd433c618eedcd0442f577697ea3/generative-rnn.ipynb), [colab2](https://colab.research.google.com/gist/samb-t/27cc3217799825975b65326d6e7b377b/transformer-translation.ipynb), [video](https://www.youtube.com/watch?v=pxRnFwNFTOM&list=PLMsTLcO6etti_SObSLvk9ZNvoS_0yia57&index=8))
* Lecture 9: Flow models and implicit networks. ([slides](https://cwkx.github.io/data/teaching/dl-and-rl/dl-lecture9.pdf), [SIREN](https://vsitzmann.github.io/siren/), [GON](https://cwkx.github.io/data/GON/), [video](https://www.youtube.com/watch?v=zRdwh9C5xn4&list=PLMsTLcO6etti_SObSLvk9ZNvoS_0yia57&index=9))
* Lecture 10: Meta and manifold learning. ([slides](https://cwkx.github.io/data/teaching/dl-and-rl/dl-lecture10.pdf), [interview](https://youtu.be/PqbB07n_uQ4?t=444), [video](https://www.youtube.com/watch?v=na1-oIn8Kdo&list=PLMsTLcO6etti_SObSLvk9ZNvoS_0yia57&index=10))

**Reinforcement Learning** ([playlist](https://www.youtube.com/playlist?list=PLMsTLcO6ettgmyLVrcPvFLYi2Rs-R4JOE))  
*This is based on David Silver's course but targeting younger students within a shorter 50min format (missing the advanced derivations) + more examples and Colab code.*

* Lecture 1: Foundations. ([slides](https://cwkx.github.io/data/teaching/dl-and-rl/rl-lecture1.pdf), [video](https://www.youtube.com/watch?v=K67RJH3V7Yw&list=PLMsTLcO6ettgmyLVrcPvFLYi2Rs-R4JOE&index=1))
* Lecture 2: Markov decision processes. ([slides](https://cwkx.github.io/data/teaching/dl-and-rl/rl-lecture2.pdf), [colab](https://colab.research.google.com/gist/cwkx/ba6c44031137575d2445901ee90454da/mrp.ipynb), [video](https://www.youtube.com/watch?v=RmOdTQYQqmQ&list=PLMsTLcO6ettgmyLVrcPvFLYi2Rs-R4JOE&index=2))
* Lecture 3: OpenAI gym. ([video](https://www.youtube.com/watch?v=BNSwFURmaCA&list=PLMsTLcO6ettgmyLVrcPvFLYi2Rs-R4JOE&index=3))
* Lecture 4: Dynamic programming. ([slides](https://cwkx.github.io/data/teaching/dl-and-rl/rl-lecture4.pdf), [colab](https://colab.research.google.com/gist/cwkx/670c8d44a9a342355a4a883c498dbc9d/dynamic-programming.ipynb), [video](https://www.youtube.com/watch?v=gqC_p2XWpLU&list=PLMsTLcO6ettgmyLVrcPvFLYi2Rs-R4JOE&index=4))
* Lecture 5: Monte Carlo methods. ([slides](https://cwkx.github.io/data/teaching/dl-and-rl/rl-lecture5.pdf), [colab](https://colab.research.google.com/gist/cwkx/a5129e8888562d1b4ecb0da611c58ce8/monte-carlo-methods.ipynb), [video](https://www.youtube.com/watch?v=4xfWzLmIccs&list=PLMsTLcO6ettgmyLVrcPvFLYi2Rs-R4JOE&index=5))
* Lecture 6: Temporal-difference methods. ([slides](https://cwkx.github.io/data/teaching/dl-and-rl/rl-lecture6.pdf), [colab](https://colab.research.google.com/gist/cwkx/54e2e6d59918a083e47f19404fe275b4/temporal-difference-learning.ipynb), [video](https://www.youtube.com/watch?v=phgI_880uSw&list=PLMsTLcO6ettgmyLVrcPvFLYi2Rs-R4JOE&index=6))
* Lecture 7: Function approximation. ([slides](https://cwkx.github.io/data/teaching/dl-and-rl/rl-lecture7.pdf), [code](https://github.com/higgsfield/RL-Adventure), [video](https://www.youtube.com/watch?v=oqmCj95d3Y4&list=PLMsTLcO6ettgmyLVrcPvFLYi2Rs-R4JOE&index=7))
* Lecture 8: Policy gradient methods. ([slides](https://cwkx.github.io/data/teaching/dl-and-rl/rl-lecture8.pdf), [code](https://github.com/higgsfield/RL-Adventure-2), [theory](https://lilianweng.github.io/lil-log/2018/04/08/policy-gradient-algorithms.html), [video](https://www.youtube.com/watch?v=h4HixR0Co6Q&list=PLMsTLcO6ettgmyLVrcPvFLYi2Rs-R4JOE&index=8))
* Lecture 9: Model-based methods. ([slides](https://cwkx.github.io/data/teaching/dl-and-rl/rl-lecture9.pdf), [video](https://www.youtube.com/watch?v=aUjuBvqJ8UM&list=PLMsTLcO6ettgmyLVrcPvFLYi2Rs-R4JOE&index=9))
* Lecture 10: Extended methods. ([slides](https://cwkx.github.io/data/teaching/dl-and-rl/rl-lecture10.pdf), [atari](https://www.youtube.com/playlist?list=PL34t13IwtOXUNliyyJtoamekLAbqhB9Il), [video](https://www.youtube.com/watch?v=w6rGqprrxp8&list=PLMsTLcO6ettgmyLVrcPvFLYi2Rs-R4JOE&index=10))"
17,machinelearning,open-ai,top,2023-05-06 18:41:02,[R][P] I made an app for Instant Image/Text to 3D using ShapE from OpenAI,perception-eng,False,0.96,811,139yc73,https://i.redd.it/1j4h1oyda9ya1.gif,63,1683398462.0,
18,machinelearning,open-ai,top,2022-07-21 15:25:27,[D] Hey Reddit! We're a bunch of research scientists and software engineers and we just open sourced a new state-of-the-art AI model that can translate between 200 different languages. We're excited to hear your thoughts so we're hosting an AMA on 07/21/2022 @ 9:00AM PT. Ask Us Anything!,MetaAI_Official,False,0.96,798,w4jg7q,https://www.reddit.com/r/MachineLearning/comments/w4jg7q/d_hey_reddit_were_a_bunch_of_research_scientists/,116,1658417127.0,"PROOF: [https://i.redd.it/2z42nlnbssc91.jpg](https://i.redd.it/2z42nlnbssc91.jpg)

We’re part of the team behind Meta AI’s latest AI breakthrough in machine translation with our No Language Left Behind (NLLB) project. It’s a translation system that can support over 200 languages, even if there isn't a lot of text available to learn from.   The reality is that a handful of languages dominate the web meaning only a fraction of the world can access content and contribute to the web in their own language. We want to change this by creating more inclusive machine translations systems – ones that unlock access to the web for the more than 4B people around the world that are currently excluded because they do not speak one of the few languages content is available in.   Here are a few things about NLLB we’re excited for:

* Latest breakthrough: we created a single model that translates over 200 different languages with state-of-the-art results.
* Billions of translations: We’re applying the techniques from the research advancements from NLLB to support more than 25 billion translations served every day on Facebook News Feed, Instagram, and our other platforms.
* Meta’s AI Research SuperCluster (RSC): This large-scale conditional language model is one of the first AI models trained on Meta’s AI Research SuperCluster (RSC) supercomputer.
* Open sourcing: By open sourcing our model and publishing a slew of research tools, we hope that AI researchers whose languages are not supported well or at all on commercial translations services could use our model to create support for that language. Furthermore, we’ve open sourced datasets, such as NLLB-Seed and FLORES-200 evaluation benchmark, which doubles the existing language coverage over our previous benchmark.
* Wikimedia Foundation collaboration: We collaborated with the Wikimedia Foundation to help improve translation systems on their Content Translations tool. Editors can now more efficiently translate and edit articles in 20  low-resource languages, including 10 that previously were not supported by any machine translation tools on the platform. 
* Books translation: we’re partnering with local publishers around the world to translate children’s stories.

You can check out some of our materials and open sourced artifacts here: 

* Our latest blog post: [https://ai.facebook.com/blog/nllb-200-high-quality-machine-translation](https://ai.facebook.com/blog/nllb-200-high-quality-machine-translation)
* Project Overview: [https://ai.facebook.com/research/no-language-left-behind/ ](https://ai.facebook.com/research/no-language-left-behind/ )
* Product demo: [https://nllb.metademolab.com/](https://nllb.metademolab.com/)
* Research paper: [https://research.facebook.com/publications/no-language-left-behind](https://research.facebook.com/publications/no-language-left-behind)
* NLLB-200: [https://github.com/facebookresearch/fairseq/tree/nllb](https://github.com/facebookresearch/fairseq/tree/nllb)
* FLORES-200: [https://github.com/facebookresearch/flores](https://github.com/facebookresearch/flores)
* LASER3: [https://github.com/facebookresearch/LASER](https://github.com/facebookresearch/LASER)  

Joining us today for the AMA are:

* Angela Fan (AF), Research Scientist 
* Jean Maillard (JM), Research Scientist
* Maha Elbayad (ME), Research Scientist
* Philipp Koehn (PK), Research Scientist
* Shruti Bhosale (SB), Software Engineer  

We’ll be here from 07/21/2022 @09:00AM PT - 10:00AM PT 

Thanks and we’re looking forward to answering your questions!

**EDIT 10:30am PT:** Thanks for all the questions, we’re signing off! We had a great time and we’re glad to answer so many thoughtful questions!"
19,machinelearning,open-ai,top,2023-05-25 13:51:58,OpenAI is now complaining about regulation of AI [D],I_will_delete_myself,False,0.89,790,13rie0e,https://www.reddit.com/r/MachineLearning/comments/13rie0e/openai_is_now_complaining_about_regulation_of_ai_d/,349,1685022718.0,"I held off for a while but hypocrisy just drives me nuts after hearing this.

SMH this company like white knights who think they are above everybody. They want regulation but they want to be untouchable by this regulation. Only wanting to hurt other people but not “almighty” Sam and friends.

Lies straight through his teeth to Congress about suggesting similar things done in the EU, but then starts complain about them now. This dude should not be taken seriously in any political sphere whatsoever.

My opinion is this company is anti-progressive for AI by locking things up which is contrary to their brand name. If they can’t even stay true to something easy like that, how should we expect them to stay true with AI safety which is much harder?

I am glad they switch sides for now, but pretty ticked how they think they are entitled to corruption to benefit only themselves. SMH!!!!!!!!

What are your thoughts?"
20,machinelearning,open-ai,top,2021-07-27 18:11:28,[N] OpenAI Gym is now actively maintained again (by me)! Here's my plan,jkterry1,False,0.99,783,oss2e3,https://www.reddit.com/r/MachineLearning/comments/oss2e3/n_openai_gym_is_now_actively_maintained_again_by/,47,1627409488.0,"So OpenAI made me a maintainer of Gym. This means that all the installation issues will be fixed, the now 5 year backlog of PRs will be resolved, and in general Gym will now be reasonably maintained. I posted my manifesto for future maintenance here: [https://github.com/openai/gym/issues/2259](https://github.com/openai/gym/issues/2259)  


Edit: I've been getting a bunch of messages about open source donations, so I created links:

[https://liberapay.com/jkterry](https://liberapay.com/jkterry)

[https://www.buymeacoffee.com/jkterry](https://www.buymeacoffee.com/jkterry)"
21,machinelearning,open-ai,top,2023-04-26 09:56:04,"[D] Google researchers achieve performance breakthrough, rendering Stable Diffusion images in sub-12 seconds on a mobile phone. Generative AI models running on your mobile phone is nearing reality.",Lewenhart87,False,0.96,779,12zclus,https://www.reddit.com/r/MachineLearning/comments/12zclus/d_google_researchers_achieve_performance/,69,1682502964.0,"**What's important to know:**

&#x200B;

*  Stable Diffusion is an \\\~1-billion parameter model that is typically resource intensive. DALL-E sits at 3.5B parameters, so there are even heavier models out there.
*  Researchers at Google layered in a series of four GPU optimizations to enable Stable Diffusion 1.4 to run on a Samsung phone and generate images in under 12 seconds. RAM usage was also reduced heavily.
* **Their breakthrough isn't device-specific; rather it's a generalized approach that can add improvements to all latent diffusion models.** Overall image generation time decreased by 52% and 33% on a Samsung S23 Ultra and an iPhone 14 Pro, respectively.
*  Running generative AI locally on a phone, without a data connection or a cloud server, opens up a host of possibilities. This is just an example of how rapidly this space is moving as Stable Diffusion only just released last fall, and in its initial versions was slow to run on a hefty RTX 3080 desktop GPU.

&#x200B;

As small form-factor devices can run their own generative AI models, what does that mean for the future of computing? Some very exciting applications could be possible.

&#x200B;

If you're curious, the paper (very technical) [can be accessed here.](https://arxiv.org/abs/2304.11267)"
22,machinelearning,open-ai,top,2019-04-18 18:25:35,[Discussion] When ML and Data Science are the death of a good company: A cautionary tale.,AlexSnakeKing,False,0.96,774,beoxx8,https://www.reddit.com/r/MachineLearning/comments/beoxx8/discussion_when_ml_and_data_science_are_the_death/,198,1555611935.0,"TD;LR: At Company A, Team X does advanced analytics using on-prem ERP tools and older programming languages. Their tools work very well and are designed based on very deep business and domain expertise. Team Y is a new and ambitious Data Science team that thinks they can replace Team X's tools with a bunch of R scripts and a custom built ML platform. Their models are simplistic, but more ""fashionable"" compared to the econometric models used by Team X, and team Y benefits from the ML/DS moniker so leadership is allowing Team Y to start a large scale overhaul of the analytics platform in question. Team Y doesn't have the experience for such a larger scale transformation, and is refusing to collaborate with team X. This project is very likely going to fail, and cause serious harm to the company as a whole financially and from a people perspective. I argue that this is not just because of bad leadership, but also because of various trends and mindsets in the DS community at large. 

---------------------------------------------------------------------------------------------
Update (Jump to below the line for the original story): 

Several people in the comments are pointing out that this just a management failure, not something due to ML/DS, and that you can replace DS with any buzz tech and the story will still be relevant. 

My response: 
Of course, any failure at an organization level is ultimately a management failure one way or the other. 
Moreover, it is also the case that ML/DS when done correctly, will always improve a company's bottom line. There is no scenario where the proper ML solution, delivered at a reasonable cost and in a timely fashion, will somehow hurt the company's bottom line.

My point is that in this case management is failing because of certain trends and practices that are specific to the ML/DS community, namely: 
* The idea that DS teams should operate independently of tech and business orgs -- too much autonomy for DS teams 
* The disregard for domain knowledge that seems prevalent nowadays  thanks to the ML hype, that DS can be generalists and someone with good enough ML chops can solve any business problem.  That wasn't the case when I first left academia for the industry in 2009  (back then nobody would even bother with a phone screen if you didn't have the right domain knowledge). 
* Over reliance on resources who check all the ML hype related boxes (knows Python, R, Tensorflow, Shiny, etc..., has the right Coursera certifications, has blogged on the topic, etc...), but are lacking in depth of  experience. DS interviews nowadays all seem to be: Can you tell me what a p-value is? What is elastic net regression? Show me how to fit a model in sklearn? How do you impute NAs in an R dataframe? Any smart person can look those up on Stackoverflow or Cross-Validated,.....Instead teams should be asking stuff like: why does portfolio optimization use QP not LP? How does a forecast influence a customer service level? When should a recommendation engine be content based and when should it use collaborative filtering? etc...

---------------------------------------------------------------------------------------------

*(This is a true story, happening to the company I currently work for. Names, domains, algorithms, and roles have been shuffled around to protect my anonymity)* 

Company A has been around for several decades. It is not the biggest name in its domain, but it is a well respected one. Risk analysis and portfolio optimization have been a core of Company A's business since the 90s. They have a large team of 30 or so analysts who perform those tasks on a daily basis. These analysts use ERP solutions implemented for them by one the big ERP companies (SAP, Teradata, Oracle, JD Edwards,...) or one of the major tech consulting companies (Deloitte, Accenture, PWC, Capgemini, etc...) in collaboration with their own in house engineering team. The tools used are embarrassingly old school: Classic RDBMS running on on-prem servers or maybe even on mainframes, code written in COBOL, Fortran, weird proprietary stuff like ABAP or SPSS.....you get the picture. But the models and analytic functions were pretty sophisticated, and surprisingly cutting edge compared to the published academic literature. Most of all, they fit well with the company's enterprise ecosystem, and were honed based on years of deep domain knowledge. 

They have a tech team of several engineers (poached from the aforementioned software and consulting companies) and product managers (who came from the experienced pools of analysts and managers who use the software, or poached from business rivals) maintaining and running this software. Their technology might be old school, but collectively, they know the domain and the company's overall architecture very, very well. They've guided the company through several large scale upgrades and migrations and they have a track record of delivering on time, without too much overhead. The few times they've stumbled, they knew how to pick themselves up very quickly. In fact within their industry niche, they have a reputation for their expertise, and have very good relations with the various vendors they've had to deal with. They were the launching pad of several successful ERP consulting careers. 

Interestingly, despite dealing on a daily basis with statistical modeling and optimization algorithms, none of the analysts, engineers, or product managers involved describe themselves as data scientists or machine learning experts. It is mostly a cultural thing: Their expertise predates the Data Science/ML hype that started circa 2010, and they got most of their chops using proprietary enterprise tools instead of the open source tools popular nowadays. A few of them have formal statistical training, but most of them came from engineering or domain backgrounds and learned stats on the fly while doing their job. Call this team ""Team X"". 

Sometime around the mid 2010s, Company A started having some serious anxiety issues: Although still doing very well for a company its size, overall economic and demographic trends were shrinking its customer base, and a couple of so called disruptors came up with a new app and business model that started seriously eating into their revenue. A suitable reaction to appease shareholders and Wall Street was necessary. The company already had a decent website and a pretty snazzy app, what more could be done? Leadership decided that it was high time that AI and ML become a core part of the company's business. An ambitious Manager, with no science or engineering background, but who had very briefly toyed with a recommender system a couple of years back, was chosen to build a data science team, call it team ""Y"" (he had a bachelor's in history from the local state college and worked for several years in the company's marketing org). Team ""Y"" consists mostly of internal hires who decided they wanted to be data scientists and completed a Coursera certification or a Galvanize boot camp, before being brought on to the team, along with a few of fresh Ph.D or M.Sc holders who didn't like academia and wanted to try their hand at an industry role. All of them were very bright people, they could write great Medium blog posts and give inspiring TED talks, but collectively they had very little real world industry experience. 

As is the fashion nowadays, this group was made part of a data science org that reported directly to the CEO and Board, bypassing the CIO and any tech or business VPs, since Company A wanted to claim the monikers ""data driven"" and ""AI powered"" in their upcoming shareholder meetings. In 3 or 4 years of existence, team Y produced a few Python and R scripts. Their architectural experience  consisted almost entirely in connecting Flask to S3 buckets or Redshift tables, with a couple of the more resourceful ones learning how to plug their models into Tableau or how to spin up a Kuberneties pod.  But they needn't worry: The aforementioned manager, who was now a director (and was also doing an online Masters to make up for his qualifications gap and bolster his chances of becoming VP soon - at least he now understands what L1 regularization is), was a master at playing corporate politics and self-promotion. No matter how few actionable insights team Y produced or how little code they deployed to production, he always had their back and made sure they had ample funding. In fact he now had grandiose plans for setting up an all-purpose machine learning platform that can be used to solve all of the company's data problems. 

A couple of sharp minded members of team Y, upon googling their industry name along with the word ""data science"", realized that risk analysis was a prime candidate for being solved with Bayesian models, and there was already a nifty R package for doing just that, whose tutorial they went through on R-Bloggers.com. One of them had even submitted a Bayesian classifier Kernel for a competition on Kaggle (he was 203rd on the leaderboard), and was eager to put his new-found expertise to use on a real world problem. They pitched the idea to their director, who saw a perfect use case for his upcoming ML platform. They started work on it immediately, without bothering to check whether anybody at Company A was already doing risk analysis. Since their org was independent, they didn't really need to check with anybody else before they got funding for their initiative. Although it was basically a Naive Bayes classifier, the term ML was added to the project tile, to impress the board. 

As they progressed with their work however, tensions started to build. They had asked the data warehousing and CA analytics teams to build pipelines for them, and word eventually got out to team X about their project. Team X was initially thrilled: They offered to collaborate whole heartedly, and would have loved to add an ML based feather to their already impressive cap. The product owners and analysts were totally onboard as well: They saw a chance to get in on the whole Data Science hype that they kept hearing about. But through some weird mix of arrogance and insecurity, team Y refused to collaborate with them or share any of their long term goals with them, even as they went to other parts of the company giving brown bag presentations and tutorials on the new model they created. 

Team X got resentful: from what they saw of team Y's model, their approach was hopelessly naive and had little chances of scaling or being sustainable in production, and they knew exactly how to help with that. Deploying the model to production would have taken them a few days, given how comfortable they were with DevOps and continuous delivery (team Y had taken several months to figure out how to deploy a simple R script to production). And despite how old school their own tech was, team X were crafty enough to be able to plug it in to their existing architecture. Moreover, the output of the model was such that it didn't take into account how the business will consume it or how it was going to be fed to downstream systems, and the product owners could have gone a long way in making the model more amenable to adoption by the business stakeholders. But team Y wouldn't listen, and their leads brushed off any attempts at communication, let alone collaboration. The vibe that team Y was giving off was ""We are the cutting edge ML team, you guys are the legacy server grunts. We don't need your opinion."", and they seemed to have a complete disregard for domain knowledge, or worse, they thought that all that domain knowledge consisted of was being able to grasp the definitions of a few business metrics. 

Team X got frustrated and tried to express their concerns to leadership. But despite owning a vital link in Company A's business process, they were only \~50 people in a large 1000 strong technology and operations org, and they were several layers removed from the C-suite, so it was impossible for them to get their voices heard. 

Meanwhile, the unstoppable director was doing what he did best: Playing corporate politics. Despite how little his team had actually delivered, he had convinced the board that all analysis and optimization tasks should now be migrated to his yet to be delivered ML platform. Since most leaders now knew that there was overlap between team Y and team X's objectives, his pitch was no longer that team Y was going to create a new insight, but that they were going to replace (or modernize) the legacy statistics based on-prem tools with more accurate cloud based ML tools. Never mind that there was no support in the academic literature for the idea that Naive Bayes works better than the Econometric approaches used by team X, let alone the additional wacky idea that Bayesian Optimization would definitely outperform the QP solvers that were running in production. 

Unbeknownst to team X, the original Bayesian risk analysis project has now grown into a multimillion dollar major overhaul initiative, which included the eventual replacement of all of the tools and functions supported by team X along with the necessary migration to the cloud. The CIO and a couple of business VPs are on now board, and tech leadership is treating it as a done deal.

An outside vendor, a startup who nobody had heard of, was contracted to help build the platform, since team Y has no engineering skills. The choice was deliberate, as calling on any of the established consulting or software companies would have eventually led leadership to the conclusion that team X was better suited for a transformation on this scale than team Y. 

Team Y has no experience with any major ERP deployments, and no domain knowledge, yet they are being tasked with fundamentally changing the business process that is at the core of Company A's business. Their models actually perform worse than those deployed by team X, and their architecture is hopelessly simplistic, compared to what is necessary for running such a solution in production. 

Ironically, using Bayesian thinking and based on all the evidence, the likelihood that team Y succeeds is close to 0%. 

At best, the project is going to end up being a write off of 50 million dollars or more. Once the !@#$!@# hits the fan, a couple of executive heads are going to role, and dozens of people will get laid off.

At worst, given how vital risk analysis and portfolio optimization is to Company A's revenue stream, the failure will eventually sink the whole company. It probably won't go bankrupt, but it will lose a significant portion of its business and work force. Failed ERP implementations can and do sink large companies: Just see what happened to National Grid US, SuperValu or Target Canada. 

One might argue that this is more about corporate disfunction and bad leadership than about data science and AI. 

But I disagree. I think the core driver of this debacle is indeed the blind faith in Data Scientists, ML models and the promise of AI, and the overall culture of hype and self promotion that is very common among the ML crowd. 

We haven't seen the end of this story: I sincerely hope that this ends well for the sake of my colleagues and all involved. Company A is a good company, and both its customers and its employees deserver better. But the chances of that happening are negligible given all the information available, and this failure will hit my company hard. "
23,machinelearning,open-ai,top,2022-12-24 14:58:19,[R][P] I made an app for Instant Image/Text to 3D using PointE from OpenAI,perception-eng,False,0.97,765,zubg2u,https://i.redd.it/ox6urwwa1v7a1.gif,42,1671893899.0,
24,machinelearning,open-ai,top,2023-03-18 10:15:33,[D] Totally Open Alternatives to ChatGPT,KingsmanVince,False,0.98,746,11uk8ti,https://www.reddit.com/r/MachineLearning/comments/11uk8ti/d_totally_open_alternatives_to_chatgpt/,70,1679134533.0,"I have migrated this to GitHub for easy contribution: https://github.com/nichtdax/awesome-totally-open-chatgpt

By alternative, I mean projects feature different language model for chat system.
I do **not** count alternative **frontend** projects because they just call the API from OpenAI. 
I do **not** consider alternative **transformer decoder** to GPT 3.5 either because the training data of them are (mostly) not for chat system.

Tags:

-   B: bare (no data, no model's weight, no chat system)
-   F: full (yes data, yes model's weight, yes chat system including TUI and GUI)

| Project                                                                               | Description                                                                                                                                                                                                                                                                                                                                                                               | Tags |
| ------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---- |
| [lucidrains/PaLM-rlhf-pytorch](https://github.com/lucidrains/PaLM-rlhf-pytorch)       | Implementation of RLHF (Reinforcement Learning with Human Feedback) on top of the PaLM architecture. Basically ChatGPT but with PaLM                                                                                                                                                                                                                                                      | B    |
| [togethercomputer/OpenChatKit](https://github.com/togethercomputer/OpenChatKit)       | OpenChatKit provides a powerful, open-source base to create both specialized and general purpose chatbots for various applications. [Demo](https://huggingface.co/spaces/togethercomputer/OpenChatKit)                                                                                                                                                                                    | F    |
| [oobabooga/text-generation-webui](https://github.com/oobabooga/text-generation-webui) | A gradio web UI for running Large Language Models like GPT-J 6B, OPT, GALACTICA, LLaMA, and Pygmalion.                                                                                                                                                                                                                                                                                    | F    |
| [KoboldAI/KoboldAI-Client](https://github.com/KoboldAI/KoboldAI-Client)               | This is a browser-based front-end for AI-assisted writing with multiple local & remote AI models. It offers the standard array of tools, including Memory, Author's Note, World Info, Save & Load, adjustable AI settings, formatting options, and the ability to import existing AI Dungeon adventures. You can also turn on Adventure mode and play the game like AI Dungeon Unleashed. | F    |
| [LAION-AI/Open-Assistant/](https://github.com/LAION-AI/Open-Assistant/)               | OpenAssistant is a chat-based assistant that understands tasks, can interact with third-party systems, and retrieve information dynamically to do so.                                                                                                                                                                                                                                     | F    |"
25,machinelearning,open-ai,top,2021-01-12 13:53:03,[D] Here are 17 ways of making PyTorch training faster – what did I miss?,lorenzkuhn,False,0.98,741,kvs1ex,https://www.reddit.com/r/MachineLearning/comments/kvs1ex/d_here_are_17_ways_of_making_pytorch_training/,38,1610459583.0,"[I've been collecting methods to accelerate training in PyTorch](https://efficientdl.com/faster-deep-learning-in-pytorch-a-guide/) – here's what I've found so far. What did I miss? What did I get wrong?

The methods – roughly sorted from largest to smallest expected speed-up – are:

1. Consider using a different learning rate schedule.
2. Use multiple workers and pinned memory in DataLoader.
3. Max out the batch size.
4. Use Automatic Mixed Precision (AMP).
5. Consider using a different optimizer.
6. Turn on cudNN benchmarking.
7. Beware of frequently transferring data between CPUs and GPUs.
8. Use gradient/activation checkpointing.
9. Use gradient accumulation.
10. Use DistributedDataParallel for multi-GPU training.
11. Set gradients to None rather than 0.
12. Use .as\_tensor rather than .tensor()
13. Turn off debugging APIs if not needed.
14. Use gradient clipping.
15. Turn off bias before BatchNorm.
16. Turn off gradient computation during validation.
17. Use input and batch normalization.

## 1. Consider using another learning rate schedule

The learning rate (schedule) you choose has a large impact on the speed of convergence as well as the generalization performance of your model.

Cyclical Learning Rates and the 1Cycle learning rate schedule are both methods introduced by Leslie N. Smith ([here](https://arxiv.org/pdf/1506.01186.pdf) and [here](https://arxiv.org/abs/1708.07120)), and then popularised by fast.ai's Jeremy Howard and Sylvain Gugger ([here](https://www.fast.ai/2018/07/02/adam-weight-decay/) and [here](https://github.com/sgugger/Deep-Learning/blob/master/Cyclical%20LR%20and%20momentums.ipynb)). Essentially, the 1Cycle learning rate schedule looks something like this:

&#x200B;

https://preview.redd.it/sc37u5knmxa61.png?width=476&format=png&auto=webp&s=09b309b4dbd67eedb4ab5f86e03e0e83d7b072d1

Sylvain writes:

>\[1cycle consists of\]  two steps of equal lengths, one going from a lower learning rate to a higher one than go back to the minimum. The maximum should be the value picked with the Learning Rate Finder, and the lower one can be ten times lower. Then, the length of this cycle should be slightly less than the total number of epochs, and, in the last part of training, we should allow the learning rate to decrease more than the minimum, by several orders of magnitude.

In the best case this schedule achieves a massive speed-up – what Smith calls *Superconvergence* – as compared to conventional learning rate schedules. Using the 1Cycle policy he needs \~10x fewer training iterations of a ResNet-56 on ImageNet to match the performance of the original paper, for instance). The schedule seems to perform robustly well across common architectures and optimizers.

PyTorch implements both of these methods `torch.optim.lr_scheduler.CyclicLR` and `torch.optim.lr_scheduler.OneCycleLR,` see [the documentation](https://pytorch.org/docs/stable/optim.html).

One drawback of these schedulers is that they introduce a number of additional hyperparameters. [This post](https://towardsdatascience.com/hyper-parameter-tuning-techniques-in-deep-learning-4dad592c63c8) and [this repo](https://github.com/davidtvs/pytorch-lr-finder), offer a nice overview and implementation of how good hyper-parameters can be found including the Learning Rate Finder mentioned above.

Why does this work? It doesn't seem entirely clear but one[ possible explanation](https://arxiv.org/pdf/1506.01186.pdf) might be that regularly increasing the learning rate helps to traverse [saddle points in the loss landscape ](https://papers.nips.cc/paper/2015/file/430c3626b879b4005d41b8a46172e0c0-Paper.pdf)more quickly.

## 2. Use multiple workers and pinned memory in DataLoader

When using [torch.utils.data.DataLoader](https://pytorch.org/docs/stable/data.html#torch.utils.data.DataLoader), set `num_workers > 0`, rather than the default value of 0, and `pin_memory=True`, rather than the default value of False. Details of this are [explained here](https://pytorch.org/docs/stable/data.html).

[Szymon Micacz](https://nvlabs.github.io/eccv2020-mixed-precision-tutorial/files/szymon_migacz-pytorch-performance-tuning-guide.pdf) achieves a 2x speed-up for a single training epoch by using four workers and pinned memory.

A rule of thumb that [people are using ](https://discuss.pytorch.org/t/guidelines-for-assigning-num-workers-to-dataloader/813/5)to choose the number of workers is to set it to four times the number of available GPUs with both a larger and smaller number of workers leading to a slow down.

Note that increasing num\_workerswill increase your CPU memory consumption.

## 3. Max out the batch size

This is a somewhat contentious point. Generally, however, it seems like using the largest batch size your GPU memory permits will accelerate your training (see [NVIDIA's Szymon Migacz](https://nvlabs.github.io/eccv2020-mixed-precision-tutorial/files/szymon_migacz-pytorch-performance-tuning-guide.pdf), for instance). Note that you will also have to adjust other hyperparameters, such as the learning rate, if you modify the batch size. A rule of thumb here is to double the learning rate as you double the batch size.

[OpenAI has a nice empirical paper](https://arxiv.org/pdf/1812.06162.pdf) on the number of convergence steps needed for different batch sizes. [Daniel Huynh](https://towardsdatascience.com/implementing-a-batch-size-finder-in-fastai-how-to-get-a-4x-speedup-with-better-generalization-813d686f6bdf) runs some experiments with different batch sizes (also using the 1Cycle policy discussed above) where he achieves a 4x speed-up by going from batch size 64 to 512.

[One of the downsides](https://arxiv.org/pdf/1609.04836.pdf) of using large batch sizes, however, is that they might lead to solutions that generalize worse than those trained with smaller batches.

## 4. Use Automatic Mixed Precision (AMP)

The release of PyTorch 1.6 included a native implementation of Automatic Mixed Precision training to PyTorch. The main idea here is that certain operations can be run faster and without a loss of accuracy at semi-precision (FP16) rather than in the single-precision (FP32) used elsewhere. AMP, then, automatically decide which operation should be executed in which format. This allows both for faster training and a smaller memory footprint.

In the best case, the usage of AMP would look something like this:

    import torch
    # Creates once at the beginning of training
    scaler = torch.cuda.amp.GradScaler()
    
    for data, label in data_iter:
       optimizer.zero_grad()
       # Casts operations to mixed precision
       with torch.cuda.amp.autocast():
          loss = model(data)
    
       # Scales the loss, and calls backward()
       # to create scaled gradients
       scaler.scale(loss).backward()
    
       # Unscales gradients and calls
       # or skips optimizer.step()
       scaler.step(optimizer)
    
       # Updates the scale for next iteration
       scaler.update()

Benchmarking a number of common language and vision models on NVIDIA V100 GPUs, [Huang and colleagues find](https://pytorch.org/blog/accelerating-training-on-nvidia-gpus-with-pytorch-automatic-mixed-precision/) that using AMP over regular FP32 training yields roughly 2x – but upto 5.5x – training speed-ups.

Currently, only CUDA ops can be autocast in this way. See the [documentation](https://pytorch.org/docs/stable/amp.html#op-eligibility) here for more details on this and other limitations.

u/SVPERBlA points out that you can squeeze out some additional performance (\~ 20%) from AMP on NVIDIA Tensor Core GPUs if you convert your tensors to the [Channels Last memory format](https://pytorch.org/tutorials/intermediate/memory_format_tutorial.html). Refer to [this section](https://docs.nvidia.com/deeplearning/performance/dl-performance-convolutional/index.html#tensor-layout) in the NVIDIA docs for an explanation of the speedup and more about NCHW versus NHWC tensor formats.

## 5. Consider using another optimizer

AdamW is Adam with weight decay (rather than L2-regularization) which was popularized by fast.ai and is now available natively in PyTorch as `torch.optim.AdamW`. AdamW seems to consistently outperform Adam in terms of both the error achieved and the training time. See [this excellent blog](https://www.fast.ai/2018/07/02/adam-weight-decay/) post on why using weight decay instead of L2-regularization makes a difference for Adam.

Both Adam and AdamW work well with the 1Cycle policy described above.

There are also a few not-yet-native optimizers that have received a lot of attention recently, most notably LARS ([pip installable implementation](https://github.com/kakaobrain/torchlars)) and [LAMB](https://github.com/cybertronai/pytorch-lamb).

NVIDA's APEX implements fused versions of a number of common optimizers such as [Adam](https://nvidia.github.io/apex/optimizers.html). This implementation avoid a number of passes to and from GPU memory as compared to the PyTorch implementation of Adam, yielding speed-ups in the range of 5%.

## 6. Turn on cudNN benchmarking

If your model architecture remains fixed and your input size stays constant, setting `torch.backends.cudnn.benchmark = True` might be beneficial ([docs](https://pytorch.org/docs/stable/backends.html#torch-backends-cudnn)). This enables the cudNN autotuner which will benchmark a number of different ways of computing convolutions in cudNN and then use the fastest method from then on.

For a rough reference on the type of speed-up you can expect from this, [Szymon Migacz](https://nvlabs.github.io/eccv2020-mixed-precision-tutorial/files/szymon_migacz-pytorch-performance-tuning-guide.pdf) achieves a speed-up of 70% on a forward pass for a convolution and a 27% speed-up for a forward + backward pass of the same convolution.

One caveat here is that this autotuning might become very slow if you max out the batch size as mentioned above.

## 7. Beware of frequently transferring data between CPUs and GPUs

Beware of frequently transferring tensors from a GPU to a CPU using `tensor.cpu()` and vice versa using `tensor.cuda()` as these are relatively expensive. The same applies for `.item()` and `.numpy()` – use `.detach()` instead.

If you are creating a new tensor, you can also directly assign it to your GPU using the keyword argument `device=torch.device('cuda:0')`.

If you do need to transfer data, using `.to(non_blocking=True)`, might be useful [as long as you don't have any synchronization points](https://discuss.pytorch.org/t/should-we-set-non-blocking-to-true/38234/4) after the transfer.

If you really have to, you might want to give Santosh Gupta's [SpeedTorch](https://github.com/Santosh-Gupta/SpeedTorch) a try, although it doesn't seem entirely clear when this actually does/doesn't provide speed-ups.

## 8. Use gradient/activation checkpointing

Quoting directly from the [documentation](https://pytorch.org/docs/stable/checkpoint.html):

>Checkpointing works by trading compute for memory. Rather than storing all intermediate activations of the entire computation graph for computing backward, the checkpointed part does **not** save intermediate activations, and instead recomputes them in backward pass. It can be applied on any part of a model.  
>  
>Specifically, in the forward pass, function will run in [torch.no\_grad()](https://pytorch.org/docs/stable/generated/torch.no_grad.html#torch.no_grad) manner, i.e., not storing the intermediate activations. Instead, the forward pass saves the inputs tuple and the functionparameter. In the backwards pass, the saved inputs and function is retrieved, and the forward pass is computed on function again, now tracking the intermediate activations, and then the gradients are calculated using these activation values.

So while this will might slightly increase your run time for a given batch size, you'll significantly reduce your memory footprint. This in turn will allow you to further increase the batch size you're using allowing for better GPU utilization.

While checkpointing is implemented natively as `torch.utils.checkpoint`([docs](https://pytorch.org/docs/stable/checkpoint.html)), it does seem to take some thought and effort to implement properly. Priya Goyal [has a good tutorial ](https://github.com/prigoyal/pytorch_memonger/blob/master/tutorial/Checkpointing_for_PyTorch_models.ipynb)demonstrating some of the key aspects of checkpointing.

## 9. Use gradient accumulation

Another approach to increasing the batch size is to accumulate gradients across multiple `.backward()` passes before calling optimizer.step().

Following [a post](https://medium.com/huggingface/training-larger-batches-practical-tips-on-1-gpu-multi-gpu-distributed-setups-ec88c3e51255) by Hugging Face's Thomas Wolf, gradient accumulation can be implemented as follows:

    model.zero_grad()                                   # Reset gradients tensors
    for i, (inputs, labels) in enumerate(training_set):
        predictions = model(inputs)                     # Forward pass
        loss = loss_function(predictions, labels)       # Compute loss function
        loss = loss / accumulation_steps                # Normalize our loss (if averaged)
        loss.backward()                                 # Backward pass
        if (i+1) % accumulation_steps == 0:             # Wait for several backward steps
            optimizer.step()                            # Now we can do an optimizer step
            model.zero_grad()                           # Reset gradients tensors
            if (i+1) % evaluation_steps == 0:           # Evaluate the model when we...
                evaluate_model()                        # ...have no gradients accumulate

This method was developed mainly to circumvent GPU memory limitations and I'm not entirely clear on the trade-off between having additional `.backward()` loops. [This discussion](https://forums.fast.ai/t/accumulating-gradients/33219/28) on the fastai forum seems to suggest that it can in fact accelerate training, so it's probably worth a try.

## 10. Use Distributed Data Parallel for multi-GPU training

Methods to accelerate distributed training probably warrant their own post but one simple one is to use `torch.nn.DistributedDataParallel` rather than `torch.nn.DataParallel`. By doing so, each GPU will be driven by a dedicated CPU core avoiding the GIL issues of DataParallel.

In general, I can strongly recommend reading the [documentation on distributed training.](https://pytorch.org/tutorials/beginner/dist_overview.html)

## 11. Set gradients to None rather than 0

Use `.zero_grad(set_to_none=True)` rather than `.zero_grad()`.

Doing so will let the memory allocator handle the gradients rather than actively setting them to 0. This will lead to yield a *modest* speed-up as they say in the [documentation](https://pytorch.org/docs/stable/optim.html), so don't expect any miracles.

Watch out, doing this is not side-effect free! Check the docs for the details on this.

## 12. Use .as_tensor() rather than .tensor()

`torch.tensor()` always copies data. If you have a numpy array that you want to convert, use `torch.as_tensor()` or `torch.from_numpy()` to avoid copying the data.

## 13. Turn on debugging tools only when actually needed

PyTorch offers a number of useful debugging tools like the [autograd.profiler](https://pytorch.org/docs/stable/autograd.html#profiler), [autograd.grad\_check](https://pytorch.org/docs/stable/autograd.html#numerical-gradient-checking), and [autograd.anomaly\_detection](https://pytorch.org/docs/stable/autograd.html#anomaly-detection). Make sure to use them to better understand when needed but to also turn them off when you don't need them as they will slow down your training.

## 14. Use gradient clipping

Originally used to avoid exploding gradients in RNNs, there is both some [empirical evidence as well as some theoretical support](https://openreview.net/forum?id=BJgnXpVYwS) that clipping gradients (roughly speaking: `gradient = min(gradient, threshold)`) accelerates convergence.

Hugging Face's [Transformer implementation](https://github.com/huggingface/transformers/blob/7729ef738161a0a182b172fcb7c351f6d2b9c50d/examples/run_squad.py#L156) is a really clean example of how to use gradient clipping as well as some of the other methods such as AMP mentioned in this post.

In PyTorch this can be done using `torch.nn.utils.clip_grad_norm_`([documentation](https://pytorch.org/docs/stable/generated/torch.nn.utils.clip_grad_norm_.html#torch.nn.utils.clip_grad_norm_)).

It's not entirely clear to me which models benefit how much from gradient clipping but it seems to be robustly useful for RNNs, Transformer-based and ResNets architectures and a range of different optimizers.

## 15. Turn off bias before BatchNorm

This is a very simple one: turn off the bias of layers before BatchNormalization layers. For a 2-D convolutional layer, this can be done by setting the bias keyword to False: `torch.nn.Conv2d(..., bias=False, ...)`.  (Here's a r[eminder why this makes sense](https://stackoverflow.com/questions/46256747/can-not-use-both-bias-and-batch-normalization-in-convolution-layers).)

You will save some parameters, I would however expect the speed-up of this to be relatively small as compared to some of the other methods mentioned here.

## 16. Turn off gradient computation during validation

This one is straightforward: set `torch.no_grad()` during validation.

## 17. Use input and batch normalization

You're probably already doing this but you might want to double-check:

* Are you [normalizing](https://pytorch.org/docs/stable/torchvision/transforms.html) your input?
* Are you using [batch-normalization](https://pytorch.org/docs/stable/generated/torch.nn.BatchNorm2d.html)?

And [here's](https://stats.stackexchange.com/questions/437840/in-machine-learning-how-does-normalization-help-in-convergence-of-gradient-desc) a reminder of why you probably should.

### Bonus tip from the comments: Use JIT to fuse point-wise operations.

If you have adjacent point-wise operations you can use [PyTorch JIT](https://pytorch.org/docs/stable/jit.html#creating-torchscript-code) to combine them into one FusionGroup which can then be launched on a single kernel rather than multiple kernels as would have been done per default. You'll also save some memory reads and writes.

[Szymon Migacz shows](https://nvlabs.github.io/eccv2020-mixed-precision-tutorial/files/szymon_migacz-pytorch-performance-tuning-guide.pdf) how you can use the `@torch.jit.script` decorator to fuse the operations in a GELU, for instance:

    @torch.jit.script
    def fused_gelu(x):
        return x * 0.5 * (1.0 + torch.erf(x / 1.41421))

In this case, fusing the operations leads to a 5x speed-up for the execution of `fused_gelu`  
as compared to the unfused version.

See also [this post](https://pytorch.org/blog/optimizing-cuda-rnn-with-torchscript/) for an example of how Torchscript can be used to accelerate an RNN.

Hat tip to u/Patient_Atmosphere45 for the suggestion.

## Sources and additional resources

Many of the tips listed above come from Szymon Migacz' [talk](https://www.youtube.com/watch?v=9mS1fIYj1So) and post in the [PyTorch docs](https://pytorch.org/tutorials/recipes/recipes/tuning_guide.html).

PyTorch Lightning's William Falcon has [two](https://towardsdatascience.com/9-tips-for-training-lightning-fast-neural-networks-in-pytorch-8e63a502f565) [interesting](https://towardsdatascience.com/7-tips-for-squeezing-maximum-performance-from-pytorch-ca4a40951259) posts with tips to speed-up training. [PyTorch Lightning](https://github.com/PyTorchLightning/pytorch-lightning) does already take care of some of the points above per-default.

Thomas Wolf at Hugging Face has a [number](https://medium.com/@Thomwolf) of interesting articles on accelerating deep learning – with a particular focus on language models.

The same goes for [Sylvain Gugger](https://sgugger.github.io/category/basics.html) and [Jeremy Howard](https://www.youtube.com/watch?v=LqGTFqPEXWs): they have many interesting posts in particular on [learning](https://sgugger.github.io/the-1cycle-policy.html) [rates](https://sgugger.github.io/how-do-you-find-a-good-learning-rate.html) and [AdamW](https://www.fast.ai/2018/07/02/adam-weight-decay/).

*Thanks to Ben Hahn, Kevin Klein and Robin Vaaler for their feedback on a draft of this post!*

**I've also put all of the above into this** [**blog post**](https://efficientdl.com/faster-deep-learning-in-pytorch-a-guide/)**.**"
26,machinelearning,open-ai,top,2023-01-14 09:35:51,"[N] Class-action law­suit filed against Sta­bil­ity AI, DeviantArt, and Mid­journey for using the text-to-image AI Sta­ble Dif­fu­sion",Wiskkey,False,0.95,694,10bkjdk,https://i.redd.it/rg6vkf9xvyba1.png,724,1673688951.0,
27,machinelearning,open-ai,top,2022-05-09 16:39:27,"[N] Hugging Face raised $100M at $2B to double down on community, open-source & ethics",Britney-Ramona,False,0.95,675,ulvdgm,https://www.reddit.com/r/MachineLearning/comments/ulvdgm/n_hugging_face_raised_100m_at_2b_to_double_down/,55,1652114367.0,"👋 Hey there! Britney Muller here from Hugging Face. We've got some big news to share!

* Hugging Face Full Series C Announcement: [https://huggingface.co/blog/series-c](https://huggingface.co/blog/series-c)
* TechCrunch: [https://techcrunch.com/2022/05/09/hugging-face-reaches-2-billion-valuation-to-build-the-github-of-machine-learning/](https://techcrunch.com/2022/05/09/hugging-face-reaches-2-billion-valuation-to-build-the-github-of-machine-learning/)

We want to have a positive impact on the AI field. We think the direction of more responsible AI is through openly sharing models, datasets, training procedures, evaluation metrics and working together to solve issues. We believe open source and open science bring trust, robustness, reproducibility, and continuous innovation. With this in mind, we are leading [**BigScience**](https://bigscience.huggingface.co/), a collaborative workshop around the study and creation of very large language models gathering more than 1,000 researchers of all backgrounds and disciplines. We are now training the [**world's largest open source multilingual language model**](https://twitter.com/BigScienceLLM) 🌸

Over 10,000 companies are now using Hugging Face to build technology with machine learning. Their Machine Learning scientists, Data scientists and Machine Learning engineers have saved countless hours while accelerating their machine learning roadmaps with the help of our [**products**](https://huggingface.co/platform) and [**services**](https://huggingface.co/support).

⚠️ But there’s still a huge amount of work left to do.

At Hugging Face, we know that Machine Learning has some important limitations and challenges that need to be tackled now like biases, privacy, and energy consumption. With openness, transparency & collaboration, we can foster responsible & inclusive progress, understanding & accountability to mitigate these challenges.

Thanks to the new funding, we’ll be doubling down on research, open-source, products and responsible democratization of AI."
28,machinelearning,open-ai,top,2021-01-04 15:33:43,[D] Why I'm Lukewarm on Graph Neural Networks,VodkaHaze,False,0.96,674,kqazpd,https://www.reddit.com/r/MachineLearning/comments/kqazpd/d_why_im_lukewarm_on_graph_neural_networks/,105,1609774423.0,"**TL;DR:** GNNs can provide wins over simpler embedding methods, but we're at a point where other research directions matter more

I also posted it on my [blog here](https://www.singlelunch.com/2020/12/28/why-im-lukewarm-on-graph-neural-networks/), has footnotes, a nicer layout with inlined images, etc.

-----------

I'm only lukewarm on Graph Neural Networks (GNNs). There, I said it.

It might sound crazy GNNs are one of the hottest fields in machine learning right now. [There][1] were at least [four][2] [review][3] [papers][4] just in the last few months. I think some progress can come of this research, but we're also focusing on some incorrect places.

But first, let's take a step back and go over the basics.

# Models are about compression

We say graphs are a ""non-euclidean"" data type, but that's not really true. A regular graph is just another way to think about a particular flavor of square matrix called the [adjacency matrix][5], like [this](https://www.singlelunch.com/wp-content/uploads/2020/12/AdjacencyMatrices_1002.gif).

It's weird, we look at run-of-the-mill matrix full of real numbers and decide to call it ""non-euclidean"".

This is for practical reasons. Most graphs are fairly sparse, so the matrix is full of zeros. At this point, *where the non-zero numbers are* matters most, which makes the problem closer to (computationally hard) discrete math rather than (easy) continuous, gradient-friendly math.

**If you had the full matrix, life would be easy**

If we step out of the pesky realm of physics for a minute, and assume carrying the full adjacency matrix around isn't a problem, we solve a bunch of problems.

First, network node embeddings aren't a thing anymore. A node is a just row in the matrix, so it's already a vector of numbers.

Second, all network prediction problems are solved. A powerful enough and well-tuned model will simply extract all information between the network and whichever target variable we're attaching to nodes.

**NLP is also just fancy matrix compression**

Let's take a tangent away from graphs to NLP. Most NLP we do can be [thought of in terms of graphs][6] as we'll see, so it's not a big digression.

First, note that Ye Olde word embedding models like [Word2Vec][7] and [GloVe][8] are [just matrix factorization][9].

The GloVe algorithm works on a variation of the old [bag of words][10] matrix. It goes through the sentences and creates a (implicit) [co-occurence][11] graph where nodes are words and the edges are weighed by how often the words appear together in a sentence.

Glove then does matrix factorization on the matrix representation of that co-occurence graph, Word2Vec is mathematically equivalent.

You can read more on this in my [post on embeddings][12] and the one (with code) on [word embeddings][13].

**Even language models are also just matrix compression**

Language models are all the rage. They dominate most of the [state of the art][14] in NLP.

Let's take BERT as our main example. BERT predicts a word given the context of the [rest of the sentence](https://www.singlelunch.com/wp-content/uploads/2020/12/bert.png).

This grows the matrix we're factoring from flat co-occurences on pairs of words to co-occurences conditional on the sentence's context, like [this](https://www.singlelunch.com/wp-content/uploads/2020/12/Screen-Shot-2020-12-28-at-1.59.34-PM.png)

We're growing the ""ideal matrix"" we're factoring combinatorially. As noted by [Hanh & Futrell][15]:

> [...] human language—and language modelling—has infinite statistical complexity but that it can be approximated well at lower levels. This observation has two implications: 1) We can obtain good results with comparatively small models; and 2) there is a lot of potential for scaling up our models. Language models tackle such a large problem space that they probably approximate a compression of the entire language in the [Kolmogorov Complexity][16] sense. It's also possible that huge language models just [memorize a lot of it][17] rather than compress the information, for what it's worth.

### Can we upsample any graph like language models do?

We're already doing it.

Let's call a **first-order** embedding of a graph a method that works by directly factoring the graph's adjacency matrix or [Laplacian matrix][18]. If you embed a graph using [Laplacian Eigenmaps][19] or by taking the [principal components][20] of the Laplacian, that's first order. Similarly, GloVe is a first-order method on the graph of word co-occurences. One of my favorites first order methods for graphs is [ProNE][21], which works as well as most methods while being two orders of magnitude faster.

A **higher-order** method embeds the original matrix plus connections of neighbours-of-neighbours (2nd degree) and deeper k-step connections. [GraRep][22], shows you can always generate higher-order representations from first order methods by augmenting the graph matrix.

Higher order method are the ""upsampling"" we do on graphs. GNNs that sample on large neighborhoods and random-walk based methods like node2vec are doing higher-order embeddings.

# Where are the performance gain?

Most GNN papers in the last 5 years present empirical numbers that are useless for practitioners to decide on what to use.

As noted in the [OpenGraphsBenchmark][4] (OGB) paper, GNN papers do their empirical section on a handful of tiny graphs (Cora, CiteSeer, PubMed) with 2000-20,000 nodes. These datasets can't seriously differentiate between methods.

Recent efforts are directly fixing this, but the reasons why researchers focused on tiny, useless datasets for so long are worth discussing.

**Performance matters by task**

One fact that surprises a lot of people is that even though language models have the best performance in a lot of NLP tasks, if all you're doing is cram sentence embeddings into a downstream model, there [isn't much gained][23] from language models embeddings over simple methods like summing the individual Word2Vec word embeddings (This makes sense, because the full context of the sentence is captured in the sentence co-occurence matrix that is generating the Word2Vec embeddings).

Similarly, [I find][24] that for many graphs **simple first-order methods perform just as well on graph clustering and node label prediction tasks than higher-order embedding methods**. In fact higher-order methods are massively computationally wasteful for these usecases.

Recommended first order embedding methods are ProNE and my [GGVec with order=1][25].

Higher order methods normally perform better on the link prediction tasks. I'm not the only one to find this. In the BioNEV paper, they find: ""A large GraRep order value for link prediction tasks (e.g. 3, 4);a small value for node classification tasks (e.g.1, 2)"" (p.9).

Interestingly, the gap in link prediction performance is inexistant for artificially created graphs. This suggests higher order methods do learn some of the structure intrinsic to [real world graphs][26].

For visualization, first order methods are better. Visualizations of higher order methods tend to have artifacts of their sampling. For instance, Node2Vec visualizations tend to have elongated/filament-like structures which come from the embeddings coming from long single strand random walks. See the following visualizations by [Owen Cornec][27] created by first embedding the graph to 32-300 dimensions using a node embedding algorithm, then mapping this to 2d or 3d with the excellent UMAP algorithm, like [this](https://www.singlelunch.com/wp-content/uploads/2020/12/Screen-Shot-2020-12-28-at-1.59.34-PM-1.png)

Lastly, sometimes simple methods soundly beat higher order methods (there's an instance of it in the OGB paper).

The problem here is that **we don't know when any method is better than another** and **we definitely don't know the reason**.

There's definitely a reason different graph types respond better/worse to being represented by various methods. This is currently an open question.

A big part of why is that the research space is inundated under useless new algorithms because...

# Academic incentives work against progress

Here's the cynic's view of how machine learning papers are made:

1.  Take an existing algorithm
2.  Add some new layer/hyperparameter, make a cute mathematical story for why it matters
3.  Gridsearch your hyperparameters until you beat baselines from the original paper you aped
4.  Absolutely don't gridsearch stuff you're comparing against in your results section
5.  Make a cute ACRONYM for your new method, put impossible to use python 2 code on github (Or no code at all!) and bask in the citations

I'm [not][28] the [only one][29] with these views on the state reproducible research. At least it's gotten slightly better in the last 2 years.

### Sidebar: I hate Node2Vec

A side project of mine is a [node embedding library][25] and the most popular method in it is by far Node2Vec. Don't use Node2Vec.

[Node2Vec][30] with `p=1; q=1` is the [Deepwalk][31] algorithm. Deepwalk is an actual innovation.

The Node2Vec authors closely followed the steps 1-5 including bonus points on step 5 by getting word2vec name recognition.

This is not academic fraud -- the hyperparameters [do help a tiny bit][32] if you gridsearch really hard. But it's the presentable-to-your-parents sister of where you make the ML community worse off to progress your academic career. And certainly Node2Vec doesn't deserve 7500 citations.

# Progress is all about practical issues

We've known how to train neural networks for well over 40 years. Yet they only exploded in popularity with [AlexNet][33] in 2012. This is because implementations and hardware came to a point where deep learning was **practical**.

Similarly, we've known about factoring word co-occurence matrices into Word embeddings for at least 20 years.

But word embeddings only exploded in 2013 with Word2Vec. The breakthrough here was that the minibatch-based methods let you train a Wikipedia-scale embedding model on commodity hardware.

It's hard for methods in a field to make progress if training on a small amount of data takes days or weeks. You're disincentivized to explore new methods. If you want progress, your stuff has to run in reasonable time on commodity hardware. Even Google's original search algorithm [initially ran on commodity hardware][34].

**Efficiency is paramount to progress**

The reason deep learning research took off the way it did is because of improvements in [efficiency][35] as well as much better libraries and hardware support.

**Academic code is terrible**

Any amount of time you spend gridsearching Node2Vec on `p` and `q` is all put to better use gridsearching Deepwalk itself (on number of walks, length of walks, or word2vec hyperparameters). The problem is that people don't gridsearch over deepwalk because implementations are all terrible.

I wrote the [Nodevectors library][36] to have a fast deepwalk implementation because it took **32 hours** to embed a graph with a measly 150,000 nodes using the reference Node2Vec implementation (the same takes 3min with Nodevectors). It's no wonder people don't gridsearch on Deepwalk a gridsearch would take weeks with the terrible reference implementations.

To give an example, in the original paper of [GraphSAGE][37] they their algorithm to DeepWalk with walk lengths of 5, which is horrid if you've ever hyperparameter tuned a deepwalk algorithm. From their paper:

> We did observe DeepWalk’s performance could improve with further training, and in some cases it could become competitive with the unsupervised GraphSAGE approaches (but not the supervised approaches) if we let it run for >1000× longer than the other approaches (in terms of wall clock time for prediction on the test set) I don't even think the GraphSAGE authors had bad intent -- deepwalk implementations are simply so awful that they're turned away from using it properly. It's like trying to do deep learning with 2002 deep learning libraries and hardware.

# Your architectures don't really matter

One of the more important papers this year was [OpenAI's ""Scaling laws""][38] paper, where the raw number of parameters in your model is the most predictive feature of overall performance. This was noted even in the original BERT paper and drives 2020's increase in absolutely massive language models.

This is really just [Sutton' Bitter Lesson][39] in action:

> General methods that leverage computation are ultimately the most effective, and by a large margin

Transformers might be [replacing convolution][40], too. As [Yannic Kilcher said][41], transformers are ruining everything. [They work on graphs][6], in fact it's one of the [recent approaches][42], and seems to be one of the more succesful [when benchmarked][1]

Researchers seem to be putting so much effort into architecture, but it doesn't matter much in the end because you can approximate anything by stacking more layers.

Efficiency wins are great -- but neural net architectures are just one way to achieve that, and by tremendously over-researching this area we're leaving a lot of huge gains elsewhere on the table.

# Current Graph Data Structure Implementations suck

NetworkX is a bad library. I mean, it's good if you're working on tiny graphs for babies, but for anything serious it chokes and forces you to rewrite everything in... what library, really?

At this point most people working on large graphs end up hand-rolling some data structure. This is tough because your computer's memory is a 1-dimensional array of 1's and 0's and a graph has no obvious 1-d mapping.

This is even harder when we take updating the graph (adding/removing some nodes/edges) into account. Here's a few options:

### Disconnected networks of pointers

NetworkX is the best example. Here, every node is an object with a list of pointers to other nodes (the node's edges).

This layout is like a linked list. Linked lists are the [root of all performance evil][43].

Linked lists go completely against how modern computers are designed. Fetching things from memory is slow, and operating on memory is fast (by two orders of magnitude). Whenever you do anything in this layout, you make a roundtrip to RAM. It's slow by design, you can write this in Ruby or C or assembly and it'll be slow regardless, because memory fetches are slow in hardware.

The main advantage of this layout is that adding a new node is O(1). So if you're maintaining a massive graph where adding and removing nodes happens as often as reading from the graph, it makes sense.

Another advantage of this layout is that it ""scales"". Because everything is decoupled from each other you can put this data structure on a cluster. However, you're really creating a complex solution for a problem you created for yourself.

### Sparse Adjacency Matrix

This layout great for read-only graphs. I use it as the backend in my [nodevectors][25] library, and many other library writers use the [Scipy CSR Matrix][44], you can see graph algorithms implemented on it [here][45].

The most popular layout for this use is the [CSR Format][46] where you have 3 arrays holding the graph. One for edge destinations, one for edge weights and an ""index pointer"" which says which edges come from which node.

Because the CSR layout is simply 3 arrays, it scales on a single computer: a CSR matrix can be laid out on a disk instead of in-memory. You simply [memory map][47] the 3 arrays and use them on-disk from there.

With modern NVMe drives random seeks aren't slow anymore, much faster than distributed network calls like you do when scaling the linked list-based graph. I haven't seen anyone actually implement this yet, but it's in the roadmap for my implementation at least.

The problem with this representation is that adding a node or edge means rebuilding the whole data structure.

### Edgelist representations

This representation is three arrays: one for the edge sources, one for the edge destinations, and one for edge weights. [DGL][48] uses this representation internally.

This is a simple and compact layout which can be good for analysis.

The problem compared to CSR Graphs is some seek operations are slower. Say you want all the edges for node #4243. You can't jump there without maintaining an index pointer array.

So either you maintain sorted order and binary search your way there (O(log2n)) or unsorted order and linear search (O(n)).

This data structure can also work on memory mapped disk array, and node append is fast on unsorted versions (it's slow in the sorted version).

# Global methods are a dead end

Methods that work on the **entire graph at once** can't leverage computation, because they run out of RAM at a certain scale.

So any method that want a chance of being the new standard need to be able to update piecemeal on parts of the graph.

**Sampling-based methods**

Sampling Efficiency will matter more in the future

*   **Edgewise local methods**. The only algorithms I know of that do this are GloVe and GGVec, which they pass through an edge list and update embedding weights on each step. 

The problem with this approach is that it's hard to use them for higher-order methods. The advantage is that they easily scale even on one computer. Also, incrementally adding a new node is as simple as taking the existing embeddings, adding a new one, and doing another epoch over the data

*   **Random Walk sampling**. This is used by deepwalk and its descendants, usually for node embeddings rather than GNN methods. This can be computationally expensive and make it hard to add new nodes.

But this does scale, for instance [Instagram][49] use it to feed their recommendation system models

*   **Neighbourhood sampling**. This is currently the most common one in GNNs, and can be low or higher order depending on the neighborhood size. It also scales well, though implementing efficiently can be challenging.

It's currently used by [Pinterest][50]'s recommendation algorithms.

# Conclusion

Here are a few interesting questions:

*   What is the relation between graph types and methods?
*   Consolidated benchmarking like OGB
*   We're throwing random models at random benchmarks without understanding why or when they do better
*   More fundamental research. Heree's one I'm curious about: can other representation types like [Poincarre Embeddings][51] effectively encode directed relationships?

On the other hand, we should **stop focusing on** adding spicy new layers to test on the same tiny datasets. No one cares.

 [1]: https://arxiv.org/pdf/2003.00982.pdf
 [2]: https://arxiv.org/pdf/2002.11867.pdf
 [3]: https://arxiv.org/pdf/1812.08434.pdf
 [4]: https://arxiv.org/pdf/2005.00687.pdf
 [5]: https://en.wikipedia.org/wiki/Adjacency_matrix
 [6]: https://thegradient.pub/transformers-are-graph-neural-networks/
 [7]: https://en.wikipedia.org/wiki/Word2vec
 [8]: https://nlp.stanford.edu/pubs/glove.pdf
 [9]: https://papers.nips.cc/paper/2014/file/feab05aa91085b7a8012516bc3533958-Paper.pdf
 [10]: https://en.wikipedia.org/wiki/Bag-of-words_model
 [11]: https://en.wikipedia.org/wiki/Co-occurrence
 [12]: https://www.singlelunch.com/2020/02/16/embeddings-from-the-ground-up/
 [13]: https://www.singlelunch.com/2019/01/27/word-embeddings-from-the-ground-up/
 [14]: https://nlpprogress.com/
 [15]: http://socsci.uci.edu/~rfutrell/papers/hahn2019estimating.pdf
 [16]: https://en.wikipedia.org/wiki/Kolmogorov_complexity
 [17]: https://bair.berkeley.edu/blog/2020/12/20/lmmem/
 [18]: https://en.wikipedia.org/wiki/Laplacian_matrix
 [19]: http://citeseerx.ist.psu.edu/viewdoc/download;jsessionid=1F03130B02DC485C78BF364266B6F0CA?doi=10.1.1.19.8100&rep=rep1&type=pdf
 [20]: https://en.wikipedia.org/wiki/Principal_component_analysis
 [21]: https://www.ijcai.org/Proceedings/2019/0594.pdf
 [22]: https://dl.acm.org/doi/10.1145/2806416.2806512
 [23]: https://openreview.net/pdf?id=SyK00v5xx
 [24]: https://github.com/VHRanger/nodevectors/blob/master/examples/link%20prediction.ipynb
 [25]: https://github.com/VHRanger/nodevectors
 [26]: https://arxiv.org/pdf/1310.2636.pdf
 [27]: http://byowen.com/
 [28]: https://arxiv.org/pdf/1807.03341.pdf
 [29]: https://www.youtube.com/watch?v=Kee4ch3miVA
 [30]: https://cs.stanford.edu/~jure/pubs/node2vec-kdd16.pdf
 [31]: https://arxiv.org/pdf/1403.6652.pdf
 [32]: https://arxiv.org/pdf/1911.11726.pdf
 [33]: https://en.wikipedia.org/wiki/AlexNet
 [34]: https://en.wikipedia.org/wiki/Google_data_centers#Original_hardware
 [35]: https://openai.com/blog/ai-and-efficiency/
 [36]: https://www.singlelunch.com/2019/08/01/700x-faster-node2vec-models-fastest-random-walks-on-a-graph/
 [37]: https://arxiv.org/pdf/1706.02216.pdf
 [38]: https://arxiv.org/pdf/2001.08361.pdf
 [39]: http://incompleteideas.net/IncIdeas/BitterLesson.html
 [40]: https://arxiv.org/abs/2010.11929
 [41]: https://www.youtube.com/watch?v=TrdevFK_am4
 [42]: https://arxiv.org/pdf/1710.10903.pdf
 [43]: https://www.youtube.com/watch?v=fHNmRkzxHWs
 [44]: https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.csr_matrix.html
 [45]: https://docs.scipy.org/doc/scipy/reference/sparse.csgraph.html
 [46]: https://en.wikipedia.org/wiki/Sparse_matrix#Compressed_sparse_row_(CSR,_CRS_or_Yale_format)
 [47]: https://en.wikipedia.org/wiki/Mmap
 [48]: https://github.com/dmlc/dgl
 [49]: https://ai.facebook.com/blog/powered-by-ai-instagrams-explore-recommender-system/
 [50]: https://medium.com/pinterest-engineering/pinsage-a-new-graph-convolutional-neural-network-for-web-scale-recommender-systems-88795a107f48
 [51]: https://arxiv.org/pdf/1705.08039.pdf"
29,machinelearning,open-ai,top,2021-09-06 13:39:07,[D] How OpenAI Sold its Soul for $1 Billion: The company behind GPT-3 and Codex isn’t as open as it claims.,sensetime,False,0.95,666,pizllt,https://www.reddit.com/r/MachineLearning/comments/pizllt/d_how_openai_sold_its_soul_for_1_billion_the/,107,1630935547.0,"An essay by Alberto Romero that traces the history and developments of OpenAI from the time it became a ""capped-for-profit"" entity from a non-profit entity:

Link: https://onezero.medium.com/openai-sold-its-soul-for-1-billion-cf35ff9e8cd4"
30,machinelearning,open-ai,top,2023-03-09 18:30:58,"[N] GPT-4 is coming next week – and it will be multimodal, says Microsoft Germany - heise online",Singularian2501,False,0.98,660,11mzqxu,https://www.reddit.com/r/MachineLearning/comments/11mzqxu/n_gpt4_is_coming_next_week_and_it_will_be/,80,1678386658.0,"[https://www.heise.de/news/GPT-4-is-coming-next-week-and-it-will-be-multimodal-says-Microsoft-Germany-7540972.html](https://www.heise.de/news/GPT-4-is-coming-next-week-and-it-will-be-multimodal-says-Microsoft-Germany-7540972.html)

>**GPT-4 is coming next week**: at an approximately one-hour hybrid information event entitled ""**AI in Focus - Digital Kickoff"" on 9 March 2023**, four Microsoft Germany employees presented Large Language Models (LLM) like GPT series as a disruptive force for companies and their Azure-OpenAI offering in detail. The kickoff event took place in the German language, news outlet Heise was present. **Rather casually, Andreas Braun, CTO Microsoft Germany** and Lead Data & AI STU, **mentioned** what he said was **the imminent release of GPT-4.** The fact that **Microsoft is fine-tuning multimodality with OpenAI should no longer have been a secret since the release of Kosmos-1 at the beginning of March.**

[ Dr. Andreas Braun, CTO Microsoft Germany and Lead Data  & AI STU at the Microsoft Digital Kickoff: \\""KI im Fokus\\"" \(AI in  Focus, Screenshot\) \(Bild: Microsoft\) ](https://preview.redd.it/rnst03avarma1.jpg?width=1920&format=pjpg&auto=webp&s=c5992e2d6c6daf32e56a0a3ffeeecfe10621f73f)"
31,machinelearning,open-ai,top,2022-12-07 21:28:22,"[D] We're the Meta AI research team behind CICERO, the first AI agent to achieve human-level performance in the game Diplomacy. We’ll be answering your questions on December 8th starting at 10am PT. Ask us anything!",MetaAI_Official,False,0.93,660,zfeh67,https://www.reddit.com/r/MachineLearning/comments/zfeh67/d_were_the_meta_ai_research_team_behind_cicero/,163,1670448502.0,"**EDIT 11:58am PT:** Thanks for all the great questions, we stayed an almost an hour longer than originally planned to try to get through as many as possible — but we’re signing off now! We had a great time and thanks for all thoughtful questions!

PROOF: [https://i.redd.it/8skvttie6j4a1.png](https://i.redd.it/8skvttie6j4a1.png)

We’re part of the research team behind CICERO, Meta AI’s latest research in cooperative AI. CICERO is the first AI agent to achieve human-level performance in the game Diplomacy. Diplomacy is a complex strategy game involving both cooperation and competition that emphasizes natural language negotiation between seven players.   Over the course of 40 two-hour games with 82 human players, CICERO achieved more than double the average score of other players, ranked in the top 10% of players who played more than one game, and placed 2nd out of 19 participants who played at least 5 games.   Here are some highlights from our recent announcement:

* **NLP x RL/Planning:** CICERO combines techniques in NLP and RL/planning, by coupling a controllable dialogue module with a strategic reasoning engine. 
* **Controlling dialogue via plans:** In addition to being grounded in the game state and dialogue history, CICERO’s dialogue model was trained to be controllable via a set of intents or plans in the game. This allows CICERO to use language intentionally and to move beyond imitation learning by conditioning on plans selected by the strategic reasoning engine.
* **Selecting plans:** CICERO uses a strategic reasoning module to make plans (and select intents) in the game. This module runs a planning algorithm which takes into account the game state, the dialogue, and the strength/likelihood of various actions. Plans are recomputed every time CICERO sends/receives a message.
* **Filtering messages:** We built an ensemble of classifiers to detect low quality messages, like messages contradicting the game state/dialogue history or messages which have low strategic value. We used this ensemble to aggressively filter CICERO’s messages. 
* **Human-like play:** Over the course of 72 hours of play – which involved sending 5,277 messages – CICERO was not detected as an AI agent.

You can check out some of our materials and open-sourced artifacts here: 

* [Research paper](https://www.science.org/doi/10.1126/science.ade9097)
* [Project overview](https://ai.facebook.com/research/cicero/)
* [Diplomacy gameplay page](https://ai.facebook.com/research/cicero/diplomacy/)
* [Github repo](https://github.com/facebookresearch/diplomacy_cicero)
* [Our latest blog post](https://ai.facebook.com/blog/cicero-ai-negotiates-persuades-and-cooperates-with-people/)

Joining us today for the AMA are:

* Andrew Goff (AG), 3x Diplomacy World Champion
* Alexander Miller (AM), Research Engineering Manager
* Noam Brown (NB), Research Scientist [(u/NoamBrown)](https://www.reddit.com/user/NoamBrown/)
* Mike Lewis (ML), Research Scientist [(u/mikelewis0)](https://www.reddit.com/user/mikelewis0/)
* David Wu (DW), Research Engineer [(u/icosaplex)](https://www.reddit.com/user/icosaplex/)
* Emily Dinan (ED), Research Engineer
* Anton Bakhtin (AB), Research Engineer
* Adam Lerer (AL), Research Engineer
* Jonathan Gray (JG), Research Engineer
* Colin Flaherty (CF), Research Engineer [(u/c-flaherty)](https://www.reddit.com/user/c-flaherty)

We’ll be here on December 8, 2022 @ 10:00AM PT - 11:00AM PT."
32,machinelearning,open-ai,top,2019-02-15 13:04:39,[Discussion] OpenAI should now change their name to ClosedAI,SirLordDragon,False,0.92,644,aqwcyx,https://www.reddit.com/r/MachineLearning/comments/aqwcyx/discussion_openai_should_now_change_their_name_to/,223,1550235879.0,It's the only way to complete the hype wave.
33,machinelearning,open-ai,top,2017-08-09 18:16:34,[N] DeepMind and Blizzard open StarCraft II as an AI research environment,cherls,False,0.94,625,6sndko,https://deepmind.com/blog/deepmind-and-blizzard-open-starcraft-ii-ai-research-environment/,116,1502302594.0,
34,machinelearning,open-ai,top,2023-02-24 17:21:15,[R] Meta AI open sources new SOTA LLM called LLaMA. 65B version (trained on 1.4T tokens) is competitive with Chinchilla and Palm-540B. 13B version outperforms OPT and GPT-3 175B on most benchmarks.,MysteryInc152,False,0.98,620,11awp4n,https://www.reddit.com/r/MachineLearning/comments/11awp4n/r_meta_ai_open_sources_new_sota_llm_called_llama/,213,1677259275.0,"[https://twitter.com/GuillaumeLample/status/1629151231800115202?t=4cLD6Ko2Ld9Y3EIU72-M2g&s=19](https://twitter.com/GuillaumeLample/status/1629151231800115202?t=4cLD6Ko2Ld9Y3EIU72-M2g&s=19)

Paper here - [https://research.facebook.com/publications/llama-open-and-efficient-foundation-language-models/](https://research.facebook.com/publications/llama-open-and-efficient-foundation-language-models/)"
35,machinelearning,open-ai,top,2021-01-18 09:08:06,[P] The Big Sleep: Text-to-image generation using BigGAN and OpenAI's CLIP via a Google Colab notebook from Twitter user Adverb,Wiskkey,False,0.99,621,kzr4mg,https://www.reddit.com/r/MachineLearning/comments/kzr4mg/p_the_big_sleep_texttoimage_generation_using/,259,1610960886.0,"From [https://twitter.com/advadnoun/status/1351038053033406468](https://twitter.com/advadnoun/status/1351038053033406468):

>The Big Sleep  
>  
>Here's the notebook for generating images by using CLIP to guide BigGAN.  
>  
>It's very much unstable and a prototype, but it's also a fair place to start. I'll likely update it as time goes on.  
>  
>[colab.research.google.com/drive/1NCceX2mbiKOSlAd\_o7IU7nA9UskKN5WR?usp=sharing](https://colab.research.google.com/drive/1NCceX2mbiKOSlAd_o7IU7nA9UskKN5WR?usp=sharing)

I am not the developer of The Big Sleep. [This](https://twitter.com/advadnoun/) is the developer's Twitter account; [this](https://www.reddit.com/user/advadnoun) is the developer's Reddit account.

**Steps to follow to generate the first image in a given Google Colab session**:

1. Optionally, if this is your first time using Google Colab, view this [Colab introduction](https://colab.research.google.com/notebooks/intro.ipynb) and/or this [Colab FAQ](https://research.google.com/colaboratory/faq.html).
2. Click [this link](https://colab.research.google.com/drive/1NCceX2mbiKOSlAd_o7IU7nA9UskKN5WR?usp=sharing).
3. Sign into your Google account if you're not already signed in. Click the ""S"" button in the upper right to do this. Note: Being signed into a Google account has privacy ramifications, such as your Google search history being recorded in your Google account.
4. In the Table of Contents, click ""Parameters"".
5. Find the line that reads ""tx = clip.tokenize('''a cityscape in the style of Van Gogh''')"" and change the text inside of the single quote marks to your desired text; example: ""tx = clip.tokenize('''a photo of New York City''')"". The developer recommends that you keep the three single quote marks on both ends of your desired text so that mult-line text can be used  An alternative is to remove two of the single quotes on each end of your desired text; example: ""tx = clip.tokenize('a photo of New York City')"".
6. In the Table of Contents, click ""Restart the kernel..."".
7. Position the pointer over the first cell in the notebook, which starts with text ""import subprocess"". Click the play button (the triangle) to run the cell. Wait until the cell completes execution.
8. Click menu item ""Runtime->Restart and run all"".
9. In the Table of Contents, click ""Diagnostics"". The output appears near the end of the Train cell that immediately precedes the Diagnostics cell, so scroll up a bit. Every few minutes (or perhaps 10 minutes if Google assigned you relatively slow hardware for this session), a new image will appear in the Train cell that is a refinement of the previous image. This process can go on for as long as you want until Google ends your Google Colab session, which is a total of [up to 12 hours](https://research.google.com/colaboratory/faq.html) for the free version of Google Colab.

**Steps to follow if you want to start a different run using the same Google Colab session:**

1. Click menu item ""Runtime->Interrupt execution"".
2. Save any images that you want to keep by right-clicking on them and using the appropriate context menu command.
3. Optionally, change the desired text. Different runs using the same desired text almost always results in different outputs.
4. Click menu item ""Runtime->Restart and run all"".

**Steps to follow when you're done with your Google Colab session**:

1. Click menu item ""Runtime->Manage sessions"". Click ""Terminate"" to end the session.
2. Optionally, log out of your Google account due to the privacy ramifications of being logged into a Google account.

The first output image in the Train cell (using the notebook's default of seeing every 100th image generated) usually is a very poor match to the desired text, but the second output image often is a decent match to the desired text. To change the default of seeing every 100th image generated, change the number 100 in line ""if itt % 100 == 0:"" in the Train cell to the desired number. **For free-tier Google Colab users, I recommend changing 100 to a small integer such as 5.**

Tips for the text descriptions that you supply:

1. In Section 3.1.4 of OpenAI's [CLIP paper](https://cdn.openai.com/papers/Learning_Transferable_Visual_Models_From_Natural_Language_Supervision.pdf) (pdf), the authors recommend using a text description of the form ""A photo of a {label}."" or ""A photo of a {label}, a type of {type}."" for images that are photographs.
2. A Reddit user gives [these tips](https://www.reddit.com/r/MediaSynthesis/comments/l2hmqn/this_aint_it_chief/gk8g8e9/).
3. The Big Sleep should generate [these 1,000 types of things](https://www.reddit.com/r/MediaSynthesis/comments/l7hbix/tip_for_users_of_the_big_sleep_it_should_on/) better on average than other types of things.

[Here](https://www.digitaltrends.com/news/big-sleep-ai-image-generator/) is an article containing a high-level description of how The Big Sleep works. The Big Sleep uses a modified version of [BigGAN](https://aiweirdness.com/post/182322518157/welcome-to-latent-space) as its image generator component. The Big Sleep uses the ViT-B/32 [CLIP](https://openai.com/blog/clip/) model to rate how well a given image matches your desired text. The best CLIP model according to the CLIP paper authors is the (as of this writing) unreleased ViT-L/14-336px model; see Table 10 on page 40 of the [CLIP paper (pdf)](https://cdn.openai.com/papers/Learning_Transferable_Visual_Models_From_Natural_Language_Supervision.pdf) for a comparison.

There are [many other sites/programs/projects](https://www.reddit.com/r/MachineLearning/comments/ldc6oc/p_list_of_sitesprogramsprojects_that_use_openais/) that use CLIP to steer image/video creation to match a text description.

Some relevant subreddits:

1. [r/bigsleep](https://www.reddit.com/r/bigsleep/) (subreddit for images/videos generated from text-to-image machine learning algorithms).
2. [r/deepdream](https://www.reddit.com/r/deepdream/) (subreddit for images/videos generated from machine learning algorithms).
3. [r/mediasynthesis](https://www.reddit.com/r/mediasynthesis/) (subreddit for media generation/manipulation techniques that use artificial intelligence; this subreddit shouldn't be used to post images/videos unless new techniques are demonstrated, or the images/videos are of high quality relative to other posts).

Example using text 'a black cat sleeping on top of a red clock':

https://preview.redd.it/7xq58v7022c61.png?width=512&format=png&auto=webp&s=a229ae9add555cd1caba31c42b60d907ffe67773

Example using text 'the word ''hot'' covered in ice':

https://preview.redd.it/6kxdp8u3k2c61.png?width=512&format=png&auto=webp&s=5bd078b0111575f5d88a1dc53b0aeb933f3b0da6

Example using text 'a monkey holding a green lightsaber':

https://preview.redd.it/rdsybsoaz2c61.png?width=512&format=png&auto=webp&s=2769d4c6c883c1c35ae0b1c629bebe9bc1d41393

Example using text 'The White House in Washington D.C. at night with green and red spotlights shining on it':

https://preview.redd.it/w4mg90xsf5c61.png?width=512&format=png&auto=webp&s=5f18318de2f77bcd8a86e71e87048fadd30383d1

Example using text '''A photo of the Golden Gate Bridge at night, illuminated by spotlights in a tribute to Prince''':

https://preview.redd.it/cn4ecuafhic61.png?width=512&format=png&auto=webp&s=397c838fdc49f13c5f17110b92c78b95bf0dcac0

Example using text '''a Rembrandt-style painting titled ""Robert Plant decides whether to take the stairway to heaven or the ladder to heaven""''':

https://preview.redd.it/h7rb3y6j5jc61.png?width=512&format=png&auto=webp&s=537bfe8210af185647b00e7585c948aa2c4e0ffb

Example using text '''A photo of the Empire State Building being shot at with the laser cannons of a TIE fighter.''':

https://preview.redd.it/cwi7i639c5d61.png?width=512&format=png&auto=webp&s=0510c8b93adb40eee4d3f41607f1c215d41e55ff

Example using text '''A cartoon of a new mascot for the Reddit subreddit DeepDream that has a mouse-like face and wears a cape''':

https://preview.redd.it/wtxbduevcbd61.png?width=512&format=png&auto=webp&s=c5d266258922bc62f25c80a08cd9cabc07d9cb1c

Example using text '''Bugs Bunny meets the Eye of Sauron, drawn in the Looney Tunes cartoon style''':

https://preview.redd.it/gmljaeekuid61.png?width=512&format=png&auto=webp&s=9ea578de165e12afc3a62bf6886bc1ae9dc19bec

Example using text '''Photo of a blue and red neon-colored frog at night.''':

https://preview.redd.it/nzlypte6wzd61.png?width=512&format=png&auto=webp&s=7e10b06f22cfc57c64b6d05738c7486b895083df

Example using text '''Hell begins to freeze over''':

https://preview.redd.it/vn99we9ngmf61.png?width=512&format=png&auto=webp&s=2408efd607f0ab40a08db6ee67448791aa813993

Example using text '''A scene with vibrant colors''':

https://preview.redd.it/4z133mvrgmf61.png?width=512&format=png&auto=webp&s=b78e7a8e3f736769655056093a9904ff09a355a1

Example using text '''The Great Pyramids were turned into prisms by a wizard''':

https://preview.redd.it/zxt6op7vgmf61.png?width=512&format=png&auto=webp&s=53e578cfde14b28afe27957e95e610b89afadd44"
36,machinelearning,open-ai,top,2021-01-03 20:22:20,[N] CoreWeave has agreed to provide training compute for EleutherAI's open source GPT-3-sized language model,Wiskkey,False,0.98,610,kps6fl,https://i.redd.it/87huzgnpxz861.jpg,26,1609705340.0,
37,machinelearning,open-ai,top,2019-10-26 01:09:53,[D] Google is applying BERT to Search,faceshapeapp,False,0.98,591,dn6xrr,https://www.reddit.com/r/MachineLearning/comments/dn6xrr/d_google_is_applying_bert_to_search/,55,1572052193.0,"Understanding searches better than ever before

If there’s one thing I’ve learned over the 15 years working on Google Search, it’s that people’s curiosity is endless. We see billions of searches every day, and 15 percent of those queries are ones we haven’t seen before--so we’ve built ways to return results for queries we can’t anticipate.

When people like you or I come to Search, we aren’t always quite sure about the best way to formulate a query. We might not know the right words to use, or how to spell something, because often times, we come to Search looking to learn--we don’t necessarily have the knowledge to begin with. 

At its core, Search is about understanding language. It’s our job to figure out what you’re searching for and surface helpful information from the web, no matter how you spell or combine the words in your query. While we’ve continued to improve our language understanding capabilities over the years, we sometimes still don’t quite get it right, particularly with complex or conversational queries. In fact, that’s one of the reasons why people often use “keyword-ese,” typing strings of words that they think we’ll understand, but aren’t actually how they’d naturally ask a question. 

With the latest advancements from our research team in the science of language understanding--made possible by machine learning--we’re making a significant improvement to how we understand queries, representing the biggest leap forward in the past five years, and one of the biggest leaps forward in the history of Search. 

**Applying BERT models to Search**  
Last year, we [introduced and open-sourced](https://ai.googleblog.com/2018/11/open-sourcing-bert-state-of-art-pre.html) a neural network-based technique for natural language processing (NLP) pre-training called Bidirectional Encoder Representations from Transformers, or as we call it--[BERT](https://ai.googleblog.com/2018/11/open-sourcing-bert-state-of-art-pre.html), for short. This technology enables anyone to train their own state-of-the-art question answering system. 

This breakthrough was the result of Google research on [transformers](https://ai.googleblog.com/2017/08/transformer-novel-neural-network.html): models that process words in relation to all the other words in a sentence, rather than one-by-one in order. BERT models can therefore consider the full context of a word by looking at the words that come before and after it—particularly useful for understanding the intent behind search queries.

But it’s not just advancements in software that can make this possible: we needed new hardware too. Some of the models we can build with BERT are so complex that they push the limits of what we can do using traditional hardware, so for the first time we’re using the latest [Cloud TPUs ](https://cloud.google.com/blog/products/ai-machine-learning/cloud-tpu-pods-break-ai-training-records)to serve search results and get you more relevant information quickly. 

**Cracking your queries**  
So that’s a lot of technical details, but what does it all mean for you? Well, by applying BERT models to both ranking and featured snippets in Search, we’re able to do a much better job  helping you find useful information. In fact, when it comes to ranking results, BERT will help Search better understand one in 10 searches in the U.S. in English, and we’ll bring this to more languages and locales over time.

Particularly for longer, more conversational queries, or searches where prepositions like “for” and “to” matter a lot to the meaning, Search will be able to understand the context of the words in your query. You can search in a way that feels natural for you.

To launch these improvements, we did a lot of [testing](https://www.google.com/search/howsearchworks/mission/users/) to ensure that the changes actually are more helpful. Here are some of the examples that showed up our evaluation process that demonstrate BERT’s ability to understand the intent behind your search.  


Here’s a search for “2019 brazil traveler to usa need a visa.” The word “to” and its relationship to the other words in the query are particularly important to understanding the meaning. It’s about a Brazilian traveling to the U.S., and not the other way around. Previously, our algorithms wouldn't understand the importance of this connection, and we returned results about U.S. citizens traveling to Brazil. With BERT, Search is able to grasp this nuance and know that the very common word “to” actually matters a lot here, and we can provide a much more relevant result for this query.

Let’s look at another query: “do estheticians stand a lot at work.” Previously, our systems were taking an approach of matching keywords, matching the term “stand-alone” in the result with the word “stand” in the query. But that isn’t the right use of the word “stand” in context. Our BERT models, on the other hand, understand that “stand” is related to the concept of the physical demands of a job, and displays a more useful response.

Here are some other examples where BERT has helped us grasp the subtle nuances of language that computers don’t quite understand the way humans do.

**Improving Search in more languages**  
We’re also applying BERT to make Search better for people across the world. A powerful characteristic of these systems is that they can take learnings from one language and apply them to others. So we can take models that learn from improvements in English (a language where the vast majority of web content exists) and apply them to other languages. This helps us better return relevant results in the many languages that Search is offered in.

For featured snippets, we’re using a BERT model to improve featured snippets in the two dozen countries where this feature is available, and seeing significant improvements in languages like Korean, Hindi and Portuguese.

**Search is not a solved problem**  
No matter what you’re looking for, or what language you speak, we hope you’re able to let go of some of your keyword-ese and search in a way that feels natural for you. But you’ll still stump Google from time to time. Even with BERT, we don’t always get it right. If you search for “what state is south of Nebraska,” BERT’s best guess is a community called “South Nebraska.” (If you've got a feeling it's not in Kansas, you're right.)

Language understanding remains an ongoing challenge, and it keeps us motivated to continue to improve Search. We’re always getting better and working to find the meaning in-- and most helpful information for-- every query you send our way.

[Source](https://blog.google/products/search/search-language-understanding-bert/)"
38,machinelearning,open-ai,top,2023-05-01 16:21:24,[P] SoulsGym - Beating Dark Souls III Bosses with Deep Reinforcement Learning,amacati,False,0.98,582,134r0xf,https://www.reddit.com/r/MachineLearning/comments/134r0xf/p_soulsgym_beating_dark_souls_iii_bosses_with/,74,1682958084.0,"# The project

I've been working on a new gym environment for quite a while, and I think it's finally at a point where I can share it. SoulsGym is an OpenAI gym extension for Dark Souls III. It allows you to train reinforcement learning agents on the bosses in the game. The Souls games are widely known in the video game community for being notoriously hard.

.. Ah, and this is my first post on r/MachineLearning, so please be gentle ;)

# What is included?

**SoulsGym**

There are really two parts to this project. The first one is [SoulsGym](https://github.com/amacati/SoulsGym), an OpenAI gym extension. It is compatible with the newest API changes after gym has transitioned to the Farama foundation. SoulsGym is essentially a game hacking layer that turns Dark Souls III into a gym environment that can be controlled with Python. However, you still need to own the game on Steam and run it before starting the gym. A detailed description on how to set everything up can be found in the package [documentation](https://soulsgym.readthedocs.io/en/latest/?badge=latest).

**Warning: If you want to try this gym, be sure that you have read the documentation and understood everything. If not handled properly, you can get banned from multiplayer.**

Below, you can find a video of an agent training in the game. The game runs on 3x speed to accelerate training. You can also watch the video on [YouTube](https://www.youtube.com/watch?v=7R5Ef69sFPE).

&#x200B;

[RL agent learning to defeat the first boss in Dark Souls III.](https://reddit.com/link/134r0xf/video/o6ctdppeo8xa1/player)

At this point, only the first boss in Dark Souls III is implemented as an environment. Nevertheless, SoulsGym can easily be extended to include other bosses in the game. Due to their similarity, it shouldn't be too hard to even extend the package to Elden Ring as well. If there is any interest in this in the ML/DS community, I'd be happy to give the other ones a shot ;)

**SoulsAI**

The second part is [SoulsAI](https://github.com/amacati/SoulsAI), a distributed deep reinforcement learning framework that I wrote to train on multiple clients simultaneously. You should be able to use it for other gym environments as well, but it was primarily designed for my rather special use case. SoulsAI enables live-monitoring of the current training setup via a webserver, is resilient to client disconnects and crashes, and contains all my training scripts. While this sounds a bit hacky, it's actually quite readable. You can find a complete documentation that goes into how everything works [here](https://soulsai.readthedocs.io/en/latest/).

Being fault tolerant is necessary since the simulator at the heart of SoulsGym is a game that does not expose any APIs and has to be hacked instead. Crashes and other instabilities are rare, but can happen when training over several days. At this moment, SoulsAI implements ApeX style DQN and PPO, but since PPO is synchronous, it is less robust to client crashes etc. Both implementations use Redis as communication backend to send training samples from worker clients to a centralized training server, and to broadcast model updates from the server to all clients. For DQN, SoulsAI is completely asynchronous, so that clients never have to stop playing in order to perform updates or send samples.

&#x200B;

[Live monitoring of an ongoing training process in SoulsAI.](https://preview.redd.it/9m060w00r8xa1.png?width=1800&format=png&auto=webp&s=abb9c15ce38c99cba9753db95ac9dfc7eeec75a5)

Note: I have not implemented more advanced training algorithms such as Rainbow etc., so it's very likely that one can achieve faster convergence with better performance. Furthermore, hyperparameter tuning is extremely challenging since training runs can easily take days across multiple machines.

# Does this actually work?

Yes, it does! It took me some time, but I was able to train an agent with Duelling Double Deep Q-Learning that has a win rate of about 45% within a few days of training. In this video you can see the trained agent playing against Iudex Gundry. You can also watch the video on [YouTube](https://www.youtube.com/watch?v=86NivRglr3Y).

&#x200B;

[RL bot vs Dark Souls III boss.](https://reddit.com/link/134r0xf/video/rkor3hroj8xa1/player)

I'm also working on a visualisation that shows the agent's policy networks reacting to the current game input. You can see a preview without the game simultaneously running here. Credit for the idea of visualisation goes to [Marijn van Vliet](https://github.com/wmvanvliet/scns).

&#x200B;

[Duelling Double Q-Learning networks reacting to changes in the game observations.](https://reddit.com/link/134r0xf/video/b0a4jzczv8xa1/player)

If you really want to dive deep into the hyperparameters that I used or load the trained policies on your machine, you can find the final checkpoints [here](https://drive.google.com/drive/folders/1cAK1TbY4e4HE4cxyAFEHRpj6MOgp5Zxe?usp=sharing). The hyperparameters are contained in the *config.json* file.

# ... But why?

Because it is a ton of fun! Training to defeat a boss in a computer game does not advance the state of the art in RL, sure. So why do it? Well, because we can! And because maybe it excites others about ML/RL/DL.

**Disclaimer: Online multiplayer**

This project is in no way oriented towards creating multiplayer bots. It would take you ages of development and training time to learn a multiplayer AI starting from my package, so just don't even try. I also do not take any precautions against cheat detections, so if you use this package while being online, you'd probably be banned within a few hours.

# Final comments

As you might guess, this project went through many iterations and it took a lot of effort to get it ""right"". I'm kind of proud to have achieved it in the end, and am happy to explain more about how things work if anyone is interested. There is a lot that I haven't covered in this post (it's really just the surface), but you can find more in the docs I linked or by writing me a pm. Also, I really have no idea how many people in ML are also active in the gaming community, but if you are a Souls fan and you want to contribute by adding other Souls games or bosses, feel free to reach out to me.

Edit: Clarified some paragraphs, added note for online multiplayer.

Edit2: Added hyperparameters and network weights."
39,machinelearning,open-ai,top,2023-03-01 18:31:12,[D] OpenAI introduces ChatGPT and Whisper APIs (ChatGPT API is 1/10th the cost of GPT-3 API),minimaxir,False,0.97,578,11fbccz,https://www.reddit.com/r/MachineLearning/comments/11fbccz/d_openai_introduces_chatgpt_and_whisper_apis/,119,1677695472.0,"https://openai.com/blog/introducing-chatgpt-and-whisper-apis

> It is priced at $0.002 per 1k tokens, which is 10x cheaper than our existing GPT-3.5 models.

This is a massive, massive deal. For context, the reason GPT-3 apps took off over the past few months before ChatGPT went viral is because a) text-davinci-003 was released and was a significant performance increase and b) the cost was cut from $0.06/1k tokens to $0.02/1k tokens, which made consumer applications feasible without a large upfront cost.

A much better model and a 1/10th cost warps the economics completely to the point that it may be better than in-house finetuned LLMs.

I have no idea how OpenAI can make money on this. This has to be a loss-leader to lock out competitors before they even get off the ground."
40,machinelearning,open-ai,top,2020-01-30 17:11:51,[N] OpenAI Switches to PyTorch,SkiddyX,False,0.99,564,ew8oxq,https://www.reddit.com/r/MachineLearning/comments/ew8oxq/n_openai_switches_to_pytorch/,119,1580404311.0,"""We're standardizing OpenAI's deep learning framework on PyTorch to increase our research productivity at scale on GPUs (and have just released a PyTorch version of Spinning Up in Deep RL)""

https://openai.com/blog/openai-pytorch/"
41,machinelearning,open-ai,top,2017-08-12 00:10:03,[N] OpenAI bot beat best Dota 2 players in 1v1 at The International 2017,crouching_dragon_420,False,0.96,565,6t58ks,https://blog.openai.com/dota-2/,252,1502496603.0,
42,machinelearning,open-ai,top,2019-04-04 21:56:06,[N] Apple hires Ian Goodfellow,milaworld,False,0.94,558,b9iyi6,https://www.reddit.com/r/MachineLearning/comments/b9iyi6/n_apple_hires_ian_goodfellow/,168,1554414966.0,"*According to CNBC [article](https://www.cnbc.com/2019/04/04/apple-hires-ai-expert-ian-goodfellow-from-google.html):*

One of Google’s top A.I. people just joined Apple

- Ian Goodfellow joined Apple’s Special Projects Group as a director of machine learning last month.

- Prior to Google, he worked at OpenAI, an AI research consortium originally funded by Elon Musk and other tech notables.

- He is the father of an AI approach known as general adversarial networks, or GANs, and his research is widely cited in AI literature.

Ian Goodfellow, one of the top minds in artificial intelligence at Google, has joined Apple in a director role.

The hire comes as Apple increasingly strives to tap AI to boost its software and hardware. Last year Apple hired John Giannandrea, head of AI and search at Google, to supervise AI strategy.


Goodfellow updated his LinkedIn profile on Thursday to acknowledge that he moved from Google to Apple in March. He said he’s a director of machine learning in the Special Projects Group. In addition to developing AI for features like FaceID and Siri, Apple also has been working on autonomous driving technology. Recently the autonomous group had a round of layoffs.

A Google spokesperson confirmed his departure. Apple declined to comment. Goodfellow didn’t respond to a request for comment.

https://www.cnbc.com/2019/04/04/apple-hires-ai-expert-ian-goodfellow-from-google.html"
43,machinelearning,open-ai,top,2022-05-08 15:34:25,"[P] I’ve been trying to understand the limits of some of the available machine learning models out there. Built an app that lets you try a mix of CLIP from Open AI + Apple’s version of MobileNet, and more directly on your phone's camera roll.",Playgroundai,False,0.98,560,ul49ej,https://v.redd.it/3cgs84fat9y81,41,1652024065.0,
44,machinelearning,open-ai,top,2019-10-01 21:36:40,[N] The register did a full exposé on Siraj Raval. Testimonials from his former students and people he stole code from.,kreyio3i,False,0.96,545,dc0a5f,https://www.reddit.com/r/MachineLearning/comments/dc0a5f/n_the_register_did_a_full_exposé_on_siraj_raval/,174,1569965800.0,"https://www.theregister.co.uk/2019/09/27/youtube_ai_star/

I found this comment on the article hilarious

> Why aren't you writing these articles slamming universities?
> I am currently a software engineer in a data science team producing software that yields millions of dollars in revenue for our company. I did my undergraduate in physics and my professors encouraged us to view MIT Open Courseware lectures alongside their subpar teaching. I learned more from those online lectures than I ever could in those expensive classes. I paid tens of thousands of dollars for that education. I decided that it was better bang for my buck to learn data science than in would every be to continue on in the weak education system we have globally. I paid 30 dollars month, for a year, to pick up the skills to get into data science. I landed a great job, paying a great salary because I took advantage of these types of opportunities. If you hate on this guy for collecting code that is open to the public and creating huge value from it, then you can go get your masters degree for $50-100k and work for someone who took advantage of these types of offerings. Anyone who hates on this is part of an old school, suppressive system that will continue to hold talented people down. Buck the system and keep learning!

Edit:

Btw, the Journalist, Katyanna Quach,  is looking for people who have had direct experiences with Siraj. If you have, you can contact directly her directly here

https://www.theregister.co.uk/Author/Email/Katyanna-Quach

here

https://twitter.com/katyanna_q

or send tips here

corrections@theregister.co.uk"
45,machinelearning,open-ai,top,2016-01-30 19:45:26,Synopsis of top Go professional's analysis of Google's Deepmind's Go AI,NFB42,False,0.98,542,43fl90,https://www.reddit.com/r/MachineLearning/comments/43fl90/synopsis_of_top_go_professionals_analysis_of/,130,1454183126.0,"Hi there. Earlier this month I had [a discussion](https://www.reddit.com/r/hearthstone/comments/3zdibn/intelligent_agents_for_hearthstone/cylnbf2) over on /r/hearthstone with /u/yetipirate about Computer Go. Then the news hit this week of the first Go AI to beat a human professional.

We had some more discussion then, and I made a synopsis of [this video](https://www.youtube.com/watch?v=NHRHUHW6HQE), where the US Go Association has Myungwan Kim, 9-Dan Pro, analyse the games between the AlphaGo AI and human professional Fan Hui, 2-Dan Pro. (FTR: Professional go ranks start at 1-Dan and go up to 9-Dan, but rather than the absolute top 9-Dan is more like the beginning of grandmastery. The best players in the world are like 9-Dan+++++. Lee Sedol, which AlphaGo will challenge next this March, is at this latter level.)

/u/yetipirate suggested this synopsis might interest some people here as well, since it digests the salient points of a two hour video with lots of Go jargon into a more manageable post. So hence I'm posting it here, I hope you all enjoy it. Feel free to ask me any questions about Go, but I'm not that strong myself so ymmv. Anyway without further ado:

**In General:**

The match has been big news in East-Asia as well. The thing which most shocked all the professionals was that AlphaGo played so much like a human player. Their first impressions were that it's as if this was a human playing, not a computer.

Since how a human plays is, obviously, pretty well known, they decided that they'll focus commentary mostly on those cases where AlphaGo doesn't play like a human.

The first thing that Myungwan Kim noted was that AlphaGo has a Japanese playstyle (this is especially interesting because among the three traditional Go powerhouses, China, Korea, and Japan, the Japanese have been the weakest in international competitions for the past several decades). The commentators don't know, but they suspect it is that the original human data set was biased towards Japanese playstyles.

Myungwan Kim also makes a comment about one of the lines continually repeated in the coverage of Computer Go. The line that ""if you ask a top Go player why they like a certain move, they'll often say 'it felt right'"". Myungwan Kim wanted to add that just because it's based on intuition, doesn't mean there's no logic behind it at all. Top Go players aren't just guessing what are good moves, they have a real and complicated rational understanding about what specific moves are doing. Even if the final decision might come down to which move feels the best, it's not as simple as top pro's just doing a random move and saying 'I felt like it'.

**The Games:**

In the **first game** both sides played very passively in the opening. Leisurely and gentle they say.

Myungwan Kim finds that AlphaGo has a weakness here, it doesn't seem to understand the value of taking and holding initiative. Complicated to explain, but at its core it's about doing moves which force your opponent to use their turn to react to your move over doing moves which might be equally valuable to you, but leave your opponent free to do whatever they want on their turn.

Important, Myungwan Kim says because of this that the first game Fan Hui was winning in the opening. He says this was the only game Fan Hui was winning after the opening. He estimates Fan Hui was about 10 points ahead, and can't see white getting back even 5 points coming out of that opening. Myungwan Kim offers some alternate moves for AlphaGo which would still have Fan Hui in the lead, but would've given AlphaGo better opportunities to comeback.

Conclusion from the opening: AlphaGo lost because it didn't understand the value of initiative.

Myungwan Kim later points to one huge mistake by Fan Hui in the midgame that lost him the game. I can't go into detail here because, as characteristic of top-level Go, it's the difference of placing one stone one space higher. But Myungwan Kim says that while Fan Hui made other small mistakes, this one move is the big one which let AlphaGo come back from losing the opening.

Final conclusion from game one: Aside from not understanding initiative. Myungwan Kim says AlphaGo betrays itself as a computer in that it sometimes it goes too far in mimicking standard professional play and does the most common move instead of the most optimal move. In other words, it's extremely book smart, but at times fails to notice when it should be ignoring the books because the specific situation in the game makes the less standard move the most optimal one instead. (A bit cliche imo, but Myungwan Kim says ""AlphaGo is not creative"".) They think that might really hurt AlphaGo in the game against Lee Sedol.

**Game 2**, they note Fan Hui really played too aggressively, as he noted in his own post-match interview. Myungwan Kim says he can really see Fan Hui wasn't playing his best game, but was trying to test AlphaGo to see if it could be tricked into making exploitable mistakes.

Myungwan Kim says Fan Hui actually put up a really good fight. After the opening it should've been over for Fan Hui, but AlphaGo almost allowed Fan Hui to get back in the game.

**Game 3** is similar to the fifth game, though Fan Hui played better in the beginning here. Myungwan Kim notes several moves by AlphaGo which are top professional moves. He notes some moves by Fan Hui which he thinks hints that Fan Hui might be a bit out of practice when it comes to playing professional level games (he says it's the kind of move you do if too used to playing teaching games against amateurs). Fan Hui lost because he played over-aggressive and left too many holes in his defence as a result.

On the **fifth game**, Myungwan Kim says AlphaGo was winning from the beginning here. They marvel at some of AlphaGo's moves here, but they're not sure whether AlphaGo really knew what it was doing or if it just got 'lucky' somehow.

Myungwan Kim points out AlphaGo made a huge mistake early in this game, but was saved because not long after Fan Hui made an equally huge mistake. But this is an example where he thinks a real grandmaster like Lee Sedol would not have allowed AlphaGo to get away with the kind of mistake it made there.

**AlphaGo's Strengths and Weaknesses:**

Myungwan Kim lists AlphaGo's strengths:

 * It's not afraid of 'Ko'. 'Ko' is too complex a concept to explain succinctly, for an attempt [see my post here](https://www.reddit.com/r/MachineLearning/comments/43fl90/synopsis_of_top_go_professionals_analysis_of/czi7swh). They marvel at some of AlphaGo's moves surrounding a 'Ko' situation, but aren't sure if AlphaGo really knew what it was doing or just got lucky that it worked out.

 * Reading might be AlphaGo's strength. As in, cases where it comes down to very straightforward fights and moves it's very strong at choosing the right moves.

Myungwan Kim lists AlphaGo's weaknesses:

 * Doesn't understand initiative, as explained earlier.

 * At times too obsessed with following common patterns, when the specific situation might require creative deviation from those patterns. Also explained earlier.

 * It doesn't understand 'Aji'. 'Aji' is difficult to explain, but it refers to the amount of uncertainty remaining in a specific grouping of white and black stones. (Usually, it's about the chance that a group of stones which is 'death' might become alive and vice versa as a result of things happening elsewhere on the board.) You can also put this differently as: AlphaGo lacks proper long-term thinking.

 * Myungwan Kim thinks AlphaGo has difficulty, or even doesn't at all, evaluating the value of specific stones. It's good at making moves which directly gain territory for itself, but tends to miss moves which reduce the value of the opponent's stones.

 * It can make really high level moves at times, but it doesn't understand those moves. Which it displays by making the right moves at the wrong time.

More generally Myungwan Kim thinks a weakness of AlphaGo is its insularity. He really stresses that human pro's become much stronger when they discuss and analyse their games with other pro's. And because AlphaGo primarily plays against itself the quality of the feedback it gets on its play is too one-note, which leaves holes in its plays whereas human pro's getting feedback from many other human pro's end up with more robust and stronger playstyles. He really thinks to progress past its current level AlphaGo needs to play more with top human pro's rather than just itself. Right now, Myungwan Kim en most pro's he knows don't feel threatened by AlphaGo. They also talk about how AlphaGo can be useful for human pro's to study and become stronger, which can make AlphaGo stronger in turn. (This last paragraph is imo all just Myungwan Kim musing based on his understanding of how AlphaGo was designed more than evaluating its plays themselves, so that's why I didn't list it as a bullet point.)

In general, I get the sense from Myungwan Kim's explanations that he thinks AlphaGo is stronger at the more concrete parts of Go play, such as territory and life-or-death, and weaker at the more vague concepts, such as influence and uncertainty.

**[word limit hit, final part below]**"
46,machinelearning,open-ai,top,2023-03-11 13:54:22,[Discussion] Compare OpenAI and SentenceTransformer Sentence Embeddings,Simusid,False,0.94,541,11okrni,https://i.redd.it/7muze2s684na1.png,58,1678542862.0,
47,machinelearning,open-ai,top,2019-07-23 02:29:08,[D] What is OpenAI? I don't know anymore.,milaworld,False,0.95,535,cgmptl,https://www.reddit.com/r/MachineLearning/comments/cgmptl/d_what_is_openai_i_dont_know_anymore/,144,1563848948.0,"*Some [commentary](https://threadreaderapp.com/thread/1153364705777311745.html) from [Smerity](https://twitter.com/Smerity/status/1153364705777311745) about yesterday's [cash infusion](https://openai.com/blog/microsoft/) from MS into OpenAI:*

What is OpenAI? I don't know anymore.
A non-profit that leveraged good will whilst silently giving out equity for [years](https://twitter.com/gdb/status/1105137541970243584) prepping a shift to for-profit that is now seeking to license closed tech through a third party by segmenting tech under a banner of [pre](https://twitter.com/tsimonite/status/1153340994986766336)/post ""AGI"" technology?

The non-profit/for-profit/investor [partnership](https://openai.com/blog/openai-lp/) is held together by a set of legal documents that are entirely novel (=bad term in legal docs), are [non-public](https://twitter.com/gdb/status/1153305526026956800) + unclear, have no case precedence, yet promise to wed operation to a vague (and already re-interpreted) [OpenAI Charter](https://openai.com/charter/).

The claim is that [AGI](https://twitter.com/woj_zaremba/status/1105149945118519296) needs to be carefully and collaboratively guided into existence yet the output of almost [every](https://github.com/facebookresearch) [other](https://github.com/google-research/google-research) [existing](https://github.com/salesforce) [commercial](https://github.com/NVlabs) lab is more open. OpenAI runs a closed ecosystem where they primarily don't or won't trust outside of a small bubble.

I say this knowing many of the people there and with past and present love in my heart—I don't collaborate with OpenAI as I have no freaking clue what they're doing. Their primary form of communication is high entropy blog posts that'd be shock pivots for any normal start-up.

Many of their [blog posts](https://openai.com/blog/cooperation-on-safety/) and [spoken](https://www.youtube.com/watch?v=BJi6N4tDupk) [positions](https://www.youtube.com/watch?v=9EN_HoEk3KY) end up [influencing government policy](https://twitter.com/jackclarkSF/status/986568940028616705) and public opinion on the future of AI through amplified pseudo-credibility due to *Open*, *Musk founded*, repeatedly hyped statements, and a sheen from their now distant non-profit good will era.

I have mentioned this to friends there and say all of this with positive sum intentions: I understand they have lofty aims, I understand they need cash to shovel into the forever unfurling GPU forge, but if they want any community trust long term they need a better strategy.

The implicit OpenAI message heard over the years:
“Think of how transformative and dangerous AGI may be. Terrifying. Trust us. Whether it's black-boxing technology, legal risk, policy initiatives, investor risk, ...—trust us with everything. We're good. No questions, sorry.”

*We'll clarify our position in an upcoming blog post.*"
48,machinelearning,open-ai,top,2023-01-20 10:41:04,[N] OpenAI Used Kenyan Workers on Less Than $2 Per Hour to Make ChatGPT Less Toxic,ChubChubkitty,False,0.83,527,10gtruu,https://www.reddit.com/r/MachineLearning/comments/10gtruu/n_openai_used_kenyan_workers_on_less_than_2_per/,246,1674211264.0,https://time.com/6247678/openai-chatgpt-kenya-workers/
49,machinelearning,open-ai,top,2020-12-21 14:40:21,[N] Montreal-based Element AI sold for $230-million as founders saw value mostly wiped out,sensetime,False,0.99,521,khin4c,https://www.reddit.com/r/MachineLearning/comments/khin4c/n_montrealbased_element_ai_sold_for_230million_as/,211,1608561621.0,"According to [Globe and Mail](https://www.theglobeandmail.com/business/article-element-ai-sold-for-230-million-as-founders-saw-value-wiped-out/) article:

**Element AI sold for $230-million as founders saw value mostly wiped out, document reveals**

Montreal startup Element AI Inc. was running out of money and options when it inked a deal last month to sell itself for US$230-milion to Silicon Valley software company ServiceNow Inc., a confidential document obtained by the Globe and Mail reveals.

Materials sent to Element AI shareholders Friday reveal that while many of its institutional shareholders will make most if not all of their money back from backing two venture financings, employees will not fare nearly as well. Many have been terminated and had their stock options cancelled.

Also losing out are co-founders Jean-François Gagné, the CEO, his wife Anne Martel, the chief administrative officer, chief science officer Nick Chapados and **Yoshua Bengio**, the University of Montreal professor known as a godfather of “deep learning,” the foundational science behind today’s AI revolution.

Between them, they owned 8.8 million common shares, whose value has been wiped out with the takeover, which goes to a shareholder vote Dec 29 with enough investor support already locked up to pass before the takeover goes to a Canadian court to approve a plan of arrangement with ServiceNow. The quartet also owns preferred shares worth less than US$300,000 combined under the terms of the deal.

The shareholder document, a management proxy circular, provides a rare look inside efforts by a highly hyped but deeply troubled startup as it struggled to secure financing at the same time as it was failing to live up to its early promises.

The circular states the US$230-million purchase price is subject to some adjustments and expenses which could bring the final price down to US$195-million.

The sale is a disappointing outcome for a company that burst onto the Canadian tech scene four years ago like few others, promising to deliver AI-powered operational improvements to a range of industries and anchor a thriving domestic AI sector. Element AI became the self-appointed representative of Canada’s AI sector, lobbying politicians and officials and landing numerous photo ops with them, including Prime Minister Justin Trudeau. It also secured $25-million in federal funding – $20-million of which was committed earlier this year and cancelled by the government with the ServiceNow takeover.

Element AI invested heavily in hype and and earned international renown, largely due to its association with Dr. Bengio. It raised US$102-million in venture capital in 2017 just nine months after its founding, an unheard of amount for a new Canadian company, from international backers including Microsoft Corp., Intel Corp., Nvidia Corp., Tencent Holdings Ltd., Fidelity Investments, a Singaporean sovereign wealth fund and venture capital firms.

Element AI went on a hiring spree to establish what the founders called “supercredibility,” recruiting top AI talent in Canada and abroad. It opened global offices, including a British operation that did pro bono work to deliver “AI for good,” and its ranks swelled to 500 people.

But the swift hiring and attention-seeking were at odds with its success in actually building a software business. Element AI took two years to focus on product development after initially pursuing consulting gigs. It came into 2019 with a plan to bring several AI-based products to market, including a cybersecurity offering for financial institutions and a program to help port operators predict waiting times for truck drivers.

It was also quietly shopping itself around. In December 2018, the company asked financial adviser Allen & Co LLC to find a potential buyer, in addition to pursuing a private placement, the circular reveals.

But Element AI struggled to advance proofs-of-concept work to marketable products. Several client partnerships faltered in 2019 and 2020.

Element did manage to reach terms for a US$151.4-million ($200-million) venture financing in September, 2019 led by the Caisse de dépôt et placement du Québec and backed by the Quebec government and consulting giant McKinsey and Co. However, the circular reveals the company only received the first tranche of the financing – roughly half of the amount – at the time, and that it had to meet unspecified conditions to get the rest. A fairness opinion by Deloitte commissioned as part of the sale process estimated Element AI’s enterprises value at just US$76-million around the time of the 2019 financing, shrinking to US$45-million this year.

“However, the conditions precedent the closing of the second tranche … were not going to be met in a timely manner,” the circular reads. It states “new terms were proposed” for a round of financing that would give incoming investors ranking ahead of others and a cumulative dividend of 12 per cent on invested capital and impose “other operating and governance constraints and limitations on the company.” Management instead decided to pursue a sale, and Allen contacted prospective buyers in June.

As talks narrowed this past summer to exclusive negotiations with ServiceNow, “the company’s liquidity was diminishing as sources of capital on acceptable terms were scarce,” the circular reads. By late November, it was generating revenue at an annualized rate of just $10-million to $12-million, Deloitte said.

As part of the deal – which will see ServiceNow keep Element AI’s research scientists and patents and effectively abandon its business – the buyer has agreed to pay US$10-million to key employees and consultants including Mr. Gagne and Dr. Bengio as part of a retention plan. The Caisse and Quebec government will get US$35.45-million and US$11.8-million, respectively, roughly the amount they invested in the first tranche of the 2019 financing."
50,machinelearning,open-ai,top,2020-03-06 16:20:40,[N] [R] DeepMind releases structure predictions for six proteins associated with the virus that causes COVID-19,thymeyon,False,0.96,516,fefsu4,https://www.reddit.com/r/MachineLearning/comments/fefsu4/n_r_deepmind_releases_structure_predictions_for/,24,1583511640.0,"DeepMind yesterday [released](https://deepmind.com/research/open-source/computational-predictions-of-protein-structures-associated-with-COVID-19) the **structure predictions for six proteins** associated with **SARS-CoV-2 — the virus that causes COVID-19**, using the most up-to-date version of the [AlphaFold](https://deepmind.com/blog/article/AlphaFold-Using-AI-for-scientific-discovery) system (that they published in Jan.)

Read more [here](https://medium.com/syncedreview/google-deepmind-releases-structure-predictions-for-coronavirus-linked-proteins-7dfb2fad05b6)."
51,machinelearning,open-ai,top,2020-12-30 20:50:02,[R] A List of Best Papers from Top AI Conferences in 2020,othotr,False,0.97,507,knai5q,https://www.reddit.com/r/MachineLearning/comments/knai5q/r_a_list_of_best_papers_from_top_ai_conferences/,48,1609361402.0,"Sharing a list of award-winning papers from this year's top conferences for anyone interested in catching up on the latest machine learning research before the end of the year :)

**AAAI 2020**

* Best Paper: WinoGrande: An Adversarial Winograd Schema Challenge at Scale \[[Paper](https://arxiv.org/abs/1907.10641)\]
* Honorable Mention: A Unifying View on Individual Bounds and Heuristic Inaccuracies in Bidirectional Search \[[Paper](https://ojs.aaai.org//index.php/AAAI/article/view/5611)\]

**CVPR 2020** 

* Best Paper: Unsupervised Learning of Probably Symmetric Deformable 3D Objects from Images in the Wild \[[Paper](https://arxiv.org/pdf/1911.11130.pdf)\] \[[Presentation](https://crossminds.ai/video/5ee96b86b1267e24b0ec2354/?playlist_id=5fe2e2ea56dab51eaff52eaf)\] 

**ACL 2020**

* Best Paper: Beyond Accuracy: Behavioral Testing of NLP Models with CheckList \[[Paper](https://www.aclweb.org/anthology/2020.acl-main.442.pdf)\] \[[Video](https://crossminds.ai/video/5f454437e1acdc4d12c4186e/?playlist_id=5fe2e2ea56dab51eaff52eaf)\] 

**ICML 2020**

* Best Paper: On Learning Sets of Symmetric Elements \[[Paper](https://arxiv.org/abs/2002.08599)\]  \[[Presentation](https://icml.cc/virtual/2020/poster/6022)\] 
* Best Paper: Tuning-free Plug-and-Play Proximal Algorithm for Inverse Imaging Problems \[[Paper](https://arxiv.org/abs/2012.05703)\]  \[[Presentation](https://icml.cc/virtual/2020/poster/6447)\] 
* Honorable Mention: Efficiently sampling functions from Gaussian process posteriors  \[[Paper](https://arxiv.org/abs/2002.09309)\]  \[[Presentation](https://crossminds.ai/video/5f189c96c01f1dd70811ebef/?playlist_id=5fe2e2ea56dab51eaff52eaf)\] 
* Honorable Mention: Generative Pretraining From Pixels \[[Paper](https://cdn.openai.com/papers/Generative_Pretraining_from_Pixels_V2.pdf)\]  \[[Presentation](https://crossminds.ai/video/5f0e0b67d8b7c2e383e1077b/?playlist_id=5fe2e2ea56dab51eaff52eaf)\] 

**ECCV 2020**

* Best Paper: RAFT: Recurrent All-Pairs Field Transforms for Optical Flow \[[Paper](https://arxiv.org/abs/2003.12039)\] \[[Video](https://crossminds.ai/video/5f5acf7f7fa4bb2ca9d64e4d/?playlist_id=5fe2e2ea56dab51eaff52eaf)\] 
* Honorable Mention: Towards Streaming Perception \[[Paper](https://arxiv.org/abs/2005.10420)\] \[[Presentation](https://crossminds.ai/video/5f44390ae1acdc4d12c417e3/?playlist_id=5fe2e2ea56dab51eaff52eaf)\] 
* Honorable Mention: NeRF: Representing Scenes as Neural Radiance Fields for View Synthesis \[[Paper](https://arxiv.org/abs/2003.08934)\] \[[Presentation](https://crossminds.ai/video/5f3b294f96cfcc9d075e35b6/?playlist_id=5fe2e2ea56dab51eaff52eaf)\] 

**ICRA 2020**

* Best Paper: Preference-Based Learning for Exoskeleton Gait Optimization \[[Paper](https://arxiv.org/abs/1909.12316)\] \[[Presentation](https://crossminds.ai/video/5f65488303c0894581947a6b/?playlist_id=5fe2e2ea56dab51eaff52eaf)\] 
* Best Paper in Robot Vision: Graduated Non-Convexity for Robust Spatial Perception: From Non-Minimal Solvers to Global Outlier Rejection \[[Paper](https://arxiv.org/abs/1909.08605)\] \[[Presentation](https://crossminds.ai/video/5f63f6c403c089458194705f/?playlist_id=5fe2e2ea56dab51eaff52eaf)\] 

**CoRL 2020**

* Best Paper: Learning Latent Representations to Influence Multi-Agent Interaction \[[Paper](https://arxiv.org/abs/2011.06619)\] \[[Presentation](https://crossminds.ai/video/5fd9782a08be4fa7f41eabfe/?playlist_id=5fe2e2ea56dab51eaff52eaf)\] 
* Best Paper Presentation: Accelerating Reinforcement Learning with Learned Skill Priors \[[Paper](https://arxiv.org/abs/2010.11944)\] \[[Presentation](https://crossminds.ai/video/5fd9794308be4fa7f41eac54/?playlist_id=5fe2e2ea56dab51eaff52eaf)\] 
* Best System Paper: SMARTS: An Open-Source Scalable Multi-Agent RL Training School for Autonomous Driving \[[Paper](https://arxiv.org/abs/2010.09776)\] \[[Presentation](https://crossminds.ai/video/5fd9791f08be4fa7f41eac48/?playlist_id=5fe2e2ea56dab51eaff52eaf)\] 

**RecSys 2020**

* Best Long Paper: Progressive Layered Extraction (PLE): A Novel Multi-Task Learning (MTL) Model for Personalized Recommendations \[[Paper](https://github.com/guyulongcs/Awesome-Deep-Learning-Papers-for-Search-Recommendation-Advertising/blob/master/0_New_Papers_in_2020/2020%20%28Tencent%29%20%28Recsys%29%20%5BPLE%5D%20Progressive%20Layered%20Extraction%20%28PLE%29%20-%20A%20Novel%20Multi-Task%20Learning%20%28MTL%29%20Model%20for%20Personalized%20Recommendations.pdf)\] \[[Presentation](https://crossminds.ai/video/5f7fc247d81cf36f1a8e379c/?playlist_id=5fe2e2ea56dab51eaff52eaf)\] 
* Best Short Paper: ADER: Adaptively Distilled Exemplar Replay Towards Continual Learning for Session-based Recommendation \[[Paper](https://arxiv.org/abs/2007.12000)\] \[[Presentation](https://crossminds.ai/video/5f7fc27ad81cf36f1a8e37b6/?playlist_id=5fe2e2ea56dab51eaff52eaf)\] 

**NeurIPS 2020**

* Best Paper: Language Models are Few-Shot Learners \[[Paper](https://arxiv.org/abs/2005.14165)\] \[[Video](https://crossminds.ai/video/5f3179536d7639fd8a7fc06a/?playlist_id=5fe2e2ea56dab51eaff52eaf)\] 
* Best Paper: No-Regret Learning Dynamics for Extensive-Form Correlated Equilibrium \[[Paper](https://arxiv.org/abs/2004.00603)\] 
* Best Paper: Improved Guarantees and a Multiple-Descent Curve for Column Subset Selection and the Nyström Method \[[Paper](https://arxiv.org/abs/2002.09073)\]

Here is a comprehensive collection of [research talks from all major AI conferences](https://crossminds.ai/c/conference/) this year if you'd like to explore further."
52,machinelearning,open-ai,top,2023-01-30 19:09:14,"[P] I launched “CatchGPT”, a supervised model trained with millions of text examples, to detect GPT created content",qthai912,False,0.75,498,10pb1y3,https://www.reddit.com/r/MachineLearning/comments/10pb1y3/p_i_launched_catchgpt_a_supervised_model_trained/,206,1675105754.0,"I’m an ML Engineer at Hive AI and I’ve been working on a ChatGPT Detector.

Here is a free demo we have up: [https://hivemoderation.com/ai-generated-content-detection](https://hivemoderation.com/ai-generated-content-detection)

From our benchmarks it’s significantly better than similar solutions like GPTZero and OpenAI’s GPT2 Output Detector. On our internal datasets, we’re seeing balanced accuracies of >99% for our own model compared to around 60% for GPTZero and 84% for OpenAI’s GPT2 Detector.

Feel free to try it out and let us know if you have any feedback!"
53,machinelearning,open-ai,top,2020-10-23 21:56:30,[D] A Jobless Rant - ML is a Fool's Gold,good_rice,False,0.9,478,jgwqe8,https://www.reddit.com/r/MachineLearning/comments/jgwqe8/d_a_jobless_rant_ml_is_a_fools_gold/,235,1603490190.0,"*Aside from the clickbait title, I am earnestly looking for some advice and discussion from people who are actually employed. That being said, here's my gripe:*

I have been relentlessly inundated by the words ""AI, ML, Big Data"" throughout my undergrad from other CS majors, business and sales oriented people, media, and <insert-catchy-name>.ai type startups. It seems like everyone was peddling ML as the go to solution, the big money earner, and the future of the field. I've heard college freshman ask stuff like, ""if I want to do CS, am I going to need to learn ML to be relevant"" - if you're on this sub, I probably do not need to continue to elaborate on just how ridiculous the ML craze is.  Every single university has opened up ML departments or programs and are pumping out ML graduates at an unprecedented rate. **Surely, there'd be a job market to meet the incredible supply of graduates and cultural interest?**

Swept up in a mixture of genuine interest and hype, I decided to pursue computer vision. I majored in Math-CS at a [top-10](http://csrankings.org/#/index?all) CS university (based on at least one arbitrary ranking). I had three computer vision internships, two at startups, one at NASA JPL, in each doing non-trivial CV work; I (re)implemented and integrated CV systems from mixtures of recently published papers. I have a bunch of projects showing both CV and CS fundamentals (OS, networking, data structures, algorithms, etc) knowledge. I have taken graduate level ML coursework. I was accepted to Carnegie Mellon for an MS in Computer Vision, but I deferred to 2021 - all in all, I worked my ass off to try to simultaneously get a solid background in math AND computer science AND computer vision.

That brings me to where I am now, which is unemployed and looking for jobs. Almost every single position I have seen requires a PhD and/or 5+ years of experience, and whatever I have applied for has ghosted me so far. The notion that ML is a high paying in-demand field seems to only be true if your name is Andrej Karpathy - and I'm only sort of joking. It seems like unless you have a PhD from one of the big 4 in CS and multiple publications in top tier journals you're out of luck, or at least vying for one of the few remaining positions at small companies.

This seems normalized in ML, but this is not the case for quite literally every other subfield or even generalized CS positions. Getting a high paying job at a Big N company is possible as a new grad with just a bachelors and general SWE knowledge, and there are a plethora of positions elsewhere. Getting the equivalent with basically every specialization, whether operating systems, distributed systems, security, networking, etc, is also possible, and doesn't require 5 CVPR publications.

**TL;DR** **From my personal perspective,** **if you want to do ML because of career prospects, salaries, or job security, pick almost any other CS specialization**. In ML, you'll find yourself working 2x as hard through difficult theory and math to find yourself competing with more applicants for fewer positions.

I am absolutely complaining and would love to hear a more positive perspective, but in the meanwhile I'll be applying to jobs, working on more post-grad projects, and contemplating switching fields. "
54,machinelearning,open-ai,top,2023-03-31 05:04:02,[D][N] LAION Launches Petition to Establish an International Publicly Funded Supercomputing Facility for Open Source Large-scale AI Research and its Safety,stringShuffle,False,0.97,474,127asin,https://www.reddit.com/r/MachineLearning/comments/127asin/dn_laion_launches_petition_to_establish_an/,53,1680239042.0,"[https://www.openpetition.eu/petition/online/securing-our-digital-future-a-cern-for-open-source-large-scale-ai-research-and-its-safety](https://www.openpetition.eu/petition/online/securing-our-digital-future-a-cern-for-open-source-large-scale-ai-research-and-its-safety)

>Join us in our urgent mission to democratize AI research by establishing  an international, publicly funded supercomputing facility equipped with  100,000 state-of-the-art AI accelerators to train open source  foundation models. This monumental initiative will secure our  technological independence, empower global innovation, and ensure safety, while safeguarding our democratic principles for generations to  come."
55,machinelearning,open-ai,top,2022-11-06 18:58:59,[P] Transcribe any podcast episode in just 1 minute with optimized OpenAI/whisper,thundergolfer,False,0.97,466,ynz4m1,https://v.redd.it/wnt66ghfody91,43,1667761139.0,
56,machinelearning,open-ai,top,2023-02-02 13:55:47,[N] Microsoft integrates GPT 3.5 into Teams,bikeskata,False,0.97,459,10rqe34,https://www.reddit.com/r/MachineLearning/comments/10rqe34/n_microsoft_integrates_gpt_35_into_teams/,130,1675346147.0,"Official blog post: https://www.microsoft.com/en-us/microsoft-365/blog/2023/02/01/microsoft-teams-premium-cut-costs-and-add-ai-powered-productivity/

Given the amount of money they pumped into OpenAI, it's not surprising that you'd see it integrated into their products. I do wonder how this will work in highly regulated fields (finance, law, medicine, education)."
57,machinelearning,open-ai,top,2020-06-10 20:50:38,"[D] GPT-3, The $4,600,000 Language Model",mippie_moe,False,0.96,447,h0jwoz,https://www.reddit.com/r/MachineLearning/comments/h0jwoz/d_gpt3_the_4600000_language_model/,215,1591822238.0,"[OpenAI’s GPT-3 Language Model Explained](https://lambdalabs.com/blog/demystifying-gpt-3/)

Some interesting take-aways:

* GPT-3 demonstrates that a language model trained on enough data can solve NLP tasks that it has never seen. That is, GPT-3 studies the model as a general solution for many downstream jobs **without fine-tuning**.
* It would take **355 years** to train GPT-3 on a Tesla V100, the fastest GPU on the market.
* It would cost **\~$4,600,000** to train GPT-3 on using the lowest cost GPU cloud provider."
58,machinelearning,open-ai,top,2020-04-30 17:00:10,"[R] OpenAI opensources Jukebox, a neural net that generates music",gohu_cd,False,0.97,438,gazkh7,https://www.reddit.com/r/MachineLearning/comments/gazkh7/r_openai_opensources_jukebox_a_neural_net_that/,85,1588266010.0,"Provided with genre, artist, and lyrics as input, Jukebox outputs a new music sample produced from scratch.

[https://openai.com/blog/jukebox/](https://openai.com/blog/jukebox/)

[https://jukebox.openai.com](https://jukebox.openai.com/)

The model behind this tool is VQ-VAE."
59,machinelearning,open-ai,top,2023-12-20 13:59:53,[D] Mistral received funding and is worth billions now. Are open source LLMs the future?,BelowaverageReggie34,False,0.96,435,18mv8le,https://www.reddit.com/r/MachineLearning/comments/18mv8le/d_mistral_received_funding_and_is_worth_billions/,156,1703080793.0," Came across this intriguing [article](https://gizmodo.com/mistral-artificial-intelligence-gpt-3-openai-1851091217) about Mistral, an open-source LLM that recently scored 400 million in funding, now valued at 2 billion. Are open-source LLMs gonna be the future? Considering the trust issues with ChatGPT and the debates about its safety, the idea of open-source LLMs seems to be the best bet imo.

Unlike closed-source models, users can verify the privacy claims of open-source models. There have been some good things being said about Mistral, and I only hope such open source LLMs secure enough funding to compete with giants like OpenAI. Maybe then, ChatGPT will also be forced to go open source?

With that said, I'm also hopeful that competitors like [Silatus](https://silatus.com/) and [Durable](https://durable.co/), which already use multiple models, consider using open-source models like Mistral into their frameworks. If that happens, maybe there might be a shift in AI privacy. What do you guys think? Are open-source LLMs the future, especially with the funding backing them?"
60,machinelearning,open-ai,top,2020-01-15 21:17:48,[R] Using neural networks to solve advanced mathematics equations,downtownslim,False,0.97,432,ep8m3q,https://www.reddit.com/r/MachineLearning/comments/ep8m3q/r_using_neural_networks_to_solve_advanced/,58,1579123068.0,"Facebook AI has built the first AI system that can solve advanced mathematics equations using symbolic reasoning. By developing a new way to represent complex mathematical expressions as a kind of language and then treating solutions as a translation problem for sequence-to-sequence neural networks, we built a system that outperforms traditional computation systems at solving integration problems and both first- and second-order differential equations.

Previously, these kinds of problems were considered out of the reach of deep learning models, because solving complex equations requires precision rather than approximation. Neural networks excel at learning to succeed through approximation, such as recognizing that a particular pattern of pixels is likely to be an image of a dog or that features of a sentence in one language match those in another. Solving complex equations also requires the ability to work with symbolic data, such as the letters in the formula b - 4ac = 7. Such variables can’t be directly added, multiplied, or divided, and using only traditional pattern matching or statistical analysis, neural networks were limited to extremely simple mathematical problems.

Our solution was an entirely new approach that treats complex equations like sentences in a language. This allowed us to leverage proven techniques in neural machine translation (NMT), training models to essentially translate problems into solutions. Implementing this approach required developing a method for breaking existing mathematical expressions into a language-like syntax, as well as generating a large-scale training data set of more than 100M paired equations and solutions.

When presented with thousands of unseen expressions — equations that weren’t part of its training data — our model performed with significantly more speed and accuracy than traditional, algebra-based equation-solving software, such as Maple, Mathematica, and Matlab. This work not only demonstrates that deep learning can be used for symbolic reasoning but also suggests that neural networks have the potential to tackle a wider variety of tasks, including those not typically associated with pattern recognition. We’re sharing details about our approach as well as methods to help others generate similar training sets.

A new way to apply NMT

Humans who are particularly good at symbolic math often rely on a kind of intuition. They have a sense of what the solution to a given problem should look like — such as observing that if there is a cosine in the function we want to integrate, then there may be a sine in its integral — and then do the necessary work to prove it. This is different from the direct calculation required for algebra. By training a model to detect patterns in symbolic equations, we believed that a neural network could piece together the clues that led to their solutions, roughly similar to a human’s intuition-based approach to complex problems. So we began exploring symbolic reasoning as an NMT problem, in which a model could predict possible solutions based on examples of problems and their matching solutions.

An example of how our approach expands an existing equation (on the left) into an expression tree that can serve as input for a translation model. For this equation, the preorder sequence input into our model would be: (plus, times, 3, power, x, 2, minus, cosine, times, 2, x, 1).

To implement this application with neural networks, we needed a novel way of representing mathematical expressions. NMT systems are typically sequence-to-sequence (seq2seq) models, using sequences of words as input, and outputting new sequences, allowing them to translate complete sentences rather than individual words. We used a two-step approach to apply this method to symbolic equations. First, we developed a process that effectively unpacks equations, laying them out in a branching, treelike structure that can then be expanded into sequences that are compatible with seq2seq models. Constants and variables act as leaves, while operators (such as plus and minus) and functions are the internal nodes that connect the branches of the tree.

&#x200B;

Though it might not look like a traditional language, organizing expressions in this way provides a language-like syntax for equations — numbers and variables are nouns, while operators act as verbs. Our approach enables an NMT model to learn to align the patterns of a given tree-structured problem with its matching solution (also expressed as a tree), similar to matching a sentence in one language with its confirmed translation. This method lets us leverage powerful, out-of-the-box seq2seq NMT models, swapping out sequences of words for sequences of symbols.

&#x200B;

Building a new data set for training

Though our expression-tree syntax made it theoretically possible for an NMT model to effectively translate complex math problems into solutions, training such a model would require a large set of examples. And because in the two classes of problems we focused on — integration and differential equations — a randomly generated problem does not always have a solution, we couldn’t simply collect equations and feed them into the system. We needed to generate an entirely novel training set consisting of examples of solved equations restructured as model-readable expression trees. This resulted in problem-solution pairs, similar to a corpus of sentences translated between languages. Our set would also have to be significantly larger than the training data used in previous research in this area, which has attempted to train systems on thousands of examples. Since neural networks generally perform better when they have more training data, we created a set with millions of examples.

&#x200B;

Building this data set required us to incorporate a range of data cleaning and generation techniques. For our symbolic integration equations, for example, we flipped the translation approach around: Instead of generating problems and finding their solutions, we generated solutions and found their problem (their derivative), which is a much easier task. This approach of generating problems from their solutions — what engineers sometimes refer to as trapdoor problems — made it feasible to create millions of integration examples. Our resulting translation-inspired data set consists of roughly 100M paired examples, with subsets of integration problems as well as first- and second-order differential equations.

&#x200B;

We used this data set to train a seq2seq transformer model with eight attention heads and six layers. Transformers are commonly used for translation tasks, and our network was built to predict the solutions for different kinds of equations, such as determining a primitive for a given function. To gauge our model’s performance, we presented it with 5,000 unseen expressions, forcing the system to recognize patterns within equations that didn’t appear in its training. Our model demonstrated 99.7 percent accuracy when solving integration problems, and 94 percent and 81.2 percent accuracy, respectively, for first- and second-order differential equations. Those results exceeded those of all three of the traditional equation solvers we tested against. Mathematica achieved the next best results, with 84 percent accuracy on the same integration problems and 77.2 percent and 61.6 percent for differential equation results. Our model also returned most predictions in less than 0.5 second, while the other systems took several minutes to find a solution and sometimes timed out entirely.

Our model took the equations on the left as input — equations that both Mathematica and Matlab were unable to solve — and was able to find correct solutions (shown on the right) in less than one second.

Comparing generated solutions to reference solutions allowed us to easily and precisely validate the results. But our model is also able to produce multiple solutions for a given equation. This is similar to what happens in machine translation, where there are many ways to translate an input sentence.

What’s next for equation-solving AI

Our model currently works on problems with a single variable, and we plan to expand it to multiple-variable equations. This approach could also be applied to other mathematics- and logic-based fields, such as physics, potentially leading to software that assists scientists in a broad range of work.

But our system has broader implications for the study and use of neural networks. By discovering a way to use deep learning where it was previously seen as unfeasible, this work suggests that other tasks could benefit from AI. Whether through the further application of NLP techniques to domains that haven’t traditionally been associated with languages, or through even more open-ended explorations of pattern recognition in new or seemingly unrelated tasks, the perceived limitations of neural networks may be limitations of imagination, not technology.

[https://ai.facebook.com/blog/using-neural-networks-to-solve-advanced-mathematics-equations/](https://ai.facebook.com/blog/using-neural-networks-to-solve-advanced-mathematics-equations/)"
61,machinelearning,open-ai,top,2021-02-15 07:15:23,[P] BurnedPapers - where unreproducible papers come to live,ContributionSecure14,False,0.85,428,lk8ad0,https://www.reddit.com/r/MachineLearning/comments/lk8ad0/p_burnedpapers_where_unreproducible_papers_come/,163,1613373323.0,"EDIT: Some people suggested that the original name seemed antagonistic towards authors and I agree. So the new name is now **PapersWithoutCode**. (Credit to /u/deep_ai for suggesting the name)  


Submission link: [www.paperswithoutcode.com](https://www.paperswithoutcode.com)  
Results: [papers.paperswithoutcode.com](https://papers.paperswithoutcode.com)  
Context: [https://www.reddit.com/r/MachineLearning/comments/lk03ef/d\_list\_of\_unreproducible\_papers/](https://www.reddit.com/r/MachineLearning/comments/lk03ef/d_list_of_unreproducible_papers/)

I posted about not being able to reproduce a paper today and apparently it struck a chord with a lot of people who have faced the issue.

I'm not sure if this is the best or worst idea ever but I figured it would be useful to collect a list of papers which people have tried to reproduce and failed. This will give the authors a chance to either release their code, provide pointers or rescind the paper. My hope is that this incentivizes a healthier ML research culture around not publishing unreproducible work.

I realize that this system can be abused so in order to ensure that the reputation of the authors is not unnecessarily tarnished, the authors will be given a week to respond and their response will be reflected in the spreadsheet. It would be great if this can morph into a post-acceptance OpenReview kind of thing where the authors can have a dialogue with people trying to build off their work.

This is ultimately an experiment so I'm open to constructive feedback that best serves our community.  


&#x200B;"
62,machinelearning,open-ai,top,2022-02-28 13:50:27,"[N] TorchStudio, a free open source IDE for PyTorch",divideconcept,False,0.97,433,t3g209,https://www.reddit.com/r/MachineLearning/comments/t3g209/n_torchstudio_a_free_open_source_ide_for_pytorch/,60,1646056227.0,"Hi, after months of closed beta I'm launching today a free, open source IDE for PyTorch called TorchStudio. It aims to greatly simplify researches and trainings with PyTorch and its ecosystem, so that most tasks can be done visually in a couple clicks. Hope you'll like it, I'm looking forward to feedback and suggestions :)

\-> https://torchstudio.ai"
63,machinelearning,open-ai,top,2022-08-22 21:00:01,[D] StableDiffusion v1.4 is entirely public. What do you think about Stability.ai ?,dasayan05,False,0.98,428,wv50uh,https://www.reddit.com/r/MachineLearning/comments/wv50uh/d_stablediffusion_v14_is_entirely_public_what_do/,123,1661202001.0,"In case you haven't noticed, [stability.ai](https://stability.ai) just open-sourced their latest version of StableDiffusion to the public. Here is the link: [https://stability.ai/blog/stable-diffusion-public-release](https://stability.ai/blog/stable-diffusion-public-release)

It is so fast and small (memory footprint) that it can run on consumer grade GPUs. I just generated my first ""astronaut riding a horse on mars"" on my local GTX3090.

[Astronaut riding a horse on mars](https://preview.redd.it/jpceq4klwbj91.png?width=512&format=png&auto=webp&s=b84b7c1cf7e09fdcf326145e5d17485c9376ffb4)

So what is opinion on open-sourcing such powerful models ? And, what do you think about [stability.ai](https://stability.ai) as an organisation ? Do you feel they can potentially be the next OpenAI ?"
64,machinelearning,open-ai,top,2023-05-03 23:48:17,[Discussion]: Mark Zuckerberg on Meta's Strategy on Open Source and AI during the earnings call,noiseinvacuum,False,0.95,424,1373nhq,https://www.reddit.com/r/MachineLearning/comments/1373nhq/discussion_mark_zuckerberg_on_metas_strategy_on/,85,1683157697.0,"During  the recent earnings call, Mark Zuckerberg answered a question from Eric  Sheridan of Goldman Sachs on Meta's AI strategy, opportunities to  integrate into products, and why they open source models and how it  would benefit their business.

I found the reasoning to be very sound and promising for the OSS and AI community.

The  biggest risk from AI, in my opinion, is not the doomsday scenarios that  intuitively come to mind but rather that the most powerful AI systems  will only be accessible to the most powerful and resourceful  corporations.

Quote copied from Ben Thompson's write up on Meta's earning in his [Stratechery blog post](https://stratechery.com/2023/facebook-earnings-generative-ai-and-messaging-monetization-open-source-and-ai/) which goes beyond AI. *It's behind a paywall but I highly recommend it personally.*

Some noteworthy quotes that signal the thought process at Meta FAIR and more broadly

* We’re just playing a different game on the infrastructure  than companies like Google or Microsoft or Amazon
* We would aspire to and hope to make even more open than that. So, we’ll need to figure out a way to do that.
* ...lead us to do more work in terms of open sourcing, some of the lower level models and tools
* Open sourcing low level tools make the way we run all this infrastructure more efficient over time.
* On  PyTorch: It’s generally been very valuable for us to provide that  because now  all of the best developers across the industry are using  tools that  we’re also using internally.
* I would expect us to be pushing and helping  to build out an open ecosystem.

For  all the negative that comes out of the popular discourse on Meta, I  think their work to open source key tech tools over the last 10 years  has been exceptional, here's hoping it continues into this decade of AI  and pushes other tech giants to also realize the benefits of Open  Source.

Full Transcript:

>Right  now most of the companies that are training large language  models have  business models that lead them to a closed approach to development. I  think **there’s an** **important opportunity to help create an  open ecosystem.**  If we can help be a part of this, then much of the  industry will  standardize on using these open tools and help improve  them further. So  this will make it easier for other companies to  integrate with our  products and platforms as we enable more  integrations, and that will  help our products stay at the leading edge  as well.  
Our  approach to AI and our infrastructure has always been fairly  open. We  open source many of our state of the art models so people can   experiment and build with them. This quarter we released our LLaMa LLM   to researchers. It has 65 billion parameters but outperforms larger   models and has proven quite popular. We’ve also open-sourced three other   groundbreaking visual models along with their training data and model   weights — Segment Anything, DinoV2, and our Animated Drawings tool —  and  we’ve gotten positive feedback on all of those as well.  
I  think that there’s an important distinction between the products we  offer and a lot of the technical infrastructure, especially the software  that we write to support that. And historically, whether it’s the Open  Compute project that we’ve done or just open sourcing a lot of the   infrastructure that we’ve built, we’ve historically open sourced a lot   of that infrastructure, even though we haven’t open sourced the code for   our core products or anything like that.  
And the reason why I think why we do this is that unlike some of  the other companies in the space, **we’re not selling a cloud computing service** **where we try to keep the different software infrastructure that we’re building proprietary.** For us, **it’s way better if the industry  standardizes on the basic tools that we’re using**  and therefore we can benefit from the improvements that others make and  others’ use of those tools can, in some cases like Open Compute, **drive down the costs** of  those things which make our business more efficient too. So I think to  some degree **we’re just playing a different game** on the infrastructure  than companies like Google or Microsoft or Amazon, and that creates different incentives for us.  
So overall, I think **that that’s going to lead us to do more work in terms of open sourcing, some of the lower level models and tools**.  But of  course, a lot of the product work itself is going to be  specific and  integrated with the things that we do. So it’s not that  everything we do is going to be open. Obviously, a bunch of this needs  to be developed in a way that creates unique value for our products, but  I think in  terms of the basic models, **I would expect us to be pushing and helping  to build out an open ecosystem** here, which I think is something that’s  going to be important.  
On the AI tools, and we have a bunch of history here, right? So if you  if you look at what we’ve done with **PyTorch**,  for example, which has  generally become the standard in the industry  as a tool that a lot of  folks who are building AI models and different  things in that space use,  **it’s generally been very valuable** for us to provide that because now  all of the **best developers across the industry are using tools that  we’re also using internally**.  So the tool chain is the same. So when they create some innovation, we  can easily integrate it into the things that we’re doing. When we  improve something, it improves other products too. Because it’s  integrated with our technology stack, when there are opportunities to  make integrations with products, it’s much easier to  make sure that  developers and other folks are compatible with the things  that we need  in the way that our systems work.  
So there are a lot of advantages, but **I view this more as a kind of back end infrastructure advantage with potential integrations on the  product side**,  but one that should hopefully enable us to stay at the  leading edge  and integrate more broadly with the community and also make  the way we  run all this infrastructure more efficient over time. There  are a  number of models. I just gave PyTorch as an example. Open Compute  is  another model that has worked really well for us in this way, both to   incorporate both innovation and scale efficiency into our own   infrastructure.  
So I think that  there’s, our incentives I think are basically  aligned towards moving in  this direction. Now that said, there’s a lot  to figure out, right? So  when you asked if there are going to be other opportunities, I hope so. I  can’t speak to what all those things might  be now. This is all quite  early in getting developed. **The better we do at the foundational work, the more opportunities** I think that will come and present themselves. So I think that that’s all stuff that we need to  figure out. But at least **at the base level, I think we’re generally incentivized to move in this direction**. And we also need to figure out  how to go in that direction over time.  
I  mean, I mentioned LLaMA before and I also want to be clear that  while  I’m talking about helping contribute to an open ecosystem, LLaMA  is a  model that we only really made available to researchers and there’s  a  lot of really good stuff that’s happening there. But a lot of the  work  that we’re doing, I think, **we would aspire to and hope to make even more open than that. So, we’ll need to figure out a way to do that.**"
65,machinelearning,open-ai,top,2022-04-02 09:36:21,[P] OpenAI Codex helping to write shell commands,tomd_96,False,0.95,417,tuf0vv,https://i.redd.it/dbgbskqg53r81.gif,12,1648892181.0,
66,machinelearning,open-ai,top,2022-11-03 23:12:45,"[D] DALL·E to be made available as API, OpenAI to give users full ownership rights to generated images",TiredOldCrow,False,0.98,419,yli0r7,https://www.reddit.com/r/MachineLearning/comments/yli0r7/d_dalle_to_be_made_available_as_api_openai_to/,55,1667517165.0,"Email announcement from OpenAI below:


> DALL·E is now available as an API


> You can now integrate state of the art image generation capabilities directly into your apps and products through our new DALL·E API.


> You own the generations you create with DALL·E.


> We’ve simplified our [Terms of Use](https://openai.com/api/policies/terms/) and you now have full ownership rights to the images you create with DALL·E — in addition to the usage rights you’ve already had to use and monetize your creations however you’d like. This update is possible due to improvements to our safety systems which minimize the ability to generate content that violates our content policy.


> Sort and showcase with collections.


> You can now organize your DALL·E creations in multiple collections. Share them publicly or keep them private. Check out our [sea otter collection](https://labs.openai.com/sc/w3Q8nqVN69qkEA3ePSmrGb5t)!


> We’re constantly amazed by the innovative ways you use DALL·E and love seeing your creations out in the world. Artists who would like their work to be shared on our Instagram can request to be featured using Instagram’s collab tool. DM us there to show off how you’re using the API!  

> \- The OpenAI Team"
67,machinelearning,open-ai,top,2023-11-17 21:12:49,"[N] OpenAI Announces Leadership Transition, Fires Sam Altman",Sm0oth_kriminal,False,0.94,417,17xp85q,https://www.reddit.com/r/MachineLearning/comments/17xp85q/n_openai_announces_leadership_transition_fires/,199,1700255569.0,"EDIT: Greg Brockman has quit as well: https://x.com/gdb/status/1725667410387378559?s=46&t=1GtNUIU6ETMu4OV8_0O5eA

Source: https://openai.com/blog/openai-announces-leadership-transition

Today, it was announced that Sam Altman will no longer be CEO or affiliated with OpenAI due to a lack of “candidness” with the board. This is extremely unexpected as Sam Altman is arguably the most recognizable face of state of the art AI (of course, wouldn’t be possible without great team at OpenAI). Lots of speculation is in the air, but there clearly must have been some good reason to make such a drastic decision.

This may or may not materially affect ML research, but it is plausible that the lack of “candidness” is related to copyright data, or usage of data sources that could land OpenAI in hot water with regulatory scrutiny. Recent lawsuits (https://www.reuters.com/legal/litigation/writers-suing-openai-fire-back-companys-copyright-defense-2023-09-28/) have raised questions about both the morality and legality of how OpenAI and other research groups train LLMs.

Of course we may never know the true reasons behind this action, but what does this mean for the future of AI?"
68,machinelearning,open-ai,top,2023-11-20 08:50:54,"[N] Sam Altman and Greg Brockman, together with colleagues, will join Microsoft to lead new advanced AI research team",Civil_Collection7267,False,0.96,408,17zk6zy,https://www.reddit.com/r/MachineLearning/comments/17zk6zy/n_sam_altman_and_greg_brockman_together_with/,178,1700470254.0,"Source: [https://blogs.microsoft.com/blog/2023/11/19/a-statement-from-microsoft-chairman-and-ceo-satya-nadella/](https://blogs.microsoft.com/blog/2023/11/19/a-statement-from-microsoft-chairman-and-ceo-satya-nadella/)

>We remain committed to our partnership with OpenAI and have confidence in our product roadmap, our ability to continue to innovate with everything we announced at Microsoft Ignite, and in continuing to support our customers and partners. We look forward to getting to know Emmett Shear and OAI’s new leadership team and working with them. And we’re extremely excited to share the news that Sam Altman and Greg Brockman, together with colleagues, will be joining Microsoft to lead a new advanced AI research team. We look forward to moving quickly to provide them with the resources needed for their success.

News article covering the situation: [https://www.theverge.com/2023/11/20/23968829/microsoft-hires-sam-altman-greg-brockman-employees-openai](https://www.theverge.com/2023/11/20/23968829/microsoft-hires-sam-altman-greg-brockman-employees-openai)

>Altman’s Microsoft hiring comes just hours after negotiations with OpenAI’s board failed to bring him back as OpenAI CEO. Instead, former Twitch CEO and co-founder Emmett Shear has been named as interim CEO.  
>  
>Altman had been negotiating to return as OpenAI CEO, but OpenAI’s four-person board refused to step down and let him return."
69,machinelearning,open-ai,top,2017-10-17 09:58:13,AMA: We are David Silver and Julian Schrittwieser from DeepMind’s AlphaGo team. Ask us anything.,David_Silver,False,0.98,410,76xjb5,https://www.reddit.com/r/MachineLearning/comments/76xjb5/ama_we_are_david_silver_and_julian_schrittwieser/,483,1508234293.0,"Hi everyone. 

We are David Silver (/u/David_Silver) and Julian Schrittwieser (/u/JulianSchrittwieser) from [DeepMind] (https://deepmind.com/). We are representing the team that created [AlphaGo](https://deepmind.com/research/alphago/). 

We are excited to talk to you about the history of AlphaGo, our most recent research on AlphaGo, and the challenge matches against the 18-time world champion [Lee Sedol](https://deepmind.com/research/alphago/alphago-korea/) in 2017 and world #1 [Ke Jie](https://deepmind.com/research/alphago/alphago-china/) earlier this year. We can even talk about the [movie](https://www.alphagomovie.com/) that’s just been made about AlphaGo : )

We are opening this thread now and will be here at 1800BST/1300EST/1000PST on 19 October to answer your questions.

EDIT 1: We are excited to announce that we have just published our second Nature [paper](http://nature.com/articles/doi:10.1038/nature24270) on AlphaGo. This paper describes our latest program, [AlphaGo Zero] (https://deepmind.com/blog/alphago-zero-learning-scratch), which learns to play Go without any human data, handcrafted features, or human intervention. Unlike other versions of AlphaGo, which trained on thousands of human amateur and professional games, Zero learns Go simply by playing games against itself, starting from completely random play - ultimately resulting in our strongest player to date. We’re excited about this result and happy to answer questions about this as well.

EDIT 2: We are [here](https://twitter.com/DeepMindAI/status/921058369829527552), ready to answer your questions! 

EDIT 3: Thanks for the great questions, we've had a lot of fun :)
"
70,machinelearning,open-ai,top,2023-01-07 17:59:47,[R] Greg Yang's work on a rigorous mathematical theory for neural networks,IamTimNguyen,False,0.97,411,105v7el,https://www.reddit.com/r/MachineLearning/comments/105v7el/r_greg_yangs_work_on_a_rigorous_mathematical/,41,1673114387.0," Greg Yang is a mathematician and AI researcher at Microsoft Research who for the past several years has done incredibly original theoretical work in the understanding of large artificial neural networks. His work currently spans the following five papers:

Tensor Programs I: Wide Feedforward or Recurrent Neural Networks of Any Architecture are Gaussian Processes: [https://arxiv.org/abs/1910.12478](https://arxiv.org/abs/1910.12478)  
Tensor Programs II: Neural Tangent Kernel for Any Architecture: [https://arxiv.org/abs/2006.14548](https://arxiv.org/abs/2006.14548)  
Tensor Programs III: Neural Matrix Laws: [https://arxiv.org/abs/2009.10685](https://arxiv.org/abs/2009.10685)  
Tensor Programs IV: Feature Learning in Infinite-Width Neural Networks: [https://proceedings.mlr.press/v139/yang21c.html](https://proceedings.mlr.press/v139/yang21c.html)  
Tensor Programs V: Tuning Large Neural Networks via Zero-Shot Hyperparameter Transfer: [https://arxiv.org/abs/2203.03466](https://arxiv.org/abs/2203.03466)

In our whiteboard conversation, we get a sample of Greg's work, which goes under the name ""Tensor Programs"". The route chosen to compress Tensor Programs into the scope of a conversational video is to place its main concepts under the umbrella of one larger, central, and time-tested idea: that of taking a large N limit. This occurs most famously in the Law of Large Numbers and the Central Limit Theorem, which then play a fundamental role in the branch of mathematics known as Random Matrix Theory (RMT). We review this foundational material and then show how Tensor Programs (TP) generalizes this classical work, offering new proofs of RMT.

We conclude with the applications of Tensor Programs to a (rare!) rigorous theory of neural networks. This includes applications to a rigorous proof for the existence of the Neural Network Gaussian Process and Neural Tangent Kernel for a general class of architectures, the existence of infinite-width feature learning limits, and the muP parameterization enabling hyperparameter transfer from smaller to larger networks.

&#x200B;

https://preview.redd.it/av3ovotcunaa1.png?width=1280&format=png&auto=webp&s=dae42e6b7c41a15acd6b5eeb752b8db064d3e8da

https://preview.redd.it/hh9q6wqdunaa1.png?width=1200&format=png&auto=webp&s=b2936e129d9444fc5434a4c3f5b36315d3e06057

Youtube: [https://youtu.be/1aXOXHA7Jcw](https://youtu.be/1aXOXHA7Jcw)

Apple Podcasts: [https://podcasts.apple.com/us/podcast/the-cartesian-cafe/id1637353704](https://podcasts.apple.com/us/podcast/the-cartesian-cafe/id1637353704)

Spotify: [https://open.spotify.com/show/1X5asAByNhNr996ZsGGICG](https://open.spotify.com/show/1X5asAByNhNr996ZsGGICG)

RSS: [https://feed.podbean.com/cartesiancafe/feed.xml](https://feed.podbean.com/cartesiancafe/feed.xml)"
71,machinelearning,open-ai,top,2023-05-07 14:12:18,[P] I made a dashboard to analyze OpenAI API usage,cryptotrendz,False,0.91,410,13aotyf,https://v.redd.it/w7ahlql0ccya1,73,1683468738.0,
72,machinelearning,open-ai,top,2019-04-25 17:07:04,[N] MuseNet by OpenAI,wavelander,False,0.96,407,bhb4ds,https://openai.com/blog/musenet/,48,1556212024.0,
73,machinelearning,open-ai,top,2023-04-28 17:30:18,"[N] LAION publishes an open letter to ""protect open-source AI in Europe"" with Schmidhuber and Hochreiter as signatories",Philpax,False,0.98,401,1323w68,https://www.reddit.com/r/MachineLearning/comments/1323w68/n_laion_publishes_an_open_letter_to_protect/,61,1682703018.0,https://laion.ai/notes/letter-to-the-eu-parliament/
74,machinelearning,open-ai,top,2022-04-06 16:49:47,"[Project] Learning to Play ""Settlers of Catan"" With Deep RL - Writeup and Code",henrythepaw,False,0.99,400,txqkin,https://www.reddit.com/r/MachineLearning/comments/txqkin/project_learning_to_play_settlers_of_catan_with/,26,1649263787.0,"Hi all,

I just wanted to share a project I've been working on for the past year - using deep RL to learn to play the board game Settlers of Catan.

I expect everyone is aware of the results that DeepMind/OpenAI have got recently on Go, DOTA 2, Starcraft 2 etc, but I was motivated to see how much progress could be made with existing RL techniques on a reasonably complex game - but with access to significantly less computational resources.

Whilst I didn't end up with an agent that performs at a super-human level, there was clear learning progress and the results were quite interesting. I decided to do a full write-up of the project [here](https://settlers-rl.github.io/), which I figured could be useful for anyone else who is interested in trying to apply DRL to a new, complicated environment. I also open-sourced all the code [here](https://github.com/henrycharlesworth/settlers_of_catan_RL) for anyone interested.

If anyone has any feedback or any questions at all that'd be great!"
75,machinelearning,open-ai,top,2016-01-09 04:01:47,AMA: the OpenAI Research Team,IlyaSutskever,False,0.98,393,404r9m,https://www.reddit.com/r/MachineLearning/comments/404r9m/ama_the_openai_research_team/,285,1452312107.0,"The OpenAI research team will be answering your questions.

We are (our usernames are):  Andrej Karpathy (badmephisto), Durk Kingma (dpkingma), Greg Brockman (thegdb), Ilya Sutskever (IlyaSutskever), John Schulman (johnschulman), Vicki Cheung (vicki-openai), Wojciech Zaremba (wojzaremba).


Looking forward to your questions! "
76,machinelearning,open-ai,top,2021-04-23 14:25:29,[D] Your Favorite AI Podcasts / Blogs / Newsletters / YouTube Channels?,regalalgorithm,False,0.96,398,mwwftu,https://www.reddit.com/r/MachineLearning/comments/mwwftu/d_your_favorite_ai_podcasts_blogs_newsletters/,90,1619187929.0,"Hi there, I want to write a little blog post summarizing different ways of keeping up with AI by way of Podcasts / Blogs / Newsletters / YouTube Channels. Yeah there are a million of these, but most are not so well curated, miss a lot of stuff, and are not up to date. Criteria: still active, focused primarily on AI, high quality.

Here's what I have so far, would appreciate if you can suggest any additions!

* **Podcasts**
   * [**Machine Learning Street Talk**](https://www.youtube.com/channel/UCMLtBahI5DMrt0NPvDSoIRQ)
   * **Lex Fridman (mainly first \~150 eps)**
   * **Gigaom Voices in AI**
   * **Data Skeptic**
   * **Eye on AI**
   * **Gradient Dissent**
   * **Robot Brains**
   * **RE Work podcast**
   * **AI Today Podcast**
   * **Chat Time Data Science**
   * **Let’s Talk AI**
   * **In Machines We Trust**
* **Publications**
   * **The Gradient**
   * **Towards Data Science**
   * **Analytics Vidhya**
   * **Distill**
* **Personal Blogs**
   * [**Lil’Log**](https://lilianweng.github.io/lil-log/)
   * **Gwern**
   * **Sebastian Ruder**
   * **Alex Irpan**
   * **Chris Olah**
   * **Democratizing Automation**
   * **Approximately Correct**
   * **Off the Convex Path**
   * **Arg min blog**
   * **I’m a bandit**
* **Academic Blogs**
   * **SAIL Blog**
   * **Berkeley AI Blog**
   * **Machine Learning at Berkeley Blog**
   * **CMU ML Blog**
   * **ML MIT**
   * **ML Georgia Tech**
   * **Google / Facebook / Salesforce / Microsoft / Baidu / OpenAI /  DeepMind** 
* **Journalists**
   * **Karen Hao** 
   * **Cade Metz**
   * **Will Knight**
   * **Khari Johnson**
* **Newsletters**
   * **Last Week in AI**
   * **Batch.AI**
   * **Sebasting Ruder**
   * **Artificial Intelligence Weekly News**
   * **Wired AI newsletter**
   * **Papers with Code**
   * **The Algorithm**
   * **AI Weekly**
   * **Weekly Robotics**
   * **Import AI**
   * **Deep Learning Weekly**
   * **H+ Weekly**
   * **ChinAI Newsletter**
   * **THe EuropeanAI Newsletter**

**Youtube Channels**

* **Talks**
   * [**Amii Intelligence**](https://www.youtube.com/channel/UCxxisInVr7upxv1yUhSgdBA)
   * [**CMU AI Seminar**](https://www.youtube.com/channel/UCLh3OUmBGe4wPyVZiI771ng)
   * [**Robotics Institute Seminar Series**](https://www.youtube.com/playlist?list=PLCFD85BC79FE703DF)
   * [**Machine Learning Center at Georgia Tech**](https://www.youtube.com/channel/UCugI4c0S6-yVi9KfdkDU0aw/videos)
   * [**Robotics Today**](https://www.youtube.com/channel/UCtfiXX2nJ5Qz-ZxGEwDCy5A)
   * [**Stanford MLSys Seminars**](https://www.youtube.com/channel/UCzz6ructab1U44QPI3HpZEQ)
   * [**MIT Embodied Intelligence**](https://www.youtube.com/channel/UCnXGbvgu9071i3koFooncAw)
* **Interviews**
   * **See podcasts**
* **Paper Summaries** 
   * [**AI Coffee Break with Letitia**](https://www.youtube.com/c/AICoffeeBreak/featured)
   * [**Henry AI Labs**](https://www.youtube.com/channel/UCHB9VepY6kYvZjj0Bgxnpbw)
   * [**Yannic Kilcher**](https://www.youtube.com/channel/UCZHmQk67mSJgfCCTn7xBfew)
   * **Arxiv Insights**
* **Lessons**
   * [**3Blue1Brown**](https://www.youtube.com/c/3blue1brown/featured)
   * [**Jordan Harrod**](https://www.youtube.com/channel/UC1H1NWNTG2Xi3pt85ykVSHA)
   * [**vcubingx**](https://www.youtube.com/channel/UCv0nF8zWevEsSVcmz6mlw6A)
   * [**Leo Isikdogan**](https://www.youtube.com/channel/UC-YAxUbpa1hvRyfJBKFNcJA)
* **Demos**
   * [**bycloud**](https://www.youtube.com/channel/UCgfe2ooZD3VJPB6aJAnuQng)
   * [**Two Minute Papers**](https://www.youtube.com/channel/UCbfYPyITQ-7l4upoX8nvctg)
   * [**Code Bullet**](https://www.youtube.com/channel/UC0e3QhIYukixgh5VVpKHH9Q)
   * [**What's AI**](https://www.youtube.com/c/WhatsAI/videos)"
77,machinelearning,open-ai,top,2020-10-26 04:08:25,"[P] Dataset of 196,640 books in plain text for training large language models such as GPT",hardmaru,False,0.98,397,ji7y06,https://www.reddit.com/r/MachineLearning/comments/ji7y06/p_dataset_of_196640_books_in_plain_text_for/,20,1603685305.0,"Link for instructions before downloading a 37GB tarball:

https://github.com/soskek/bookcorpus/issues/27#issuecomment-716104208

*Shawn Presser released this dataset. From his [Tweet](https://twitter.com/theshawwn/status/1320282149329784833) thread:*

---

Suppose you wanted to train a world-class GPT model, just like OpenAI. How? You have no data.

Now you do. Now everyone does.

Presenting ""books3"", aka ""all of bibliotik""

- 196,640 books
- in plain .txt
- reliable, direct download, for years: [link to large tar.gz file](https://the-eye.eu/public/AI/pile_preliminary_components/books1.tar.gz)

*There is more information on the [GitHub post](https://github.com/soskek/bookcorpus/issues/27) and [Tweet thread](https://twitter.com/theshawwn/status/1320282149329784833).*"
78,machinelearning,open-ai,top,2021-02-25 00:31:22,[N] OpenAI has released the encoder and decoder for the discrete VAE used for DALL-E,Wiskkey,False,0.97,392,lrroom,https://www.reddit.com/r/MachineLearning/comments/lrroom/n_openai_has_released_the_encoder_and_decoder_for/,69,1614213082.0,"Background info: [OpenAI's DALL-E blog post](https://openai.com/blog/dall-e/).

Repo: [https://github.com/openai/DALL-E](https://github.com/openai/DALL-E).

[Google Colab notebook](https://colab.research.google.com/github/openai/DALL-E/blob/master/notebooks/usage.ipynb).

Add this line as the first line of the Colab notebook:

    !pip install git+https://github.com/openai/DALL-E.git

I'm not an expert in this area, but nonetheless I'll try to provide more context about what was released today. This is one of the components of DALL-E, but not the entirety of DALL-E. This is the DALL-E component that generates 256x256 pixel images from a [32x32 grid of numbers, each with 8192 possible values](https://www.reddit.com/r/MachineLearning/comments/kr63ot/r_new_paper_from_openai_dalle_creating_images/gi8wy8q/) (and vice-versa). What we don't have for DALL-E is the language model that takes as input text (and optionally part of an image) and returns as output the 32x32 grid of numbers.

I have 3 non-cherry-picked examples of image decoding/encoding using the Colab notebook at [this post](https://www.reddit.com/r/MediaSynthesis/comments/lroigk/for_developers_openai_has_released_the_encoder/).

**Update**: The [DALL-E paper](https://www.reddit.com/r/MachineLearning/comments/lrx40h/r_openai_has_released_the_paper_associated_with/) was released after I created this post.

**Update**: A Google Colab notebook using this DALL-E component has already been released: [Text-to-image Google Colab notebook ""Aleph-Image: CLIPxDAll-E"" has been released. This notebook uses OpenAI's CLIP neural network to steer OpenAI's DALL-E image generator to try to match a given text description.](https://www.reddit.com/r/MachineLearning/comments/ls0e0f/p_texttoimage_google_colab_notebook_alephimage/)"
79,machinelearning,open-ai,top,2017-06-21 00:41:00,[N] Andrej Karpathy leaves OpenAI for Tesla ('Director of AI and Autopilot Vision'),gwern,False,0.93,397,6iib9r,https://techcrunch.com/2017/06/20/tesla-hires-deep-learning-expert-andrej-karpathy-to-lead-autopilot-vision/?,98,1498005660.0,
80,machinelearning,open-ai,top,2023-05-17 00:35:25,[D] Advocating for Open Models in AI Oversight: Stability AI's Letter to the United States Senate,hardmaru,False,0.96,399,13jm95w,https://www.reddit.com/r/MachineLearning/comments/13jm95w/d_advocating_for_open_models_in_ai_oversight/,44,1684283725.0,"Source: https://stability.ai/blog/stability-ai-letter-us-senate-ai-oversight

*Today, the United States Senate held a hearing to consider the future of AI oversight. Ahead of the hearing, Stability AI was pleased to share a detailed paper emphasizing the importance of open models for a transparent, competitive, and resilient digital economy.*

*“These technologies will be the backbone of our digital economy, and it is essential that the public can scrutinize their development. Open models and open datasets will help to improve safety through transparency, foster competition, and ensure the United States retains strategic leadership in critical AI capabilities. Grassroots innovation is America’s greatest asset, and open models will help to put these tools in the hands of workers and firms across the economy.”*

*You can read the full paper [here](https://static1.squarespace.com/static/6213c340453c3f502425776e/t/6463b486b97b333044ea2564/1684255881952/Statement+from+Stability+AI+to+the+Senate+Judiciary+Subcommittee+on+Privacy%2C+Technology%2C+and+the+Law.pdf)*

(Note:I'm currently an employee of Stability AI, but even if I wasn't I would have posted it as a news or discussion category item anyways as I think it is worthy of discussion on this subreddit.)"
81,machinelearning,open-ai,top,2020-05-25 16:10:10,[D] Uber AI's Contributions,EmergenceIsMagic,False,0.95,394,gqdq2o,https://www.reddit.com/r/MachineLearning/comments/gqdq2o/d_uber_ais_contributions/,160,1590423010.0,"As we learned last week, [Uber decided to wind down their AI lab](https://www.reddit.com/r/MachineLearning/comments/gm80x2/n_uber_to_cut_3000_jobs_including_rollbacks_on_ai/). Uber AI started as an acquisition of Geometric Intelligence, which was founded in October 2014 by three professors: Gary Marcus, a cognitive scientist from NYU, also well-known as an author; Zoubin Ghahramani, a Cambridge professor of machine learning and Fellow of the Royal Society; Kenneth Stanley, a professor of computer science at the University of Central Florida and pioneer in evolutionary approaches to machine learning; and Douglas Bemis, a recent NYU graduate with a PhD in neurolinguistics. Other team members included Noah Goodman (Stanford), Jeff Clune (Wyoming) and Jason Yosinski (a recent graduate of Cornell).

I would like to use this post as an opportunity for redditors to mention any work done by Uber AI that they feel deserves recognition. Any work mentioned here ([https://eng.uber.com/research/?\_sft\_category=research-ai-ml](https://eng.uber.com/research/?_sft_category=research-ai-ml)) or here ([https://eng.uber.com/category/articles/ai/](https://eng.uber.com/category/articles/ai/)) is fair game.

Some things I personally thought are worth reading/watching related to Evolutionary AI:

* [Welcoming the Era of Deep Neuroevolution](https://eng.uber.com/deep-neuroevolution/)
* [The surprising creativity of digital evolution: A collection of anecdotes from the evolutionary computation and artificial life research communities](https://eng.uber.com/research/the-surprising-creativity-of-digital-evolution-a-collection-of-anecdotes-from-the-evolutionary-computation-and-artificial-life-research-communities/)
* [Jeff Clune's Exotic Meta-Learning Lecture at Stanford](https://www.youtube.com/watch?v=cZUdaqTC1TA)
* [Kenneth Stanley's Lecture on On Creativity, Objectives, and Open-Endedness](https://www.youtube.com/watch?v=y2I4E_UINRo)
* Also, here's a summary by an outside source: [https://analyticsindiamag.com/uber-ai-labs-layoffs/](https://analyticsindiamag.com/uber-ai-labs-layoffs/) (I found it amusing that they quoted u/hardmaru quoting me).

One reason why I find this research fascinating is encapsulated in the quote below:

""Right now, the majority of the field is engaged in what I call the manual path to AI. In the first phase, which we are in now, everyone is manually creating different building blocks of intelligence. The assumption is that at some point in the future our community will finish discovering all the necessary building blocks and then will take on the Herculean task of putting all of these building blocks together into an extremely complex thinking machine. That might work, and some part of our community should pursue that path. However, I think a faster path that is more likely to be successful is to rely on learning and computation: the idea is to create an algorithm that itself designs all the building blocks and figures out how to put them together, which I call an AI-generating algorithm. Such an algorithm starts out not containing much intelligence at all and bootstraps itself up in complexity to ultimately produce extremely powerful general AI. That’s what happened on Earth.  The simple Darwinian algorithm coupled with a planet-sized computer ultimately produced the human brain. I think that it’s really interesting and exciting to think about how we can create algorithms that mimic what happened to Earth in that way. Of course, we also have to figure out how to make them work so they do not require a planet-sized computer."" - [Jeff Clune](https://eng.uber.com/jeff-clune-interview/)

**Please share any Uber AI research you feel deserves recognition!**

This post is meant just as a show of appreciation to the researchers who contributed to the field of AI. **This post is not just for the people mentioned above, but the other up-and-coming researchers who also contributed to the field while at Uber AI and might be searching for new job opportunities.** **Please limit comments to Uber AI research only and not the company itself.**"
82,machinelearning,open-ai,top,2023-02-22 17:00:26,[P] MIT Introduction to Data-Centric AI,anishathalye,False,0.97,389,1194wm0,https://www.reddit.com/r/MachineLearning/comments/1194wm0/p_mit_introduction_to_datacentric_ai/,9,1677085226.0,"Announcing the [first-ever course on Data-Centric AI](https://dcai.csail.mit.edu/). Learn how to train better ML models by improving the data.

[Course homepage](https://dcai.csail.mit.edu/) | [Lecture videos on YouTube](https://www.youtube.com/watch?v=ayzOzZGHZy4&list=PLnSYPjg2dHQKdig0vVbN-ZnEU0yNJ1mo5) | [Lab Assignments](https://github.com/dcai-course/dcai-lab)

The course covers:

- [Data-Centric AI vs. Model-Centric AI](https://dcai.csail.mit.edu/lectures/data-centric-model-centric/)
- [Label Errors](https://dcai.csail.mit.edu/lectures/label-errors/)
- [Dataset Creation and Curation](https://dcai.csail.mit.edu/lectures/dataset-creation-curation/)
- [Data-centric Evaluation of ML Models](https://dcai.csail.mit.edu/lectures/data-centric-evaluation/)
- [Class Imbalance, Outliers, and Distribution Shift](https://dcai.csail.mit.edu/lectures/imbalance-outliers-shift/)
- [Growing or Compressing Datasets](https://dcai.csail.mit.edu/lectures/growing-compressing-datasets/)
- [Interpretability in Data-Centric ML](https://dcai.csail.mit.edu/lectures/interpretable-features/)
- [Encoding Human Priors: Data Augmentation and Prompt Engineering](https://dcai.csail.mit.edu/lectures/human-priors/)
- [Data Privacy and Security](https://dcai.csail.mit.edu/lectures/data-privacy-security/)

MIT, like most universities, has many courses on machine learning (6.036, 6.867, and many others). Those classes teach techniques to produce effective models for a given dataset, and the classes focus heavily on the mathematical details of models rather than practical applications. However, in real-world applications of ML, the dataset is not fixed, and focusing on improving the data often gives better results than improving the model. We’ve personally seen this time and time again in our applied ML work as well as our research.

Data-Centric AI (DCAI) is an emerging science that studies techniques to improve datasets in a systematic/algorithmic way — given that this topic wasn’t covered in the standard curriculum, we (a group of PhD candidates and grads) thought that we should put together a new class! We taught this intensive 2-week course in January over MIT’s IAP term, and we’ve just published all the course material, including lecture videos, lecture notes, hands-on lab assignments, and lab solutions, in hopes that people outside the MIT community would find these resources useful.

We’d be happy to answer any questions related to the class or DCAI in general, and we’d love to hear any feedback on how we can improve the course material. Introduction to Data-Centric AI is open-source opencourseware, so feel free to make improvements directly: [https://github.com/dcai-course/dcai-course](https://github.com/dcai-course/dcai-course)."
83,machinelearning,open-ai,top,2021-05-26 17:31:34,[N] OpenAI announces OpenAI Startup Fund investing $100 million into AI startups,minimaxir,False,0.97,380,nlmlbg,https://www.reddit.com/r/MachineLearning/comments/nlmlbg/n_openai_announces_openai_startup_fund_investing/,39,1622050294.0,"https://openai.com/fund/
https://techcrunch.com/2021/05/26/openais-100m-startup-fund-will-make-big-early-bets-with-microsoft-as-partner/

It does not appear to be explicitly GPT-3 related (any type of AI is accepted), but hints very heavily toward favoring applications using it."
84,machinelearning,open-ai,top,2024-02-15 18:39:06,[D] OpenAI Sora Video Gen -- How??,htrp,False,0.96,385,1armmng,https://www.reddit.com/r/MachineLearning/comments/1armmng/d_openai_sora_video_gen_how/,199,1708022346.0,">Introducing Sora, our text-to-video model. Sora can generate videos up to a minute long while maintaining visual quality and adherence to the user’s prompt.




https://openai.com/sora

Research Notes
Sora is a diffusion model, which generates a video by starting off with one that looks like static noise and gradually transforms it by removing the noise over many steps.

Sora is capable of generating entire videos all at once or extending generated videos to make them longer. By giving the model foresight of many frames at a time, we’ve solved a challenging problem of making sure a subject stays the same even when it goes out of view temporarily.

Similar to GPT models, Sora uses a transformer architecture, unlocking superior scaling performance.

We represent videos and images as collections of smaller units of data called patches, each of which is akin to a token in GPT. By unifying how we represent data, we can train diffusion transformers on a wider range of visual data than was possible before, spanning different durations, resolutions and aspect ratios.

Sora builds on past research in DALL·E and GPT models. It uses the recaptioning technique from DALL·E 3, which involves generating highly descriptive captions for the visual training data. As a result, the model is able to follow the user’s text instructions in the generated video more faithfully.

In addition to being able to generate a video solely from text instructions, the model is able to take an existing still image and generate a video from it, animating the image’s contents with accuracy and attention to small detail. The model can also take an existing video and extend it or fill in missing frames. Learn more in our technical paper (coming later today).

Sora serves as a foundation for models that can understand and simulate the real world, a capability we believe will be an important milestone for achieving AGI.



Example Video: https://cdn.openai.com/sora/videos/cat-on-bed.mp4

Tech paper will be released later today. But brainstorming how?"
85,machinelearning,open-ai,top,2016-11-21 17:29:10,[News] Google opens new AI lab and invests $3.4M in Montreal-based AI research,DrPharael,False,0.93,379,5e59bj,https://techcrunch.com/2016/11/21/google-opens-new-ai-lab-and-invests-3-4m-in-montreal-based-ai-research/?sr_share=facebook,29,1479749350.0,
86,machinelearning,open-ai,top,2023-11-23 00:14:50,[D] Exclusive: Sam Altman's ouster at OpenAI was precipitated by letter to board about AI breakthrough,blabboy,False,0.83,377,181o1q4,https://www.reddit.com/r/MachineLearning/comments/181o1q4/d_exclusive_sam_altmans_ouster_at_openai_was/,180,1700698490.0,"According to one of the sources, long-time executive Mira Murati told employees on Wednesday that a letter about the AI breakthrough called Q* (pronounced Q-Star), precipitated the board's actions.

The maker of ChatGPT had made progress on Q*, which some internally believe could be a breakthrough in the startup's search for superintelligence, also known as artificial general intelligence (AGI), one of the people told Reuters. OpenAI defines AGI as AI systems that are smarter than humans.

https://www.reuters.com/technology/sam-altmans-ouster-openai-was-precipitated-by-letter-board-about-ai-breakthrough-2023-11-22/"
87,machinelearning,open-ai,top,2021-06-20 06:20:15,[N] Facebook AI Open Sources AugLy: A New Python Library For Data Augmentation To Develop Robust Machine Learning Models,ai-lover,False,0.97,370,o3z63e,https://www.reddit.com/r/MachineLearning/comments/o3z63e/n_facebook_ai_open_sources_augly_a_new_python/,19,1624170015.0,"Facebook has recently open-sourced AugLy, a new Python library that aims to help AI researchers use data augmentations to evaluate and improve the durability of their machine learning models. AugLy provides sophisticated data augmentation tools to create samples to train and test different systems.

AugLy is a new open-source data augmentation library that combines audio, image, video, and text, becoming increasingly significant in several AI research fields. It offers over 100 data augmentations based on people’s real-life images and videos on platforms like Facebook and Instagram.

Article: [https://www.marktechpost.com/2021/06/19/facebook-ai-open-sources-augly-a-new-python-library-for-data-augmentation-to-develop-robust-machine-learning-models/](https://www.marktechpost.com/2021/06/19/facebook-ai-open-sources-augly-a-new-python-library-for-data-augmentation-to-develop-robust-machine-learning-models/) 

Github: [https://github.com/facebookresearch/AugLy](https://github.com/facebookresearch/AugLy)

Facebook Blog: https://ai.facebook.com/blog/augly-a-new-data-augmentation-library-to-help-build-more-robust-ai-models/"
88,machinelearning,open-ai,top,2022-05-10 19:11:43,"[R] RWKV-v2-RNN : A parallelizable RNN with transformer-level LM performance, and without using attention",bo_peng,False,0.98,372,umq908,https://www.reddit.com/r/MachineLearning/comments/umq908/r_rwkvv2rnn_a_parallelizable_rnn_with/,54,1652209903.0,"Hi guys. I am an independent researcher and you might know me (BlinkDL) if you are in the EleutherAI discord.

I have built a RNN with transformer-level performance, without using attention. Moreover it supports both sequential & parallel mode in inference and training. So it's combining the best of RNN and transformer - great performance, fast inference, saves VRAM, fast training, ""infinite"" ctx\_len, and free sentence embedding.

[https://github.com/BlinkDL/RWKV-LM](https://github.com/BlinkDL/RWKV-LM)

I am training a L24-D1024 RWKV-v2-RNN LM (430M params) on the Pile with very promising results:

https://preview.redd.it/xqtkadp5pf191.png?width=946&format=png&auto=webp&s=5fd2f98978dea01e07ded77ed6b5e57b9b7645eb

**All of the trained models will be open-source.** Inference is very fast (only matrix-vector multiplications, no matrix-matrix multiplications) even on CPUs, and **I believe you can run a 1B params RWKV-v2-RNN with reasonable speed on your phone.**

It is inspired by Apple's AFT ([https://arxiv.org/abs/2105.14103](https://arxiv.org/abs/2105.14103)) with a number of my own tricks, such as:

* RNNify it (via a particular nice form of w\_{t, t\^\\prime}), and use my CUDA kernel to speedup training ([https://github.com/BlinkDL/RWKV-CUDA](https://github.com/BlinkDL/RWKV-CUDA))
* Token-shift ([https://github.com/BlinkDL/RWKV-LM#token-shift-time-shift-mixing](https://github.com/BlinkDL/RWKV-LM#token-shift-time-shift-mixing))
* SmallInitEmb ([https://github.com/BlinkDL/SmallInitEmb](https://github.com/BlinkDL/SmallInitEmb)) which helps the embedding quality, and stabilizes Post-LN (which is what I am using).

I also transferred some time-related parameters from a small model to a large model, to speed up the convergence. Basically the model learns to focus more on short-distance interactions in early layers, and long-distance interactions in later layers.

https://preview.redd.it/ibk4ic0b6py81.png?width=865&format=png&auto=webp&s=78e4f794abd0fe25c8af8fd6634836a472e4120a

The maths behind RWKV-2:

https://preview.redd.it/j1qg47ypb5691.png?width=662&format=png&auto=webp&s=6cf8eb4ba5f591d807ace347059cf210a6dc1f90

Please feel free to ask questions :)

And let me know if you'd like to test it in other domains (music / speech / protein / ViT / etc.)"
89,machinelearning,open-ai,top,2022-10-26 06:10:48,"[P] Up to 12X faster GPU inference on Bert, T5 and other transformers with OpenAI Triton kernels",pommedeterresautee,False,0.99,372,ydqmjp,https://www.reddit.com/r/MachineLearning/comments/ydqmjp/p_up_to_12x_faster_gpu_inference_on_bert_t5_and/,46,1666764648.0,"We are releasing [Kernl](https://github.com/ELS-RD/kernl/) under Apache 2 license, a library to make PyTorch models inference significantly faster. With 1 line of code we applied the optimizations and made Bert up to 12X faster than Hugging Face baseline. T5 is also covered in this first release (> 6X speed up generation and we are still halfway in the optimizations!). This has been possible because we wrote custom GPU kernels with the new OpenAI programming language Triton and leveraged TorchDynamo.

**Project link**: [https://github.com/ELS-RD/kernl/](https://github.com/ELS-RD/kernl/)

**E2E demo notebooks**: [XNLI classification](https://github.com/ELS-RD/kernl/blob/main/tutorial/bert%20e2e.ipynb), [T5 generation](https://github.com/ELS-RD/kernl/blob/main/tutorial/t5%20e2e.ipynb)

[Benchmarks ran on a 3090 RTX GPU, 12 cores Intel CPU, more info below](https://preview.redd.it/mlo3wvn0d3w91.png?width=2738&format=png&auto=webp&s=1b9dce736ee4c0e371b54b9ef796310f9728660d)

On long sequence length inputs, [Kernl](https://github.com/ELS-RD/kernl/) is most of the time the fastest inference engine, and close to Nvidia TensorRT on shortest ones. Keep in mind that Bert is one of the most optimized models out there and most of the tools listed above are very mature.

What is interesting is not that [Kernl](https://github.com/ELS-RD/kernl/) is the fastest engine (or not), but that the code of the kernels is short and easy to understand and modify. We have even added a Triton debugger and a tool (based on Fx) to ease kernel replacement so there is no need to modify PyTorch model source code.

Staying in the comfort of PyTorch / Python maintains dynamic behaviors, debugging and iteration speed. Teams designing/training a transformer model (even custom) can take care of the deployment without relying on advanced GPU knowledge (eg. CUDA programming, dedicated inference engine API, etc.).

Recently released models relying on slightly modified transformer architectures are rarely accelerated in traditional inference engines, we need to wait months to years for someone (usually inference engine maintainers) to write required custom CUDA kernels. Because here custom kernels are written in OpenAI Triton language, **anyone without CUDA experience** can easily modify them: OpenAI Triton API is simple and close to Numpy one. Kernels source code is significantly shorter than equivalent implementation in CUDA (< 200 LoC per kernel). Basic knowledge of how GPU works is enough. We are also releasing a few tutorials we initially wrote for onboarding colleagues on the project. We hope you will find them useful: [https://github.com/ELS-RD/kernl/tree/main/tutorial](https://github.com/ELS-RD/kernl/tree/main/tutorial). In particular, there is:

* Tiled matmul, the GPU way to perform matmul: [https://github.com/ELS-RD/kernl/blob/main/tutorial/1%20-%20tiled%20matmul.ipynb](https://github.com/ELS-RD/kernl/blob/main/tutorial/1%20-%20tiled%20matmul.ipynb)
* Simple explanation of what Flash attention is and how it works, a fused attention making long sequences much faster: [https://github.com/ELS-RD/kernl/blob/main/tutorial/4%20-%20flash%20attention.ipynb](https://github.com/ELS-RD/kernl/blob/main/tutorial/4%20-%20flash%20attention.ipynb)

And best of the best, because we stay in the PyTorch / Python ecosystem, we plan in our roadmap to also enable **training** with those custom kernels. In particular [Flash attention](https://github.com/HazyResearch/flash-attention) kernel should bring a 2-4X speed up and the support of very long sequences on single GPU (paper authors went as far as 16K tokens instead of traditional 512 or 2048 limits)! See below for more info.

**IMPORTANT**: Benchmarking is a difficult art, we tried to be as fair as possible. Please note that:

* Timings are based on wall-clock times and we show speedup over baseline as they are easier to compare between input shapes,
* When we need to choose between speed and output precision, we always choose precision
* HF baseline, CUDA graphs, Inductor and [Kernl](https://github.com/ELS-RD/kernl/) are in mixed precision, AITemplate, ONNX Runtime, DeepSpeed and TensorRT have their weights converted to FP16.
* Accumulation is done in FP32 for AITemplate and [Kernl](https://github.com/ELS-RD/kernl/). TensorRT is likely doing it in FP16.
* CUDA graphs is enabled for all engines except baseline, Nvfuser and ONNX Runtime which [has a limited support of it](https://github.com/microsoft/onnxruntime/issues/12977#issuecomment-1258406358).
* For [Kernl](https://github.com/ELS-RD/kernl/) and AITemplate, fast GELU has been manually disabled (TensorRT is likely using Fast GELU).
* AITemplate measures are to be taken with a grain of salt, it [doesn’t manage attention mask](https://github.com/facebookincubator/AITemplate/issues/46#issuecomment-1279975463) which means 1/ batch inference can’t be used in most scenarios (no padding support), 2/ it misses few operations on a kernel that can be compute-bounded (depends of sequence length), said otherwise it may make it slower to support attention mask, in particular on long sequences. AITemplate attention mask support will come in a future release.
* For TensorRT for best perf, we built 3 models, one per batch size. AITemplate will support dynamic shapes in a future release, so we made a model per input shape.
* Inductor is in prototype stage, performances may be improved when released, none of the disabled by default optimizations worked during our tests.

As you can see, CUDA graphs erase all CPU overhead (Python related for instance), sometimes there is no need to rely on C++/Rust to be fast! Fused kernels (in CUDA or Triton) are mostly important for longer input sequence lengths. We are aware that there are still some low hanging fruits to improve [Kernl](https://github.com/ELS-RD/kernl/) performance without sacrificing output precision, it’s just the first release. More info about how it works [here](https://github.com/ELS-RD/kernl#how).

**Why?**

We work for Lefebvre Sarrut, a leading European legal publisher. Several of our products include transformer models in latency sensitive scenarios (search, content recommendation). So far, ONNX Runtime and TensorRT served us well, and we learned interesting patterns along the way that we shared with the community through an open-source library called [transformer-deploy](https://github.com/ELS-RD/transformer-deploy). However, recent changes in our environment made our needs evolve:

* New teams in the group are deploying transformer models in prod directly with PyTorch. ONNX Runtime poses them too many challenges (like debugging precision issues in fp16). With its inference expert-oriented API, TensorRT was not even an option;
* We are exploring applications of large generative language models in legal industry, and we need easier dynamic behavior support plus more efficient quantization, our creative approaches for that purpose we shared [here on Reddit](https://www.reddit.com/r/MachineLearning/comments/uwkpmt/p_what_we_learned_by_making_t5large_2x_faster/) proved to be more fragile than we initially thought;
* New business opportunities if we were able to train models supporting large contexts (>5K tokens)

On a more personal note, I enjoyed much more writing kernels and understanding low level computation of transformers than mastering multiple complicated tools API and their environments. It really changed my intuitions and understanding about how the model works, scales, etc. It’s not just OpenAI Triton, we also did some prototyping on C++ / CUDA / Cutlass and the effect was the same, it’s all about digging to a lower level. And still the effort is IMO quite limited regarding the benefits. If you have some interest in machine learning engineering, you should probably give those tools a try.

**Future?**

Our road map includes the following elements (in no particular order):

* Faster warmup
* Ragged inference (no computation lost in padding)
* Training support (with long sequences support)
* Multi GPU (multiple parallelization schemas support)
* Quantization (PTQ)
* New batch of Cutlass kernels tests
* Improve hardware support (>= Ampere for now)
* More tuto

Regarding training, if you want to help, we have written an issue with all the required pointers, it should be very doable: [https://github.com/ELS-RD/kernl/issues/93](https://github.com/ELS-RD/kernl/issues/93)

On top of speed, one of the main benefits is the support of very long sequences (16K tokens without changing attention formula) as it’s based on [Flash Attention](https://github.com/HazyResearch/flash-attention).

Also, note that future version of PyTorch will include [Inductor](https://dev-discuss.pytorch.org/t/torchinductor-a-pytorch-native-compiler-with-define-by-run-ir-and-symbolic-shapes/747). It means that all PyTorch users will have the option to compile to Triton to get around [1.7X faster training](https://dev-discuss.pytorch.org/t/torchinductor-update-3-e2e-model-training-with-torchdynamo-inductor-gets-1-67x-2-1x-speedup/793).

A big thank you to Nvidia people who advised us during this project."
90,machinelearning,open-ai,top,2017-04-18 20:23:00,"[P] Self-driving car course with Python, TensorFlow, OpenCV, and Grand Theft Auto 5",sentdex,False,0.96,363,665flm,https://www.reddit.com/r/MachineLearning/comments/665flm/p_selfdriving_car_course_with_python_tensorflow/,20,1492546980.0,"I've put out a so far 13-part series on creating a self driving vehicle with Grand Theft Auto 5. 

**[A brief taste of what we're doing](https://twitter.com/Sentdex/status/854394799104962561)**

..or check out the latest video in the series: **[a more interesting self-driving AI](https://www.youtube.com/watch?v=nWJZ4w0HKz8)**, especially near the end. 

This is by no means a serious look into self-driving vehicles, it's just for fun, and so far the latest project has been to make a motorcycle that speeds through traffic, attempting to stay on the road and evading all the other slow drivers. 

We do all of this with basic(ish...) tools and concepts. We're reading the screen by taking screenshots with pywin32, seeing about 20 FPS with the neural network, sending keys with direct input, and then doing some analysis with OpenCV, otherwise also training with a convolutional neural network in TensorFlow. 

The goal of the series is more to show you how you can take just about whatever game you want, mapping the screen to inputs, training a neural network, and then letting the network play the game. 

It's an ongoing project, and is also **[open-source](https://github.com/sentdex/pygta5/)**

Here's a link to the **[self-driving tutorials](https://pythonprogramming.net/game-frames-open-cv-python-plays-gta-v/)**, which starts at the beginning. We start to use the neural network in **[part 9](https://pythonprogramming.net/self-driving-car-neural-network-training-data-python-plays-gta-v/)**

That's all for now, more AI in GTA to come."
91,machinelearning,open-ai,top,2022-10-03 17:18:29,[P] Launching Deep Lake: the data lake for deep learning applications - https://activeloop.ai/,davidbun,False,0.93,363,xupiia,https://www.reddit.com/r/MachineLearning/comments/xupiia/p_launching_deep_lake_the_data_lake_for_deep/,4,1664817509.0,"**tl;dr - launching Deep Lake - the data lake for deep learning applications**

Hey r/ML,

Davit here from team Activeloop. My team and I have worked for over three years on our product, and we're excited to launch the latest, most performant iteration, Deep Lake.

Deep Lake is the data lake for deep learning applications. It retains all the benefits of a vanilla data lake, with one difference. Deep Lake is optimized to store complex data, such as images, videos, annotations, embeddings, & tabular data, in the form of tensors and rapidly streams the data over the network to (1) our lightning-fast query engine: Tensor Query Language, (2) in-browser visualization engine, and (3) deep learning frameworks without sacrificing GPU utilization.

[YouTube demo](https://www.youtube.com/watch?v=SxsofpSIw3k)

[Detailed Launch post](https://www.activeloop.ai/resources/introducing-deep-lake-the-data-lake-for-deep-learning/)

**Key features**

* A scalable & efficient data storage system that can handle large amounts of complex data in a columnar fashion
* Querying and visualization engine fully supporting multimodal data types (see the video)
* Native integration with TensorFlow & PyTorch and efficient streaming of data to models and back
* Seamless connection with MLOps tools (e.g., [Weight & Biases](https://docs.activeloop.ai/playbooks/training-reproducibility-with-wandb), with more on the roadmap)

**Performance benchmarks - (if you use PyTorch & audio/video/image, use us)**  
In an [independent benchmark of open-source data loaders by the Yale Institute For Network Science](https://arxiv.org/pdf/2209.13705.pdf), Deep Lake was shown to be superior in various scenarios. For instance, there's only a 13% increase in time compared to loading from a local disk; Deep Lake outperforms all data loaders on networked loading, etc.).

**Example Workflow**

Here's a brief example of a workflow you're able to achieve with Deep Lake:

**Access Data Fast:** You start with CoCo, a fairly big dataset with 91 classes. You can load the COCO dataset in seconds by running:

    import deeplake
    ds = deeplake.load('hub://activeloop/coco-train')

**Visualize:** You can visualize the data either in-browser or within your Colab (with `ds.visualize`).

**Version Control:** Let's say you noticed that sample 30178, is a low-quality image, and you want to remove it:

    ds.pop(30178)
    ds.commit('Deleted index 30178 because the image is low quality.')

You can now revert the change any time, thanks to the git-like dataset version control.

**Query:** Suppose we want to train a model on small cars and trucks because we know our model performs poorly on small objects. In our Query UI, you can run advanced queries with built-in NumPy-like array manipulations, like:

[\(This would return up to 100 samples that contain trucks that are smaller than 50 pixels and up to 100 samples that contain cars that are smaller than 50 pixels\)](https://preview.redd.it/jkgl1vo8hmr91.png?width=1734&format=png&auto=webp&s=1e54d5c11eb7f3e1963e3104241b2dda1f39ff81)

You can then materialize the query result (Dataset View) by copying and re-chunking the data for maximum performance. You can save this query and load this subset via our Python API via

    import deeplake
    ds.load_view('Query_ID', optimize = True, num_workers = 4)

5.  **Materialize & Stream:** Finally, you can create the PyTorch data loader and stream the dataset in real-time while training the model that distinguishes cars from trucks:

    train_loader = ds_view.pytorch(num_workers = 8, shuffle = True, transform = transform_train, tensors = ['images', 'categories', 'boxes'], batch_size = 16, collate_fn = collate_fn)

You can review the rest of the code in this [data lineage playbook](https://docs.activeloop.ai/playbooks/training-with-lineage)!

Deep Lake is fresh off the ""press"", so we would really appreciate your feedback here or in our [community](https://slack.activeloop.ai), a [star on GitHub](https://github.com/activeloopai/deeplake). If you're interested to learn more, you can read the [Deep Lake academic paper](https://arxiv.org/pdf/2209.10785.pdf) or the [whitepaper](https://deeplake.ai) (that talks more about our vision!).

Cheers,

Davit & team Activeloop"
92,machinelearning,open-ai,top,2020-02-18 00:19:40,"[D] The messy, secretive reality behind OpenAI’s bid to save the world",milaworld,False,0.93,367,f5immz,https://www.reddit.com/r/MachineLearning/comments/f5immz/d_the_messy_secretive_reality_behind_openais_bid/,143,1581985180.0,"A new [story](https://www.technologyreview.com/s/615181/ai-openai-moonshot-elon-musk-sam-altman-greg-brockman-messy-secretive-reality/) by journalist [Karen Hao](https://mobile.twitter.com/_KarenHao/status/1229519114638589953) who spent six months digging into OpenAI.

She started with a few simple questions: Who are they? What are their goals? How do they work? After nearly three dozen interviews, she found so much more.

The article is worth a read. I'm not going to post an excerpt here.

The most surprising thing is that Elon Musk himself, after that article got published, [criticized](https://www.twitter.com/elonmusk/status/1229544673590599681) OpenAI and tweeted that they ""should be more open"" 🔥

With regards to AI safety, Elon [said](https://www.twitter.com/elonmusk/status/1229546206948462597) ""I have no control & only very limited insight into OpenAI. Confidence in Dario for safety is not high.""

Here is the link to the article again: https://www.technologyreview.com/s/615181/ai-openai-moonshot-elon-musk-sam-altman-greg-brockman-messy-secretive-reality/"
93,machinelearning,open-ai,top,2021-06-01 17:40:23,"[R] Chinese AI lab challenges Google, OpenAI with a model of 1.75 trillion parameters",liqui_date_me,False,0.89,358,npzqks,https://www.reddit.com/r/MachineLearning/comments/npzqks/r_chinese_ai_lab_challenges_google_openai_with_a/,167,1622569223.0,"Link here: https://en.pingwest.com/a/8693

TL;DR The Beijing Academy of Artificial Intelligence, styled as BAAI and known in Chinese as 北京智源人工智能研究院, launched the latest version of Wudao 悟道, a pre-trained deep learning model that the lab dubbed as “China’s first,” and “the world’s largest ever,” with a whopping 1.75 trillion parameters.

And the corresponding twitter thread: https://twitter.com/DavidSHolz/status/1399775371323580417

What's interesting here is BAAI is funded in part by the China’s Ministry of Science and Technology, which is China's equivalent of the NSF. The equivalent of this in the US would be for the NSF allocating billions of dollars a year *only to train models*."
94,machinelearning,open-ai,top,2022-11-15 19:17:19,[D] AMA: The Stability AI Team,stabilityai,False,0.96,360,yw6s1i,https://www.reddit.com/r/MachineLearning/comments/yw6s1i/d_ama_the_stability_ai_team/,216,1668539839.0,"Hi all,

We are the Stability AI team supporting open source ML models, code and communities.

Ask away!

Edit 1 (UTC+0 21:30): Thanks for the great questions! Taking a short break, will come back later and answer as we have time.

Edit 2 (UTC+0 22:24): Closing new questions, still answering some existing Q's posted before now."
95,machinelearning,open-ai,top,2019-08-13 16:48:08,[News] Megatron-LM: NVIDIA trains 8.3B GPT-2 using model and data parallelism on 512 GPUs. SOTA in language modelling and SQUAD. Details awaited.,Professor_Entropy,False,0.97,362,cpvssu,https://www.reddit.com/r/MachineLearning/comments/cpvssu/news_megatronlm_nvidia_trains_83b_gpt2_using/,66,1565714888.0,"Code: [https://github.com/NVIDIA/Megatron-LM](https://github.com/NVIDIA/Megatron-LM)

Unlike Open-AI, they have released the complete code for data processing, training, and evaluation.

Detailed writeup: [https://nv-adlr.github.io/MegatronLM](https://nv-adlr.github.io/MegatronLM)

From github:

>Megatron  is a large, powerful transformer. This repo is for ongoing  research on  training large, powerful transformer language models at  scale.  Currently, we support model-parallel, multinode training of [GPT2](https://d4mucfpksywv.cloudfront.net/better-language-models/language_models_are_unsupervised_multitask_learners.pdf) and [BERT](https://arxiv.org/pdf/1810.04805.pdf) in mixed precision.Our  codebase is capable of efficiently training a 72-layer, 8.3  Billion  Parameter GPT2 Language model with 8-way model and 64-way data   parallelism across 512 GPUs. We find that bigger language models are   able to surpass current GPT2-1.5B wikitext perplexities in as little as 5   epochs of training.For BERT  training our repository trains BERT Large on 64 V100 GPUs in  3 days. We  achieved a final language modeling perplexity of 3.15 and  SQuAD  F1-score of 90.7.

Their submission is not in the leaderboard of SQuAD, but this exceeds the previous best single model performance (RoBERTa 89.8).

For  language modelling they get zero-shot wikitext perplexity of 17.4 (8.3B  model) better than 18.3 of transformer-xl (257M). However they claim it  as SOTA when GPT-2 itself has 17.48 ppl, and another model has 16.4 ([https://paperswithcode.com/sota/language-modelling-on-wikitext-103](https://paperswithcode.com/sota/language-modelling-on-wikitext-103))

Sadly they haven't mentioned anything about release of the model weights."
96,machinelearning,open-ai,top,2020-04-06 02:01:33,"[P] Dive into Deep Learning: An interactive deep learning book with code, math, and discussions, based on the NumPy interface.",hardmaru,False,0.97,359,fvq3n6,https://www.reddit.com/r/MachineLearning/comments/fvq3n6/p_dive_into_deep_learning_an_interactive_deep/,26,1586138493.0,"Link to free textbook (web and pdf versions available): http://d2l.ai/

Repo for the book: https://github.com/d2l-ai/d2l-en

*From their site's description:*

# Dive into Deep Learning (D2L Book)

This open-source book represents our attempt to make deep learning approachable, teaching you the concepts, the context, and the code. The entire book is drafted in Jupyter notebooks, seamlessly integrating exposition figures, math, and interactive examples with self-contained code.

Our goal is to offer a resource that could

- be freely available for everyone;

- offer sufficient technical depth to provide a starting point on the path to actually becoming an applied machine learning scientist;
include runnable code, showing readers how to solve problems in practice;

- allow for rapid updates, both by us and also by the community at large;

- be complemented by a forum for interactive discussion of technical details and to answer questions."
97,machinelearning,open-ai,top,2022-12-22 18:39:30,[D] When chatGPT stops being free: Run SOTA LLM in cloud,_underlines_,False,0.95,348,zstequ,https://www.reddit.com/r/MachineLearning/comments/zstequ/d_when_chatgpt_stops_being_free_run_sota_llm_in/,95,1671734370.0,"Edit: Found [LAION-AI/OPEN-ASSISTANT](https://github.com/LAION-AI/Open-Assistant) a very promising project opensourcing the idea of chatGPT. [video here](https://www.youtube.com/watch?v=8gVYC_QX1DI)

**TL;DR: I found GPU compute to be [generally cheap](https://github.com/full-stack-deep-learning/website/blob/main/docs/cloud-gpus/cloud-gpus.csv) and spot or on-demand instances can be launched on AWS for a few USD / hour up to over 100GB vRAM. So I thought it would make sense to run your own SOTA LLM like Bloomz 176B inference endpoint whenever you need it for a few questions to answer. I thought it would still make more sense than shoving money into a closed walled garden like ""not-so-OpenAi"" when they make ChatGPT or GPT-4 available for $$$. But I struggle due to lack of tutorials/resources.**

Therefore, I carefully checked benchmarks, model parameters and sizes as well as training sources for all SOTA LLMs [here](https://docs.google.com/spreadsheets/d/1O5KVQW1Hx5ZAkcg8AIRjbQLQzx2wVaLl0SqUu-ir9Fs/edit#gid=1158069878).

Knowing since reading the Chinchilla paper that Model Scaling according to OpenAI was wrong and more params != better quality generation. So I was looking for the best performing LLM openly available in terms of quality and broadness to use for multilingual everyday questions/code completion/reasoning similar to what chatGPT provides (minus the fine-tuning for chat-style conversations).

My choice fell on [Bloomz](https://huggingface.co/bigscience/bloomz) (because that handles multi-lingual questions well and has good zero shot performance for instructions and Q&A style text generation. Confusingly Galactica seems to outperform Bloom on several benchmarks. But since Galactica had a very narrow training set only using scientific papers, I guess usage is probably limited for answers on non-scientific topics.

Therefore I tried running the original bloom 176B and alternatively also Bloomz 176B on AWS SageMaker JumpStart, which should be a one click deployment. This fails after 20min. On Azure ML, I tried using DeepSpeed-MII which also supports bloom but also fails due the instance size of max 12GB vRAM I guess.

From my understanding to save costs on inference, it's probably possible to use one or multiple of the following solutions:

- Precision: int8 instead of fp16
- [Microsoft/DeepSpeed-MII](https://github.com/microsoft/DeepSpeed-MII) for an up 40x reduction on inference cost on Azure, this thing also supports int8 and fp16 bloom out of the box, but it fails on Azure due to instance size.
- [facebook/xformer](https://github.com/facebookresearch/xformers) not sure, but if I remember correctly this brought inference requirements down to 4GB vRAM for StableDiffusion and DreamBooth fine-tuning to 10GB. No idea if this is usefull for Bloom(z) inference cost reduction though

I have a CompSci background but I am not familiar with most stuff, except that I was running StableDiffusion since day one on my rtx3080 using linux and also doing fine-tuning with DreamBooth. But that was all just following youtube tutorials. I can't find a single post or youtube video of anyone explaining a full BLOOM / Galactica / BLOOMZ inference deployment on cloud platforms like AWS/Azure using one of the optimizations mentioned above, yet alone deployment of the raw model. :(

I still can't figure it out by myself after 3 days.

**TL;DR2: Trying to find likeminded people who are interested to run open source SOTA LLMs for when chatGPT will be paid or just for fun.**

Any comments, inputs, rants, counter-arguments are welcome.

/end of rant"
98,machinelearning,open-ai,top,2021-03-31 06:32:47,"[D] What’s the simplest, most lightweight but complete and 100% open source MLOps toolkit? -> MY OWN CONCLUSIONS",fripperML,False,0.95,347,mgzvt2,https://www.reddit.com/r/MachineLearning/comments/mgzvt2/d_whats_the_simplest_most_lightweight_but/,76,1617172367.0,"Although I have posted this summary in the [thread](https://www.reddit.com/r/MachineLearning/comments/mfca0p/d_whats_the_simplest_most_lightweight_but/), most people won't find it, so to make it more visible I post it as another thread.

First of all, I have to thank the reddit ML community in general and each of you in particular for the detailed, insightful and interesting answers I have received in the past few days. I have learnt a lot and the picture in my head is now clearer. Now, I am posting a summary with the things that, for me, make more sense (it's my opinion and will serve as our guideline for making the decision, so it's not just a bare summary).

**General advice**

We should start with a reduced set of tools, the most useful ones, in order to have the flexibility to change or adapt our projects to a new infrastructure a provider could offer us. This is something that could happen.

**End-to-end solutions**

There are mainly two solutions that are 100% open source and free to install and use, and that may solve most of the requirements of ML practitioners: [Hopsworks](https://hopsworks.readthedocs.io/en/stable/) and [ClearML](https://allegro.ai/clearml/docs/). Among this two, if I had to chose one right now, it will be ClearML. Hopsworks might be much more complete, but ClearML seems to have a bigger community behind it and to be easier to install and use. So ClearML will be something to take a look at in case we go for an all-in-one package. I also like the idea of having a platform with an UI with all our projects.

**Python Programming**

[Flake8](https://flake8.pycqa.org/en/latest/) (including flake8-docstrings), [MyPy](http://mypy-lang.org/) and [Black](https://black.readthedocs.io/en/stable/) are hugely recommended. [Google style guide](https://google.github.io/styleguide/pyguide.html) is something to take a look at too.

This morning I have found this [guide](https://cjolowicz.github.io/posts/hypermodern-python-01-setup/) that might be worth it, as it covers many good practices. Also this [article](https://martinheinz.dev/blog/14).

Regarding the IDE, VSCode is not the same as Visual Studio, the most recommended one is VSCode.

[Poetry](https://python-poetry.org/) is also something to consider. But also one should be careful with it: its current development state is not very promising and maybe pip is more secure, as it is the official way.

**CI and Deployment**

Jenkins is a good tool, although maybe not the easiest one (Gitlab, Drone, and Circle are all easier to use). Docker might not be totally needed, but is hugely recommended as it is becoming a standard, and even many of the libraries rely on it (for example, ClearML does). In addition, it works very well with Jenkins.

We should switch from SVN to git (strongly recommended). [Gitlab](https://about.gitlab.com/) is a good option.

**Project Scaffolding**

[CookieCutter](https://cookiecutter.readthedocs.io/en/1.7.2/) or [Kedro](https://kedro.readthedocs.io/en/stable/) are the winners. I still think we will stick to Kedro template, because it offers extra functionality, and I like to think of each project as a set of pipelines to be run. Anyway, some cookiecutter templates are very good, like this [one](https://github.com/TezRomacH/python-package-template). In case we use both Kedro and ClearML, we'll have to figure out how to integrate its pipelines with ClearML tasks. But in the slack channel of ClearML there are other teams doing the same, so at least it's possible.

**Documentation**

[Sphinx](https://www.sphinx-doc.org/en/master/index.html) for the documentation is totally recommended (Google style docstrings). [Napoleon](https://www.sphinx-doc.org/en/master/usage/extensions/napoleon.html) can be very useful for helping with that. This covers documentation of the actual code. For documenting the business objective and other project related stuff, we could use jupyter notebooks in order to have everything inside the repo.

**Project registry**

ClearML if we finally chose it. Otherwise, we migth use an internal wiki or just the repository with a clear documentation.

**Data Exploration and Preparation**

We should use PySpark when things go ""big"", and Pandas when things fit in memory.

**Tests**

I expected Great Expectations library to be recommended, but nobody told anything. Instead, unit testing and/or smoke tests using [pytest](https://docs.pytest.org/en/stable/). And checking them with Jenkins. Anyway, if Kedro ends up being our project template, I'll keep an eye on the [plugin](https://github.com/tamsanh/kedro-great) with [Great Expectations](https://github.com/great-expectations/great_expectations).

**Feature Store, Data Versioning**

Maybe not so important in the beginning. [DVC](https://dvc.org/doc) looks good, but it's not easy to use.

**Workflow engine or orchestrator**

In our case, we have one, but otherwise it is an important piece. Prefect is maybe the option I like the most for its simplicity, but Luigi is also a tool that I like.

Kedro, also related with this, because it is a tool for defining pipelines, does not care about how to run the pipelines and you can deploy them in several engines like Luigi, Prefect, Airflow or Kubeflow.

**Model registry**

Its importance depends on several considerations:

* If you have too many models in production.
* If models are frecuently retrained.
* If lots of models are trained and or tested in parallel.
* If some models make real-time predictions, and their performance is critical.

If any of the previous point happens to be true, a model registry can be a very important piece of the MLOps solution. Otherwise, you can consider it not essential.

**Experimenting**

It's an important piece. If we use ClearML, this will be solved. Otherwise, we might try [MLFlow](https://www.mlflow.org/docs/latest/index.html) using Kedro-MLFlow or [PipelineX](https://pipelinex.readthedocs.io/en/latest/).

[Hydra](https://hydra.cc/docs/intro/) can be an interesting addition to define configurations, although Kedro does have a nice way too.

**Training**

Apart from the ""classical"" libraries, in case of DL for simplicity [PyTorch Lighting](https://www.pytorchlightning.ai/) will be our first option. Anyway, hardware limitations could be an issue (when models don't fit into memory, when training must be distributed... so that problems should be at least foreseen... both TensorFlow and PyTorch have ways of dealing with it).

**Model serving**

[FastAPI](https://fastapi.tiangolo.com/). Or even simpler: [DL4J](https://deeplearning4j.org/), to be used in Java when we need to communicate with the rest of the applications in real time.

Other interesting solutions are [BentoML](https://github.com/bentoml/BentoML) and [Cortex](https://www.cortex.dev/), we should take a look at it too.

When high availability is important, we should take into account having redundant nodes and a resilient infraestructure (Kubernetes could be a solution).

**Visualization**

We should take a look at [voila](https://voila.readthedocs.io/en/stable/using.html) and [streamlit](https://streamlit.io/).

**Model monitoring**

We could use Jenkins pipelines or ad-hoc scheduled processed. We don't need a tool for that."
99,machinelearning,open-ai,top,2023-05-07 23:26:29,"[D] ClosedAI license, open-source license which restricts only OpenAI, Microsoft, Google, and Meta from commercial use",wemsyn,False,0.8,345,13b6miy,https://www.reddit.com/r/MachineLearning/comments/13b6miy/d_closedai_license_opensource_license_which/,191,1683501989.0,"After reading [this article](https://www.semianalysis.com/p/google-we-have-no-moat-and-neither), I realized it might be nice if the open-source AI community could exclude ""closed AI"" players from taking advantage of community-generated models and datasets. I was wondering if it would be possible to write a license that is completely permissive (like Apache 2.0 or MIT), except to certain companies, which are completely barred from using the software in any context.

Maybe this could be called the ""ClosedAI"" license. I'm not any sort of legal expert so I have no idea how best to write this license such that it protects model weights and derivations thereof.

I prompted ChatGPT for an example license and this is what it gave me:

    <PROJECT NAME> ClosedAI License v1.0
    
    Permission is hereby granted, free of charge, to any person or organization obtaining a copy of this software and associated documentation files (the ""Software""), to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, subject to the following conditions:
    
    1. The above copyright notice and this license notice shall be included in all copies or substantial portions of the Software.
    
    2. The Software and any derivative works thereof may not be used, in whole or in part, by or on behalf of OpenAI Inc., Google LLC, or Microsoft Corporation (collectively, the ""Prohibited Entities"") in any capacity, including but not limited to training, inference, or serving of neural network models, or any other usage of the Software or neural network weights generated by the Software.
    
    3. Any attempt by the Prohibited Entities to use the Software or neural network weights generated by the Software is a material breach of this license.
    
    THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

No idea if this is valid or not. Looking for advice.

&#x200B;

**Edit:** Thanks for the input. Removed non-commercial clause (whoops, proofread what ChatGPT gives you). Also removed Meta from the excluded companies list due to popular demand."
100,machinelearning,open-ai,comments,2019-11-05 11:27:49,[D] 2020 Residencies Applicants Discussion Thread,mahaveer0suthar,False,0.97,180,drxvd0,https://www.reddit.com/r/MachineLearning/comments/drxvd0/d_2020_residencies_applicants_discussion_thread/,1011,1572953269.0,"* Facebook AI Residency Program \[[Link](https://research.fb.com/programs/facebook-ai-residency-program/)\]. Application Deadline: January 31, 2020, 05:00pm PST.
* Google AI Residency \[[Link](https://ai.google/research/join-us/ai-residency/)\]. Application Deadline: December 19th, 2019.
* Google X AI Residency \[[Link](https://x.company/careers-at-x/4225880002/)\]
* Google AI Resident (Health), 2020 Start - London, UK \[Application Closed\] 
* Google AI Resident (Health), 2020 - Start Palo Alto, CA, USA \[Application Closed\]
* OpenAI 2020 Winter Scholars \[[Link](https://jobs.lever.co/openai/d30e1f04-b548-4503-ba8b-9853cb49bdc7)\]. Application Deadline: Nov 15, 2019.

Thought it would be helpful to have a discussion thread for 2020 Residencies applicants to share the updates, info, resources to prepare etc.

Below are some useful discussion threads :

[https://www.reddit.com/r/MachineLearning/comments/9uyzc1/d\_google\_ai\_residency\_2019\_applicants\_discussion/](https://www.reddit.com/r/MachineLearning/comments/9uyzc1/d_google_ai_residency_2019_applicants_discussion/)

[https://www.reddit.com/r/MachineLearning/comments/7rajic/d\_anyone\_heard\_back\_from\_google\_ai\_residency/](https://www.reddit.com/r/MachineLearning/comments/7rajic/d_anyone_heard_back_from_google_ai_residency/)

[https://www.reddit.com/r/MachineLearning/comments/7wst07/d\_study\_guides\_for\_interview\_at\_ai\_research/](https://www.reddit.com/r/MachineLearning/comments/7wst07/d_study_guides_for_interview_at_ai_research/)

[https://www.reddit.com/r/MachineLearning/comments/690ixs/d\_google\_brain\_residency\_requirements\_and/](https://www.reddit.com/r/MachineLearning/comments/690ixs/d_google_brain_residency_requirements_and/)"
101,machinelearning,open-ai,comments,2019-01-24 20:55:23,"We are Oriol Vinyals and David Silver from DeepMind’s AlphaStar team, joined by StarCraft II pro players TLO and MaNa! Ask us anything",OriolVinyals,False,0.99,1166,ajgzoc,https://www.reddit.com/r/MachineLearning/comments/ajgzoc/we_are_oriol_vinyals_and_david_silver_from/,1010,1548363323.0,"Hi there! We are Oriol Vinyals (/u/OriolVinyals) and David Silver (/u/David_Silver), lead researchers on DeepMind’s AlphaStar team, joined by StarCraft II pro players TLO, and MaNa.

This evening at DeepMind HQ we held a livestream demonstration of AlphaStar playing against TLO and MaNa - you can read more about the matches [here](https://deepmind.com/blog/alphastar-mastering-real-time-strategy-game-starcraft-ii/) or re-watch the stream on YouTube [here](https://www.youtube.com/watch?v=cUTMhmVh1qs).

Now, we’re excited to talk with you about AlphaStar, the challenge of real-time strategy games for AI research, the matches themselves, and anything you’d like to know from TLO and MaNa about their experience playing against AlphaStar! :)

We are opening this thread now and will be here at **16:00 GMT / 11:00 ET / 08:00PT** on Friday, 25 January to answer your questions.

&#x200B;

EDIT: Thanks everyone for your great questions. It was a blast, hope you enjoyed it as well!"
102,machinelearning,open-ai,comments,2019-03-22 02:36:38,[P] OpenAI's GPT-2-based Reddit Bot is Live!,Shevizzle,False,0.97,335,b3zlha,https://www.reddit.com/r/MachineLearning/comments/b3zlha/p_openais_gpt2based_reddit_bot_is_live/,990,1553222198.0,"**~~FINAL~~** **UPDATE: The bot is down until I have time to get it operational again. Will update this when it’s back online.**

&#x200B;

**Disclaimer** : This is not the full model. This is the smaller and less powerful version which OpenAI released publicly.

[Original post](https://www.reddit.com/r/MachineLearning/comments/b32lve/d_im_using_openais_gpt2_to_generate_text_give_me/)

Based on the popularity of my post from the other day, I decided to go ahead an build a full-fledged Reddit bot. So without further ado, please welcome:

# u/GPT-2_Bot

&#x200B;

If you want to use the bot, all you have to do is reply to any comment with the following command words:

# ""gpt-2 finish this""

Your reply can contain other stuff as well, i.e.

>""hey **gpt-2**, please **finish this** argument for me, will ya?""

&#x200B;

The bot will then look at **the comment you replied to** and generate its own response. It will tag you in the response so you know when it's done!

&#x200B;

Currently supported subreddits:

* r/funny
* r/AskReddit
* r/gaming
* r/pics
* r/science
* r/worldnews
* r/todayilearned
* r/movies
* r/videos
* r/ShowerThoughts
* r/MachineLearning
* r/test
* r/youtubehaiku
* r/thanosdidnothingwrong
* r/dankmemes

&#x200B;

The bot also scans r/all so ***theoretically*** it will see comments posted anywhere on Reddit. In practice, however, it only seems to catch about 1 in 5 of them.

&#x200B;

Enjoy! :) Feel free to PM me with feedback"
103,machinelearning,open-ai,comments,2019-03-19 20:43:15,[D] I'm using OpenAI's GPT-2 to generate text. Give me prompts to try!,Shevizzle,False,0.96,340,b32lve,https://www.reddit.com/r/MachineLearning/comments/b32lve/d_im_using_openais_gpt2_to_generate_text_give_me/,781,1553028195.0,"Thank you all for participating! Based on the popularity of this post, I decided to create a full-blown reddit bot based on it. I won't be responding here anymore but check out the update for more info.

# UPDATE: [I made a GPT-2 reddit bot](https://www.reddit.com/r/MachineLearning/comments/b3zlha/p_openais_gpt2based_reddit_bot_is_live/)

&#x200B;

**Disclaimer** : This is not the full model. This is the smaller and less powerful version which OpenAI released publicly.

**EXAMPLE PROMPT:**

The NCAA unveiled the 68 college basketball teams that will be dancing this year. It wasn’t short on controversy, as snubbed teams aired out their grievances and blamed a confusing new metric.

**OUTPUT:**

The numbers came straight from the NCAA's website, where they're being used to calculate the number of national titles, national championship games, and even NCAA games played in a certain year.

""We want to make sure that the NCAA is inclusive,"" said NCAA President Dave Heidelman. ""We want to make sure that you can get what you want out of your program. And we want to make sure that the NCAA is focused on this problem right now and that the NCAA is fully invested.""

The list of opponents includes Ohio State, Florida State, Louisville, Kentucky, Mississippi State, Penn State, Oklahoma, Southern Cal, Virginia, and Wake Forest. It's not all about one one, though: They're all on pace to play an entire season. They have every national title, national championship, and tournament appearance in their DNA — as one might expect, they want to see it happen, but also want to build an identity, make their dream of watching that happen become the reality.

As good as any NCAA team is, they're also a long way off reaching the number one spot in the nation or even the top-ranked nation. The Big Ten also has some talented recruits from some in-state programs that may be considered the top two nationally. In fact, the national ranking of these schools is so high that a single conference ranking in 2016 will put the conference in the top-50 of the polls. Still, while Big Ten and SEC teams are likely to be on the map and competing for national titles, they're a bit underserved (and it's not as if they're all the same.)

So where does the NCAA stand on this?

According to ULM's John Covington, who runs its ""Unions, Colleges, and Universities"" page in conjunction with the National Conference, they're all going to have to make some moves:

Some may think this is just a joke. ""No, this is really about the league's future,"" said Dr. John H. Hester, president of UM's Athletic Department and president of the National Collegiate Athletic Association's Women's Academic Programs. ""I think the NCAA is a great place to start, because it's here to stay and if we're really strong and we can figure ourselves out, our future is going to be on the basketball court.""

**MODEL:**

[gpt-2 117M](https://github.com/openai/gpt-2)

**If you have an idea for a prompt, post it in the comments and I'll reply with the output if I deem it worthy.**"
104,machinelearning,open-ai,comments,2023-01-14 09:35:51,"[N] Class-action law­suit filed against Sta­bil­ity AI, DeviantArt, and Mid­journey for using the text-to-image AI Sta­ble Dif­fu­sion",Wiskkey,False,0.95,698,10bkjdk,https://i.redd.it/rg6vkf9xvyba1.png,724,1673688951.0,
105,machinelearning,open-ai,comments,2017-10-17 09:58:13,AMA: We are David Silver and Julian Schrittwieser from DeepMind’s AlphaGo team. Ask us anything.,David_Silver,False,0.98,410,76xjb5,https://www.reddit.com/r/MachineLearning/comments/76xjb5/ama_we_are_david_silver_and_julian_schrittwieser/,483,1508234293.0,"Hi everyone. 

We are David Silver (/u/David_Silver) and Julian Schrittwieser (/u/JulianSchrittwieser) from [DeepMind] (https://deepmind.com/). We are representing the team that created [AlphaGo](https://deepmind.com/research/alphago/). 

We are excited to talk to you about the history of AlphaGo, our most recent research on AlphaGo, and the challenge matches against the 18-time world champion [Lee Sedol](https://deepmind.com/research/alphago/alphago-korea/) in 2017 and world #1 [Ke Jie](https://deepmind.com/research/alphago/alphago-china/) earlier this year. We can even talk about the [movie](https://www.alphagomovie.com/) that’s just been made about AlphaGo : )

We are opening this thread now and will be here at 1800BST/1300EST/1000PST on 19 October to answer your questions.

EDIT 1: We are excited to announce that we have just published our second Nature [paper](http://nature.com/articles/doi:10.1038/nature24270) on AlphaGo. This paper describes our latest program, [AlphaGo Zero] (https://deepmind.com/blog/alphago-zero-learning-scratch), which learns to play Go without any human data, handcrafted features, or human intervention. Unlike other versions of AlphaGo, which trained on thousands of human amateur and professional games, Zero learns Go simply by playing games against itself, starting from completely random play - ultimately resulting in our strongest player to date. We’re excited about this result and happy to answer questions about this as well.

EDIT 2: We are [here](https://twitter.com/DeepMindAI/status/921058369829527552), ready to answer your questions! 

EDIT 3: Thanks for the great questions, we've had a lot of fun :)
"
106,machinelearning,open-ai,comments,2017-07-03 20:24:09,[D] Why can't you guys comment your fucking code?,didntfinishhighschoo,False,0.86,1659,6l2esd,https://www.reddit.com/r/MachineLearning/comments/6l2esd/d_why_cant_you_guys_comment_your_fucking_code/,477,1499113449.0,"Seriously.

I spent the last few years doing web app development. Dug into DL a couple months ago. Supposedly, compared to the post-post-post-docs doing AI stuff, JavaScript developers should be inbred peasants. But every project these peasants release, even a fucking library that colorizes CLI output, has a catchy name, extensive docs, shitloads of comments, fuckton of tests, semantic versioning, changelog, and, oh my god, better variable names than `ctx_h` or `lang_hs` or `fuck_you_for_trying_to_understand`.

The concepts and ideas behind DL, GANs, LSTMs, CNNs, whatever – it's clear, it's simple, it's intuitive. The slog is to go through the jargon (that keeps changing beneath your feet - what's the point of using fancy words if you can't keep them consistent?), the unnecessary equations, trying to squeeze meaning from bullshit language used in papers, figuring out the super important steps, preprocessing, hyperparameters optimization that the authors, oops, failed to mention.

Sorry for singling out, but [look at this](https://github.com/facebookresearch/end-to-end-negotiator/blob/master/src/agent.py) - what the fuck? If a developer anywhere else at Facebook would get this code for a review they would throw up.

- Do you intentionally try to obfuscate your papers? Is pseudo-code a fucking premium? Can you at least try to give some intuition before showering the reader with equations?

- How the fuck do you dare to release a paper without source code?

- Why the fuck do you never ever add comments to you code?

- When naming things, are you charged by the character? Do you get a bonus for acronyms?

- Do you realize that OpenAI having needed to release a ""baseline"" TRPO implementation is a fucking disgrace to your profession?

- Jesus christ, who decided to name a tensor concatenation function `cat`?
"
107,machinelearning,open-ai,comments,2023-03-15 22:34:01,[D] Our community must get serious about opposing OpenAI,SOCSChamp,False,0.95,2967,11sboh1,https://www.reddit.com/r/MachineLearning/comments/11sboh1/d_our_community_must_get_serious_about_opposing/,448,1678919641.0,"OpenAI was founded for the explicit purpose of democratizing access to AI and acting as a counterbalance to the closed off world of big tech by developing open source tools.

They have abandoned this idea entirely.

Today, with the release of GPT4 and their direct statement that they will not release details of the model creation due to ""safety concerns"" and the competitive environment, they have created a precedent worse than those that existed before they entered the field. We're at risk now of other major players, who previously at least published their work and contributed to open source tools, close themselves off as well.

AI alignment is a serious issue that we definitely have not solved. Its a huge field with a dizzying array of ideas, beliefs and approaches. We're talking about trying to capture the interests and goals of all humanity, after all. In this space, the one approach that is horrifying (and the one that OpenAI was LITERALLY created to prevent) is a singular or oligarchy of for profit corporations making this decision for us. This is exactly what OpenAI plans to do.

I get it, GPT4 is incredible. However, we are talking about the single most transformative technology and societal change that humanity has ever made. It needs to be for everyone or else the average person is going to be left behind.

We need to unify around open source development; choose companies that contribute to science, and condemn the ones that don't.

This conversation will only ever get more important."
108,machinelearning,open-ai,comments,2023-05-30 09:45:35,"[N] Hinton, Bengio, and other AI experts sign collective statement on AI risk",DanielHendrycks,False,0.81,268,13vls63,https://www.reddit.com/r/MachineLearning/comments/13vls63/n_hinton_bengio_and_other_ai_experts_sign/,426,1685439935.0,"We recently released a [brief statement on AI risk](https://www.safe.ai/statement-on-ai-risk), jointly signed by a broad coalition of experts in AI and other fields. Geoffrey Hinton and Yoshua Bengio have signed, as have scientists from major AI labs—Ilya Sutskever, David Silver, and Ian Goodfellow—as well as executives from Microsoft and Google and professors from leading universities in AI research. This concern goes beyond AI industry and academia. Signatories include notable philosophers, ethicists, legal scholars, economists, physicists, political scientists, pandemic scientists, nuclear scientists, and climate scientists.

The statement reads: **“Mitigating the risk of extinction from AI should be a global priority alongside other societal-scale risks such as pandemics and nuclear war.”**

We wanted to keep the statement brief, especially as different signatories have different beliefs. A few have written content explaining some of their concerns:

* Yoshua Bengio – [How Rogue AIs May Arise](https://yoshuabengio.org/2023/05/22/how-rogue-ais-may-arise/)
* Emad Mostaque (Stability) [on the risks, opportunities and how it may make humans 'boring'](https://www.bbc.com/news/uk-politics-65582386)
* David Krueger (Cambridge) – [Harms from Increasingly Agentic Algorithmic Systems](https://arxiv.org/abs/2302.10329)

As indicated in the first sentence of the signatory page, there are numerous ""important and urgent risks from AI,"" in addition to the potential risk of extinction. AI presents significant current challenges in various forms, such as malicious use, misinformation, lack of transparency, deepfakes, cyberattacks, phishing, and lethal autonomous weapons. These risks are substantial and should be addressed alongside the potential for catastrophic outcomes. Ultimately, it is crucial to attend to and mitigate all types of AI-related risks.

Signatories of the statement include:

* The authors of the standard textbook on Artificial Intelligence (Stuart Russell and Peter Norvig)
* Two authors of the standard textbook on Deep Learning (Ian Goodfellow and Yoshua Bengio)
* An author of the standard textbook on Reinforcement Learning (Andrew Barto)
* Three Turing Award winners (Geoffrey Hinton, Yoshua Bengio, and Martin Hellman)
* CEOs of top AI labs: Sam Altman, Demis Hassabis, and Dario Amodei
* Executives from Microsoft, OpenAI, Google, Google DeepMind, and Anthropic
* AI professors from Chinese universities
* The scientists behind famous AI systems such as AlphaGo and every version of GPT (David Silver, Ilya Sutskever)
* The top two most cited computer scientists (Hinton and Bengio), and the most cited scholar in computer security and privacy (Dawn Song)"
109,machinelearning,open-ai,comments,2023-05-17 22:15:28,[D] Does anybody else despise OpenAI?,onesynthguy,False,0.86,1412,13kfxzy,https://www.reddit.com/r/MachineLearning/comments/13kfxzy/d_does_anybody_else_despise_openai/,426,1684361728.0," I  mean, don't get me started with the closed source models they have that were trained using the work of unassuming individuals who will never  see a penny for it. Put it up on Github they said. I'm all for  open-source, but when a company turns around and charges you for a  product they made with freely and publicly made content, while forbidding you from using the output to create competing models, that is where I  draw the line. It is simply ridiculous. 

Sam Altman couldn't be anymore predictable with his recent attempts to get the government to start regulating AI.

What  risks? The AI is just a messenger for information that is already out  there if one knows how/where to look. You don't need AI to learn how to  hack, to learn how to make weapons, etc. Fake news/propaganda? The  internet has all of that covered. LLMs are no where near the level of AI  you see in sci-fi. I mean, are people really afraid of text? Yes, I  know that text can sometimes be malicious code such as viruses, but  those can be found on github as well.  If they fall for this they might  as well shutdown the internet while they're at it.

He  is simply blowing things out of proportion and using fear to increase  the likelihood that they do what he wants, hurt the competition. I  bet he is probably teething with bitterness everytime a new huggingface  model comes out. The thought of us peasants being able to use AI  privately is too dangerous. No, instead we must be fed scraps while they  slowly take away our jobs and determine our future.

This  is not a doomer post, as I am all in favor of the advancement of AI.  However, the real danger here lies in having a company like OpenAI  dictate the future of humanity. I get it, the writing is on the wall;  the cost of human intelligence will go down, but if everyone has their  personal AI then it wouldn't seem so bad or unfair would it? Listen,  something that has the power to render a college degree that costs  thousands of dollars worthless should be available to the public. This  is to offset the damages and job layoffs that will come as a result of  such an entity. It wouldn't be as bitter of a taste as it would if you were replaced by it while still not being able to access it. Everyone should be able to use it as leverage, it is the only fair solution.

If  we don't take action now, a company like ClosedAI will, and they are  not in favor of the common folk. Sam Altman is so calculated to the  point where there were times when he seemed to be shooting OpenAI in the foot during his talk.  This move is to simply conceal his real intentions, to climb the ladder and take it with him. If he didn't include his company in his  ramblings, he would be easily read. So instead, he pretends to be scared of his own product, in an effort to legitimize his claim. Don't fall  for it.

They are slowly making a  reputation as one the most hated tech companies, right up there with  Adobe, and they don't show any sign of change. They have no moat,  othewise they wouldn't feel so threatened to the point where they would have to resort to creating barriers of entry via regulation. This only  means one thing, we are slowly catching up. We just need someone to  vouch for humanity's well-being, while acting as an opposing force to the  evil corporations who are only looking out for themselves. Question is,  who would be a good candidate?"
110,machinelearning,open-ai,comments,2022-08-07 21:25:26,[D] The current and future state of AI/ML is shockingly demoralizing with little hope of redemption,Flaky_Suit_8665,False,0.88,1433,wiqjxv,https://www.reddit.com/r/MachineLearning/comments/wiqjxv/d_the_current_and_future_state_of_aiml_is/,399,1659907526.0,"I recently encountered the PaLM (Scaling Language Modeling with Pathways) paper from Google Research and it opened up a can of worms of ideas I’ve felt I’ve intuitively had for a while, but have been unable to express – and I know I can’t be the only one. Sometimes I wonder what the original pioneers of AI – Turing, Neumann, McCarthy, etc. – would think if they could see the state of AI that we’ve gotten ourselves into. 67 authors, 83 pages, 540B parameters in a model, the internals of which no one can say they comprehend with a straight face, 6144 TPUs in a commercial lab that no one has access to, on a rig that no one can afford, trained on a volume of data that a human couldn’t process in a lifetime, 1 page on ethics with the same ideas that have been rehashed over and over elsewhere with no attempt at a solution – bias, racism, malicious use, etc. – for purposes that who asked for?

When I started my career as an AI/ML research engineer 2016, I was most interested in two types of tasks – 1.) those that most humans could do but that would universally be considered tedious and non-scalable. I’m talking image classification, sentiment analysis, even document summarization, etc. 2.) tasks that humans lack the capacity to perform as well as computers for various reasons – forecasting, risk analysis, game playing, and so forth. I still love my career, and I try to only work on projects in these areas, but it’s getting harder and harder.

This is because, somewhere along the way, it became popular and unquestionably acceptable to push AI into domains that were originally uniquely human, those areas that sit at the top of Maslows’s hierarchy of needs in terms of self-actualization – art, music, writing, singing, programming, and so forth. These areas of endeavor have negative logarithmic ability curves – the vast majority of people cannot do them well at all, about 10% can do them decently, and 1% or less can do them extraordinarily. The little discussed problem with AI-generation is that, without extreme deterrence, we will sacrifice human achievement at the top percentile in the name of lowering the bar for a larger volume of people, until the AI ability range is the norm. This is because relative to humans, AI is cheap, fast, and infinite, to the extent that investments in human achievement will be watered down at the societal, educational, and individual level with each passing year. And unlike AI gameplay which superseded humans decades ago, we won’t be able to just disqualify the machines and continue to play as if they didn’t exist.

Almost everywhere I go, even this forum, I encounter almost universal deference given to current SOTA AI generation systems like GPT-3, CODEX, DALL-E, etc., with almost no one extending their implications to its logical conclusion, which is long-term convergence to the mean, to mediocrity, in the fields they claim to address or even enhance. If you’re an artist or writer and you’re using DALL-E or GPT-3 to “enhance” your work, or if you’re a programmer saying, “GitHub Co-Pilot makes me a better programmer?”, then how could you possibly know? You’ve disrupted and bypassed your own creative process, which is thoughts -> (optionally words) -> actions -> feedback -> repeat, and instead seeded your canvas with ideas from a machine, the provenance of which you can’t understand, nor can the machine reliably explain. And the more you do this, the more you make your creative processes dependent on said machine, until you must question whether or not you could work at the same level without it.

When I was a college student, I often dabbled with weed, LSD, and mushrooms, and for a while, I thought the ideas I was having while under the influence were revolutionary and groundbreaking – that is until took it upon myself to actually start writing down those ideas and then reviewing them while sober, when I realized they weren’t that special at all. What I eventually determined is that, under the influence, it was impossible for me to accurately evaluate the drug-induced ideas I was having because the influencing agent the generates the ideas themselves was disrupting the same frame of reference that is responsible evaluating said ideas. This is the same principle of – if you took a pill and it made you stupider, would even know it? I believe that, especially over the long-term timeframe that crosses generations, there’s significant risk that current AI-generation developments produces a similar effect on humanity, and we mostly won’t even realize it has happened, much like a frog in boiling water. If you have children like I do, how can you be aware of the the current SOTA in these areas, project that 20 to 30 years, and then and tell them with a straight face that it is worth them pursuing their talent in art, writing, or music? How can you be honest and still say that widespread implementation of auto-correction hasn’t made you and others worse and worse at spelling over the years (a task that even I believe most would agree is tedious and worth automating).

Furthermore, I’ve yet to set anyone discuss the train – generate – train - generate feedback loop that long-term application of AI-generation systems imply. The first generations of these models were trained on wide swaths of web data generated by humans, but if these systems are permitted to continually spit out content without restriction or verification, especially to the extent that it reduces or eliminates development and investment in human talent over the long term, then what happens to the 4th or 5th generation of models? Eventually we encounter this situation where the AI is being trained almost exclusively on AI-generated content, and therefore with each generation, it settles more and more into the mean and mediocrity with no way out using current methods. By the time that happens, what will we have lost in terms of the creative capacity of people, and will we be able to get it back?

By relentlessly pursuing this direction so enthusiastically, I’m convinced that we as AI/ML developers, companies, and nations are past the point of no return, and it mostly comes down the investments in time and money that we’ve made, as well as a prisoner’s dilemma with our competitors. As a society though, this direction we’ve chosen for short-term gains will almost certainly make humanity worse off, mostly for those who are powerless to do anything about it – our children, our grandchildren, and generations to come.

If you’re an AI researcher or a data scientist like myself, how do you turn things back for yourself when you’ve spent years on years building your career in this direction? You’re likely making near or north of $200k annually TC and have a family to support, and so it’s too late, no matter how you feel about the direction the field has gone. If you’re a company, how do you standby and let your competitors aggressively push their AutoML solutions into more and more markets without putting out your own? Moreover, if you’re a manager or thought leader in this field like Jeff Dean how do you justify to your own boss and your shareholders your team’s billions of dollars in AI investment while simultaneously balancing ethical concerns? You can’t – the only answer is bigger and bigger models, more and more applications, more and more data, and more and more automation, and then automating that even further. If you’re a country like the US, how do responsibly develop AI while your competitors like China single-mindedly push full steam ahead without an iota of ethical concern to replace you in numerous areas in global power dynamics? Once again, failing to compete would be pre-emptively admitting defeat.

Even assuming that none of what I’ve described here happens to such an extent, how are so few people not taking this seriously and discounting this possibility? If everything I’m saying is fear-mongering and non-sense, then I’d be interested in hearing what you think human-AI co-existence looks like in 20 to 30 years and why it isn’t as demoralizing as I’ve made it out to be.

&#x200B;

EDIT: Day after posting this -- this post took off way more than I expected. Even if I received 20 - 25 comments, I would have considered that a success, but this went much further. Thank you to each one of you that has read this post, even more so if you left a comment, and triply so for those who gave awards! I've read almost every comment that has come in (even the troll ones), and am truly grateful for each one, including those in sharp disagreement. I've learned much more from this discussion with the sub than I could have imagined on this topic, from so many perspectives. While I will try to reply as many comments as I can, the sheer comment volume combined with limited free time between work and family unfortunately means that there are many that I likely won't be able to get to. That will invariably include some that I would love respond to under the assumption of infinite time, but I will do my best, even if the latency stretches into days. Thank you all once again!"
111,machinelearning,open-ai,comments,2023-05-25 13:51:58,OpenAI is now complaining about regulation of AI [D],I_will_delete_myself,False,0.89,795,13rie0e,https://www.reddit.com/r/MachineLearning/comments/13rie0e/openai_is_now_complaining_about_regulation_of_ai_d/,349,1685022718.0,"I held off for a while but hypocrisy just drives me nuts after hearing this.

SMH this company like white knights who think they are above everybody. They want regulation but they want to be untouchable by this regulation. Only wanting to hurt other people but not “almighty” Sam and friends.

Lies straight through his teeth to Congress about suggesting similar things done in the EU, but then starts complain about them now. This dude should not be taken seriously in any political sphere whatsoever.

My opinion is this company is anti-progressive for AI by locking things up which is contrary to their brand name. If they can’t even stay true to something easy like that, how should we expect them to stay true with AI safety which is much harder?

I am glad they switch sides for now, but pretty ticked how they think they are entitled to corruption to benefit only themselves. SMH!!!!!!!!

What are your thoughts?"
112,machinelearning,open-ai,comments,2023-04-05 19:44:09,"[D] ""Our Approach to AI Safety"" by OpenAI",mckirkus,False,0.88,298,12cvkvn,https://www.reddit.com/r/MachineLearning/comments/12cvkvn/d_our_approach_to_ai_safety_by_openai/,297,1680723849.0,"It seems OpenAI are steering the conversation away from the existential threat narrative and into things like accuracy, decency, privacy, economic risk, etc.

To the extent that they do buy the existential risk argument, they don't seem concerned much about GPT-4 making a leap into something dangerous, even if it's at the heart of autonomous agents that are currently emerging.  

>""Despite extensive research and testing, we cannot predict all of the [beneficial ways people will use our technology](https://openai.com/customer-stories), nor all the ways people will abuse it. That’s why we believe that learning from real-world use is a critical component of creating and releasing increasingly safe AI systems over time. ""

Article headers:

* Building increasingly safe AI systems
* Learning from real-world use to improve safeguards
* Protecting children
* Respecting privacy
* Improving factual accuracy

&#x200B;

[https://openai.com/blog/our-approach-to-ai-safety](https://openai.com/blog/our-approach-to-ai-safety)"
113,machinelearning,open-ai,comments,2016-01-09 04:01:47,AMA: the OpenAI Research Team,IlyaSutskever,False,0.98,401,404r9m,https://www.reddit.com/r/MachineLearning/comments/404r9m/ama_the_openai_research_team/,285,1452312107.0,"The OpenAI research team will be answering your questions.

We are (our usernames are):  Andrej Karpathy (badmephisto), Durk Kingma (dpkingma), Greg Brockman (thegdb), Ilya Sutskever (IlyaSutskever), John Schulman (johnschulman), Vicki Cheung (vicki-openai), Wojciech Zaremba (wojzaremba).


Looking forward to your questions! "
114,machinelearning,open-ai,comments,2024-01-15 20:56:46,[D] What is your honest experience with reinforcement learning?,Starks-Technology,False,0.88,322,197jp2b,https://www.reddit.com/r/MachineLearning/comments/197jp2b/d_what_is_your_honest_experience_with/,284,1705352206.0,"In my personal experience, SOTA RL algorithms simply don't work. I've tried working with reinforcement learning for over 5 years. I remember when Alpha Go defeated the world famous Go player, Lee Sedol, and everybody thought RL would take the ML community by storm. Yet, outside of toy problems, I've personally never found a practical use-case of RL.

What is your experience with it? Aside from Ad recommendation systems and RLHF, are there legitimate use-cases of RL? Or, was it all hype?

**Edit**: I know a lot about AI. I built [NexusTrade](https://nexustrade.io/), an AI-Powered automated investing tool that lets non-technical users create, update, and deploy their trading strategies. I’m not an idiot nor a noob; RL is just ridiculously hard. 

**Edit 2**: Since my comments are being downvoted, [here is a link to my article](https://medium.com/p/228835689841) that better describes my position.

It's not that I don't understand RL. I released my [open-source code](https://github.com/austin-starks/Deep-RL-Stocks) and [wrote a paper on it](https://drive.google.com/file/d/1x67IaLpErVw9SwSBjWAdDtNEOcQSgje_/view).

It's the fact that it's EXTREMELY difficult to understand. Other deep learning algorithms like CNNs (including ResNets), RNNs (including GRUs and LSTMs), Transformers, and GANs are not hard to understand. These algorithms work and have **practical** use-cases outside of the lab.

Traditional SOTA RL algorithms like PPO, DDPG, and TD3 are just very hard. You need to do a bunch of research to even implement a toy problem. In contrast, the [decision transformer](https://drive.google.com/file/d/1x67IaLpErVw9SwSBjWAdDtNEOcQSgje_/view) is something anybody can implement, and it seems to match or surpass the SOTA. You don't need two networks battling each other. You don't have to go through hell to debug your network. It just naturally learns the best set of actions in an auto-regressive manner.

I also didn't mean to come off as arrogant or imply that RL is not worth learning. I just haven't seen any real-world, practical use-cases of it. I simply wanted to start a discussion, not claim that I know everything.

**Edit 3**: There's a shockingly number of people calling me an idiot for not fully understanding RL. You guys are **wayyy too comfortable** calling people you disagree with names. News-flash, not everybody has a PhD in ML. My undergraduate degree is in biology. I self-taught myself the high-level maths to understand ML. I'm very passionate about the field; I just have **VERY** disappointing experiences with RL.

Funny enough, there are very few people refuting my actual points. To summarize:

* Lack of real-world applications
* **Extremely** complex and inaccessible to 99% of the population
* Much harder than traditional DL algorithms like CNNs, RNNs, and GANs
* Sample inefficiency and instability
* Difficult to debug
* Better alternatives, such as the Decision Transformer

Are these not legitimate criticisms? Is the purpose of this sub not to have discussions related to Machine Learning?

To the few commenters that aren't calling me an idiot...thank you! Remember, **it costs you nothing to be nice!**

**Edit 4**: Lots of people seem to agree that RL is over-hyped. Unfortunately those comments are downvoted. To clear up some things:

* We've invested HEAVILY into reinforcement learning. All we got from this investment is a robot that can be super-human at (some) video games.
* AlphaFold **did not use any reinforcement learning.** SpaceX doesn't either.
* I concede that it can be useful for robotics, but still argue that it's use-cases outside the lab are **extremely limited.**

If you're stumbling on this thread and curious about an RL alternative, check out the [Decision Transformer](https://www.youtube.com/watch?v=-buULmf7dec). It can be used in any situation that a traditional RL algorithm can be used.

**Final Edit**: To those who contributed more recently, thank you for the thoughtful discussion! From what I learned, model-based models like Dreamer and IRIS MIGHT have a future. But everybody who has actually used model-free models like DDPG unanimously agree that they suck and don’t work."
115,machinelearning,open-ai,comments,2020-05-15 00:15:44,[D] Elon Musk has a complex relationship with the A.I. community,milaworld,False,0.88,284,gjyk94,https://www.reddit.com/r/MachineLearning/comments/gjyk94/d_elon_musk_has_a_complex_relationship_with_the/,280,1589501744.0,"**Update:** [Yann LeCun](https://twitter.com/elonmusk/status/1261156271836860417) stepped in, and I think they made peace, after agreeing on the awesomeness of PyTorch 😂

---

*An [article](https://www.cnbc.com/2020/05/13/elon-musk-has-a-complex-relationship-with-the-ai-community.html) about Elon Musk and the machine learning research community leading to some interesting [discussions](https://www.newsweek.com/elon-musk-tweets-facebook-sucks-artificial-intelligence-jerome-pesenti-tesla-1503973) between the head of Facebook AI research (apparently it is not Yann Lecun anymore, but some [other dude](https://twitter.com/an_open_mind/status/1260528928617369601)), and [Elon](https://twitter.com/elonmusk/status/1260852444818362369) himself.*

*Quotes from the article:*

Multiple AI researchers from different companies told CNBC that they see Musk’s AI comments as inappropriate and urged the public not to take his views on AI too seriously. The smartest computers can still only excel at a “narrow” selection of tasks and there’s a long way to go before human-level AI is achieved.

“A large proportion of the community think he’s a negative distraction,” said an AI executive with close ties to the community who wished to remain anonymous because their company may work for one of Musk’s businesses.

“He is sensationalist, he veers wildly between openly worrying about the downside risk of the technology and then hyping the AGI (artificial general intelligence) agenda. Whilst his very real accomplishments are acknowledged, his loose remarks lead to the general public having an unrealistic understanding of the state of AI maturity.”

An AI scientist who specializes in speech recognition and wished to remain anonymous to avoid public backlash said Musk is “not always looked upon favorably” by the AI research community.

“I instinctively fall on dislike, because he makes up such nonsense,” said another AI researcher at a U.K university who asked to be kept anonymous. “But then he delivers such extraordinary things. It always leaves me wondering, does he know what he’s doing? Is all the visionary stuff just a trick to get an innovative thing to market?”

CNBC reached out to Musk and his representatives for this article but is yet to receive a response. *(Well, they got one now! 👇)*

“*[I believe a lot of people in the AI community would be ok saying it publicly. Elon Musk has no idea what he is talking about when he talks about AI. There is no such thing as AGI and we are nowhere near matching human intelligence. #noAGI](https://twitter.com/an_open_mind/status/1260528928617369601)*” (Jérôme Pesenti, VP of AI at Facebook)

“*[Facebook sucks](https://twitter.com/elonmusk/status/1260852444818362369)*” (Elon Musk)

Article: https://www.cnbc.com/2020/05/13/elon-musk-has-a-complex-relationship-with-the-ai-community.html"
116,machinelearning,open-ai,comments,2017-08-15 00:46:14,"[D] ""OpenAI used the DOTA bot API...Musk stepped in and made unjustified hyperbolic claims""",muskfragrance,False,0.84,189,6tqt50,https://twitter.com/mark_riedl/status/897181792901398529,272,1502757974.0,
117,machinelearning,open-ai,comments,2022-05-27 05:46:54,"[D] I don't really trust papers out of ""Top Labs"" anymore",MrAcurite,False,0.97,1677,uyratt,https://www.reddit.com/r/MachineLearning/comments/uyratt/d_i_dont_really_trust_papers_out_of_top_labs/,262,1653630414.0,"I mean, I trust that the numbers they got are accurate and that they really did the work and got the results. I believe those. It's just that, take the recent ""An Evolutionary Approach to Dynamic Introduction of Tasks in Large-scale Multitask Learning Systems"" paper. It's 18 pages of talking through this pretty convoluted evolutionary and multitask learning algorithm, it's pretty interesting, solves a bunch of problems. But two notes. 

One, the big number they cite as the success metric is 99.43 on CIFAR-10, against a SotA of 99.40, so woop-de-fucking-doo in the grand scheme of things.

Two, there's a chart towards the end of the paper that details how many TPU core-hours were used for just the training regimens that results in the final results. The sum total is 17,810 core-hours. Let's assume that for someone who doesn't work at Google, you'd have to use on-demand pricing of $3.22/hr. This means that these trained models cost $57,348. 

Strictly speaking, throwing enough compute at a general enough genetic algorithm will eventually produce arbitrarily good performance, so while you can absolutely read this paper and collect interesting ideas about how to use genetic algorithms to accomplish multitask learning by having each new task leverage learned weights from previous tasks by defining modifications to a subset of components of a pre-existing model, there's a meta-textual level on which this paper is just ""Jeff Dean spent enough money to feed a family of four for half a decade to get a 0.03% improvement on CIFAR-10.""

OpenAI is far and away the worst offender here, but it seems like everyone's doing it. You throw a fuckton of compute and a light ganache of new ideas at an existing problem with existing data and existing benchmarks, and then if your numbers are infinitesimally higher than their numbers, you get to put a lil' sticker on your CV. Why should I trust that your ideas are even any good? I can't check them, I can't apply them to my own projects. 

Is this really what we're comfortable with as a community? A handful of corporations and the occasional university waving their dicks at everyone because they've got the compute to burn and we don't? There's a level at which I think there should be a new journal, exclusively for papers in which you can replicate their experimental results in under eight hours on a single consumer GPU."
118,machinelearning,open-ai,comments,2021-01-18 09:08:06,[P] The Big Sleep: Text-to-image generation using BigGAN and OpenAI's CLIP via a Google Colab notebook from Twitter user Adverb,Wiskkey,False,0.99,615,kzr4mg,https://www.reddit.com/r/MachineLearning/comments/kzr4mg/p_the_big_sleep_texttoimage_generation_using/,259,1610960886.0,"From [https://twitter.com/advadnoun/status/1351038053033406468](https://twitter.com/advadnoun/status/1351038053033406468):

>The Big Sleep  
>  
>Here's the notebook for generating images by using CLIP to guide BigGAN.  
>  
>It's very much unstable and a prototype, but it's also a fair place to start. I'll likely update it as time goes on.  
>  
>[colab.research.google.com/drive/1NCceX2mbiKOSlAd\_o7IU7nA9UskKN5WR?usp=sharing](https://colab.research.google.com/drive/1NCceX2mbiKOSlAd_o7IU7nA9UskKN5WR?usp=sharing)

I am not the developer of The Big Sleep. [This](https://twitter.com/advadnoun/) is the developer's Twitter account; [this](https://www.reddit.com/user/advadnoun) is the developer's Reddit account.

**Steps to follow to generate the first image in a given Google Colab session**:

1. Optionally, if this is your first time using Google Colab, view this [Colab introduction](https://colab.research.google.com/notebooks/intro.ipynb) and/or this [Colab FAQ](https://research.google.com/colaboratory/faq.html).
2. Click [this link](https://colab.research.google.com/drive/1NCceX2mbiKOSlAd_o7IU7nA9UskKN5WR?usp=sharing).
3. Sign into your Google account if you're not already signed in. Click the ""S"" button in the upper right to do this. Note: Being signed into a Google account has privacy ramifications, such as your Google search history being recorded in your Google account.
4. In the Table of Contents, click ""Parameters"".
5. Find the line that reads ""tx = clip.tokenize('''a cityscape in the style of Van Gogh''')"" and change the text inside of the single quote marks to your desired text; example: ""tx = clip.tokenize('''a photo of New York City''')"". The developer recommends that you keep the three single quote marks on both ends of your desired text so that mult-line text can be used  An alternative is to remove two of the single quotes on each end of your desired text; example: ""tx = clip.tokenize('a photo of New York City')"".
6. In the Table of Contents, click ""Restart the kernel..."".
7. Position the pointer over the first cell in the notebook, which starts with text ""import subprocess"". Click the play button (the triangle) to run the cell. Wait until the cell completes execution.
8. Click menu item ""Runtime->Restart and run all"".
9. In the Table of Contents, click ""Diagnostics"". The output appears near the end of the Train cell that immediately precedes the Diagnostics cell, so scroll up a bit. Every few minutes (or perhaps 10 minutes if Google assigned you relatively slow hardware for this session), a new image will appear in the Train cell that is a refinement of the previous image. This process can go on for as long as you want until Google ends your Google Colab session, which is a total of [up to 12 hours](https://research.google.com/colaboratory/faq.html) for the free version of Google Colab.

**Steps to follow if you want to start a different run using the same Google Colab session:**

1. Click menu item ""Runtime->Interrupt execution"".
2. Save any images that you want to keep by right-clicking on them and using the appropriate context menu command.
3. Optionally, change the desired text. Different runs using the same desired text almost always results in different outputs.
4. Click menu item ""Runtime->Restart and run all"".

**Steps to follow when you're done with your Google Colab session**:

1. Click menu item ""Runtime->Manage sessions"". Click ""Terminate"" to end the session.
2. Optionally, log out of your Google account due to the privacy ramifications of being logged into a Google account.

The first output image in the Train cell (using the notebook's default of seeing every 100th image generated) usually is a very poor match to the desired text, but the second output image often is a decent match to the desired text. To change the default of seeing every 100th image generated, change the number 100 in line ""if itt % 100 == 0:"" in the Train cell to the desired number. **For free-tier Google Colab users, I recommend changing 100 to a small integer such as 5.**

Tips for the text descriptions that you supply:

1. In Section 3.1.4 of OpenAI's [CLIP paper](https://cdn.openai.com/papers/Learning_Transferable_Visual_Models_From_Natural_Language_Supervision.pdf) (pdf), the authors recommend using a text description of the form ""A photo of a {label}."" or ""A photo of a {label}, a type of {type}."" for images that are photographs.
2. A Reddit user gives [these tips](https://www.reddit.com/r/MediaSynthesis/comments/l2hmqn/this_aint_it_chief/gk8g8e9/).
3. The Big Sleep should generate [these 1,000 types of things](https://www.reddit.com/r/MediaSynthesis/comments/l7hbix/tip_for_users_of_the_big_sleep_it_should_on/) better on average than other types of things.

[Here](https://www.digitaltrends.com/news/big-sleep-ai-image-generator/) is an article containing a high-level description of how The Big Sleep works. The Big Sleep uses a modified version of [BigGAN](https://aiweirdness.com/post/182322518157/welcome-to-latent-space) as its image generator component. The Big Sleep uses the ViT-B/32 [CLIP](https://openai.com/blog/clip/) model to rate how well a given image matches your desired text. The best CLIP model according to the CLIP paper authors is the (as of this writing) unreleased ViT-L/14-336px model; see Table 10 on page 40 of the [CLIP paper (pdf)](https://cdn.openai.com/papers/Learning_Transferable_Visual_Models_From_Natural_Language_Supervision.pdf) for a comparison.

There are [many other sites/programs/projects](https://www.reddit.com/r/MachineLearning/comments/ldc6oc/p_list_of_sitesprogramsprojects_that_use_openais/) that use CLIP to steer image/video creation to match a text description.

Some relevant subreddits:

1. [r/bigsleep](https://www.reddit.com/r/bigsleep/) (subreddit for images/videos generated from text-to-image machine learning algorithms).
2. [r/deepdream](https://www.reddit.com/r/deepdream/) (subreddit for images/videos generated from machine learning algorithms).
3. [r/mediasynthesis](https://www.reddit.com/r/mediasynthesis/) (subreddit for media generation/manipulation techniques that use artificial intelligence; this subreddit shouldn't be used to post images/videos unless new techniques are demonstrated, or the images/videos are of high quality relative to other posts).

Example using text 'a black cat sleeping on top of a red clock':

https://preview.redd.it/7xq58v7022c61.png?width=512&format=png&auto=webp&s=a229ae9add555cd1caba31c42b60d907ffe67773

Example using text 'the word ''hot'' covered in ice':

https://preview.redd.it/6kxdp8u3k2c61.png?width=512&format=png&auto=webp&s=5bd078b0111575f5d88a1dc53b0aeb933f3b0da6

Example using text 'a monkey holding a green lightsaber':

https://preview.redd.it/rdsybsoaz2c61.png?width=512&format=png&auto=webp&s=2769d4c6c883c1c35ae0b1c629bebe9bc1d41393

Example using text 'The White House in Washington D.C. at night with green and red spotlights shining on it':

https://preview.redd.it/w4mg90xsf5c61.png?width=512&format=png&auto=webp&s=5f18318de2f77bcd8a86e71e87048fadd30383d1

Example using text '''A photo of the Golden Gate Bridge at night, illuminated by spotlights in a tribute to Prince''':

https://preview.redd.it/cn4ecuafhic61.png?width=512&format=png&auto=webp&s=397c838fdc49f13c5f17110b92c78b95bf0dcac0

Example using text '''a Rembrandt-style painting titled ""Robert Plant decides whether to take the stairway to heaven or the ladder to heaven""''':

https://preview.redd.it/h7rb3y6j5jc61.png?width=512&format=png&auto=webp&s=537bfe8210af185647b00e7585c948aa2c4e0ffb

Example using text '''A photo of the Empire State Building being shot at with the laser cannons of a TIE fighter.''':

https://preview.redd.it/cwi7i639c5d61.png?width=512&format=png&auto=webp&s=0510c8b93adb40eee4d3f41607f1c215d41e55ff

Example using text '''A cartoon of a new mascot for the Reddit subreddit DeepDream that has a mouse-like face and wears a cape''':

https://preview.redd.it/wtxbduevcbd61.png?width=512&format=png&auto=webp&s=c5d266258922bc62f25c80a08cd9cabc07d9cb1c

Example using text '''Bugs Bunny meets the Eye of Sauron, drawn in the Looney Tunes cartoon style''':

https://preview.redd.it/gmljaeekuid61.png?width=512&format=png&auto=webp&s=9ea578de165e12afc3a62bf6886bc1ae9dc19bec

Example using text '''Photo of a blue and red neon-colored frog at night.''':

https://preview.redd.it/nzlypte6wzd61.png?width=512&format=png&auto=webp&s=7e10b06f22cfc57c64b6d05738c7486b895083df

Example using text '''Hell begins to freeze over''':

https://preview.redd.it/vn99we9ngmf61.png?width=512&format=png&auto=webp&s=2408efd607f0ab40a08db6ee67448791aa813993

Example using text '''A scene with vibrant colors''':

https://preview.redd.it/4z133mvrgmf61.png?width=512&format=png&auto=webp&s=b78e7a8e3f736769655056093a9904ff09a355a1

Example using text '''The Great Pyramids were turned into prisms by a wizard''':

https://preview.redd.it/zxt6op7vgmf61.png?width=512&format=png&auto=webp&s=53e578cfde14b28afe27957e95e610b89afadd44"
119,machinelearning,open-ai,comments,2017-08-12 00:10:03,[N] OpenAI bot beat best Dota 2 players in 1v1 at The International 2017,crouching_dragon_420,False,0.96,569,6t58ks,https://blog.openai.com/dota-2/,252,1502496603.0,
120,machinelearning,open-ai,comments,2020-12-04 20:49:23,[D] Jeff Dean's official post regarding Timnit Gebru's termination,netw0rkf10w,False,0.9,304,k6t96m,https://www.reddit.com/r/MachineLearning/comments/k6t96m/d_jeff_deans_official_post_regarding_timnit/,252,1607114963.0,"You can read it in full at [this link](https://docs.google.com/document/d/1f2kYWDXwhzYnq8ebVtuk9CqQqz7ScqxhSIxeYGrWjK0/preview?pru=AAABdlOOKBs*gTzLnuI53B2IS2BISVcgAQ).

The post includes the email he sent previously, which was already posted in this sub. I'm thus skipping that part.

\---

### About Google's approach to research publication

I understand the concern over Timnit Gebru’s resignation from Google.  She’s done a great deal to move the field forward with her research.  I wanted to share the email I sent to Google Research and some thoughts on our research process.

Here’s the email I sent to the Google Research team on Dec. 3, 2020:

\[Already posted [here](https://www.reddit.com/r/MachineLearning/comments/k6467v/n_the_email_that_got_ethical_ai_researcher_timnit/)\]

I’ve also received questions about our research and review process, so I wanted to share more here.  I'm going to be talking with our research teams, especially those on the Ethical AI team and our many other teams focused on responsible AI, so they know that we strongly support these important streams of research.  And to be clear, we are deeply committed to continuing our research on topics that are of particular importance to individual and intellectual diversity  -- from unfair social and technical bias in ML models, to the paucity of representative training data, to involving social context in AI systems.  That work is critical and I want our research programs to deliver more work on these topics -- not less.

In my email above, I detailed some of what happened with this particular paper.  But let me give a better sense of the overall research review process.  It’s more than just a single approver or immediate research peers; it’s a process where we engage a wide range of researchers, social scientists, ethicists, policy & privacy advisors, and human rights specialists from across Research and Google overall.  These reviewers ensure that, for example, the research we publish paints a full enough picture and takes into account the latest relevant research we’re aware of, and of course that it adheres to our [AI Principles](https://ai.google/principles).

Those research review processes have helped improve many of our publications and research applications. While more than 1,000 projects each year turn into published papers, there are also many that don’t end up in a publication.  That’s okay, and we can still carry forward constructive parts of a project to inform future work.  There are many ways we share our research; e.g. publishing a paper, open-sourcing code or models or data or colabs, creating demos, working directly on products, etc. 

This paper surveyed valid concerns with large language models, and in fact many teams at Google are actively working on these issues. We’re engaging the authors to ensure their input informs the work we’re doing, and I’m confident it will have a positive impact on many of our research and product efforts.

But the paper itself had some important gaps that prevented us from being comfortable putting Google affiliation on it.  For example, it didn’t include important findings on how models can be made more efficient and actually reduce overall environmental impact, and it didn’t take into account some recent work at Google and elsewhere on mitigating bias in language models.   Highlighting risks without pointing out methods for researchers and developers to understand and mitigate those risks misses the mark on helping with these problems.  As always, feedback on paper drafts generally makes them stronger when they ultimately appear.

We have a strong track record of publishing work that challenges the status quo -- for example, we’ve had more than 200 publications focused on responsible AI development in the last year alone.  Just a few examples of research we’re engaged in that tackles challenging issues:

* [Measuring and reducing gendered correlations in pre-trained NLP models](https://arxiv.org/abs/2010.06032)
* [Evading Deepfake-Image Detectors with White- and Black-Box Attacks](https://arxiv.org/abs/2004.00622)
* [Extending the Machine Learning Abstraction Boundary: A Complex Systems Approach to Incorporate Societal Context](https://arxiv.org/abs/2006.09663)
* [CLIMATE-FEVER: A Dataset for Verification of Real-World Climate Claims](https://arxiv.org/abs/2012.00614)
* [What Does AI Mean for Smallholder Farmers? A Proposal for Farmer-Centered AI Research \[forthcoming\]](https://medium.com/people-ai-research/q-a-ground-truth-supporting-farmers-with-machine-learning-b95796d5196b)
* [SoK: Hate, Harassment, and the Changing Landscape of Online Abuse](https://research.google/pubs/pub49786/)
* [Accelerating eye movement research via accurate and affordable smartphone eye tracking](https://www.nature.com/articles/s41467-020-18360-5/)
* [The Secret Sharer: Evaluating and Testing Unintended Memorization in Neural Networks](https://arxiv.org/abs/1802.08232)
* [Assessing the impact of coordinated COVID-19 exit strategies across Europe](https://science.sciencemag.org/content/369/6510/1465)
* [Practical Compositional Fairness: Understanding Fairness in Multi-Component Ranking Systems](https://arxiv.org/abs/1911.01916)

I’m proud of the way Google Research provides the flexibility and resources to explore many avenues of research.  Sometimes those avenues run perpendicular to one another.  This is by design.  The exchange of diverse perspectives, even contradictory ones, is good for science and good for society.  It’s also good for Google.  That exchange has enabled us not only to tackle ambitious problems, but to do so responsibly.

Our aim is to rival peer-reviewed journals in terms of the rigor and thoughtfulness in how we review research before publication.  To give a sense of that rigor, this blog post captures some of the detail in one facet of review, which is when a research topic has broad societal implications and requires particular AI Principles review -- though it isn’t the full story of how we evaluate all of our research, it gives a sense of the detail involved: [https://blog.google/technology/ai/update-work-ai-responsible-innovation/](https://blog.google/technology/ai/update-work-ai-responsible-innovation/)

We’re actively working on improving our paper review processes, because we know that too many checks and balances can become cumbersome.  We will always prioritize ensuring our research is responsible and high-quality, but we’re working to make the process as streamlined as we can so it’s more of a pleasure doing research here.

A final, important note -- we evaluate the substance of research separately from who’s doing it.  But to ensure our research reflects a fuller breadth of global experiences and perspectives in the first place, we’re also committed to making sure Google Research is a place where every Googler can do their best work.  We’re pushing hard on our efforts to improve representation and inclusiveness across Google Research, because we know this will lead to better research and a better experience for everyone here."
121,machinelearning,open-ai,comments,2023-01-20 10:41:04,[N] OpenAI Used Kenyan Workers on Less Than $2 Per Hour to Make ChatGPT Less Toxic,ChubChubkitty,False,0.83,519,10gtruu,https://www.reddit.com/r/MachineLearning/comments/10gtruu/n_openai_used_kenyan_workers_on_less_than_2_per/,246,1674211264.0,https://time.com/6247678/openai-chatgpt-kenya-workers/
122,machinelearning,open-ai,comments,2020-10-23 21:56:30,[D] A Jobless Rant - ML is a Fool's Gold,good_rice,False,0.9,474,jgwqe8,https://www.reddit.com/r/MachineLearning/comments/jgwqe8/d_a_jobless_rant_ml_is_a_fools_gold/,235,1603490190.0,"*Aside from the clickbait title, I am earnestly looking for some advice and discussion from people who are actually employed. That being said, here's my gripe:*

I have been relentlessly inundated by the words ""AI, ML, Big Data"" throughout my undergrad from other CS majors, business and sales oriented people, media, and <insert-catchy-name>.ai type startups. It seems like everyone was peddling ML as the go to solution, the big money earner, and the future of the field. I've heard college freshman ask stuff like, ""if I want to do CS, am I going to need to learn ML to be relevant"" - if you're on this sub, I probably do not need to continue to elaborate on just how ridiculous the ML craze is.  Every single university has opened up ML departments or programs and are pumping out ML graduates at an unprecedented rate. **Surely, there'd be a job market to meet the incredible supply of graduates and cultural interest?**

Swept up in a mixture of genuine interest and hype, I decided to pursue computer vision. I majored in Math-CS at a [top-10](http://csrankings.org/#/index?all) CS university (based on at least one arbitrary ranking). I had three computer vision internships, two at startups, one at NASA JPL, in each doing non-trivial CV work; I (re)implemented and integrated CV systems from mixtures of recently published papers. I have a bunch of projects showing both CV and CS fundamentals (OS, networking, data structures, algorithms, etc) knowledge. I have taken graduate level ML coursework. I was accepted to Carnegie Mellon for an MS in Computer Vision, but I deferred to 2021 - all in all, I worked my ass off to try to simultaneously get a solid background in math AND computer science AND computer vision.

That brings me to where I am now, which is unemployed and looking for jobs. Almost every single position I have seen requires a PhD and/or 5+ years of experience, and whatever I have applied for has ghosted me so far. The notion that ML is a high paying in-demand field seems to only be true if your name is Andrej Karpathy - and I'm only sort of joking. It seems like unless you have a PhD from one of the big 4 in CS and multiple publications in top tier journals you're out of luck, or at least vying for one of the few remaining positions at small companies.

This seems normalized in ML, but this is not the case for quite literally every other subfield or even generalized CS positions. Getting a high paying job at a Big N company is possible as a new grad with just a bachelors and general SWE knowledge, and there are a plethora of positions elsewhere. Getting the equivalent with basically every specialization, whether operating systems, distributed systems, security, networking, etc, is also possible, and doesn't require 5 CVPR publications.

**TL;DR** **From my personal perspective,** **if you want to do ML because of career prospects, salaries, or job security, pick almost any other CS specialization**. In ML, you'll find yourself working 2x as hard through difficult theory and math to find yourself competing with more applicants for fewer positions.

I am absolutely complaining and would love to hear a more positive perspective, but in the meanwhile I'll be applying to jobs, working on more post-grad projects, and contemplating switching fields. "
123,machinelearning,open-ai,comments,2021-01-05 19:48:05,[R] New Paper from OpenAI: DALL·E: Creating Images from Text,programmerChilli,False,0.99,893,kr63ot,https://openai.com/blog/dall-e/,232,1609876085.0,
124,machinelearning,open-ai,comments,2017-12-13 22:33:53,AMA: We are Noam Brown and Professor Tuomas Sandholm from Carnegie Mellon University. We built the Libratus poker AI that beat top humans earlier this year. Ask us anything!,NoamBrown,False,0.97,185,7jn12v,https://www.reddit.com/r/MachineLearning/comments/7jn12v/ama_we_are_noam_brown_and_professor_tuomas/,227,1513204433.0,"Hi all! We are [Noam Brown](http://www.cs.cmu.edu/~noamb/) and Professor [Tuomas Sandholm](http://www.cs.cmu.edu/~sandholm/). Earlier this year our AI [Libratus](https://video.vice.com/en_us/embed/589001f24f0d043f21139709) defeated top pros for the first time in no-limit poker (specifically heads-up no-limit Texas hold'em). We played four top humans in a 120,000 hand match that lasted 20 days, with a $200,000 prize pool divided among the pros. We beat them by a wide margin ($1.8 million at $50/$100 blinds, or about 15 BB / 100 in poker terminology), and each human lost individually to the AI. Our recent paper discussing one of the central techniques of the AI, [safe and nested subgame solving](http://www.cs.cmu.edu/~noamb/papers/17-NIPS-Safe.pdf), won a best paper award at NIPS 2017.

We are happy to answer your questions about Libratus, the competition, AI, imperfect-information games, Carnegie Mellon, life in academia for a professor or PhD student, or any other questions you might have!

We are opening this thread to questions now and will be here starting at 9AM EST on  Monday December 18th to answer them.

EDIT: We just had a paper published in Science revealing the details of the bot! [http://science.sciencemag.org/content/early/2017/12/15/science.aao1733?rss=1](http://science.sciencemag.org/content/early/2017/12/15/science.aao1733?rss=1)

EDIT: Here's a Youtube video explaining Libratus at a high level: [https://www.youtube.com/watch?v=2dX0lwaQRX0](https://www.youtube.com/watch?v=2dX0lwaQRX0)

EDIT: Thanks everyone for the questions! We hope this was insightful! If you have additional questions we'll check back here every once in a while."
125,machinelearning,open-ai,comments,2019-02-15 13:04:39,[Discussion] OpenAI should now change their name to ClosedAI,SirLordDragon,False,0.92,651,aqwcyx,https://www.reddit.com/r/MachineLearning/comments/aqwcyx/discussion_openai_should_now_change_their_name_to/,223,1550235879.0,It's the only way to complete the hype wave.
126,machinelearning,open-ai,comments,2022-11-15 19:17:19,[D] AMA: The Stability AI Team,stabilityai,False,0.96,358,yw6s1i,https://www.reddit.com/r/MachineLearning/comments/yw6s1i/d_ama_the_stability_ai_team/,216,1668539839.0,"Hi all,

We are the Stability AI team supporting open source ML models, code and communities.

Ask away!

Edit 1 (UTC+0 21:30): Thanks for the great questions! Taking a short break, will come back later and answer as we have time.

Edit 2 (UTC+0 22:24): Closing new questions, still answering some existing Q's posted before now."
127,machinelearning,open-ai,comments,2020-06-10 20:50:38,"[D] GPT-3, The $4,600,000 Language Model",mippie_moe,False,0.96,444,h0jwoz,https://www.reddit.com/r/MachineLearning/comments/h0jwoz/d_gpt3_the_4600000_language_model/,215,1591822238.0,"[OpenAI’s GPT-3 Language Model Explained](https://lambdalabs.com/blog/demystifying-gpt-3/)

Some interesting take-aways:

* GPT-3 demonstrates that a language model trained on enough data can solve NLP tasks that it has never seen. That is, GPT-3 studies the model as a general solution for many downstream jobs **without fine-tuning**.
* It would take **355 years** to train GPT-3 on a Tesla V100, the fastest GPU on the market.
* It would cost **\~$4,600,000** to train GPT-3 on using the lowest cost GPU cloud provider."
128,machinelearning,open-ai,comments,2023-02-24 17:21:15,[R] Meta AI open sources new SOTA LLM called LLaMA. 65B version (trained on 1.4T tokens) is competitive with Chinchilla and Palm-540B. 13B version outperforms OPT and GPT-3 175B on most benchmarks.,MysteryInc152,False,0.98,618,11awp4n,https://www.reddit.com/r/MachineLearning/comments/11awp4n/r_meta_ai_open_sources_new_sota_llm_called_llama/,213,1677259275.0,"[https://twitter.com/GuillaumeLample/status/1629151231800115202?t=4cLD6Ko2Ld9Y3EIU72-M2g&s=19](https://twitter.com/GuillaumeLample/status/1629151231800115202?t=4cLD6Ko2Ld9Y3EIU72-M2g&s=19)

Paper here - [https://research.facebook.com/publications/llama-open-and-efficient-foundation-language-models/](https://research.facebook.com/publications/llama-open-and-efficient-foundation-language-models/)"
129,machinelearning,open-ai,comments,2023-03-30 14:18:50,[D] AI Policy Group CAIDP Asks FTC To Stop OpenAI From Launching New GPT Models,vadhavaniyafaijan,False,0.84,211,126oiey,https://www.reddit.com/r/MachineLearning/comments/126oiey/d_ai_policy_group_caidp_asks_ftc_to_stop_openai/,213,1680185930.0,"The Center for AI and Digital Policy (CAIDP), a tech ethics group, has asked the Federal Trade Commission to investigate OpenAI for violating consumer protection rules. CAIDP claims that OpenAI's AI text generation tools have been ""biased, deceptive, and a risk to public safety.""

CAIDP's complaint raises concerns about potential threats from OpenAI's GPT-4 generative text model, which was announced in mid-March. It warns of the potential for GPT-4 to produce malicious code and highly tailored propaganda and the risk that biased training data could result in baked-in stereotypes or unfair race and gender preferences in hiring. 

The complaint also mentions significant privacy failures with OpenAI's product interface, such as a recent bug that exposed OpenAI ChatGPT histories and possibly payment details of ChatGPT plus subscribers.

CAIDP seeks to hold OpenAI accountable for violating Section 5 of the FTC Act, which prohibits unfair and deceptive trade practices. The complaint claims that OpenAI knowingly released GPT-4 to the public for commercial use despite the risks, including potential bias and harmful behavior. 

[Source](https://www.theinsaneapp.com/2023/03/stop-openai-from-launching-gpt-5.html) | [Case](https://www.caidp.org/cases/openai/)| [PDF](https://www.caidp.org/app/download/8450269463/CAIDP-FTC-Complaint-OpenAI-GPT-033023.pdf)"
130,machinelearning,open-ai,comments,2020-12-21 14:40:21,[N] Montreal-based Element AI sold for $230-million as founders saw value mostly wiped out,sensetime,False,0.99,524,khin4c,https://www.reddit.com/r/MachineLearning/comments/khin4c/n_montrealbased_element_ai_sold_for_230million_as/,211,1608561621.0,"According to [Globe and Mail](https://www.theglobeandmail.com/business/article-element-ai-sold-for-230-million-as-founders-saw-value-wiped-out/) article:

**Element AI sold for $230-million as founders saw value mostly wiped out, document reveals**

Montreal startup Element AI Inc. was running out of money and options when it inked a deal last month to sell itself for US$230-milion to Silicon Valley software company ServiceNow Inc., a confidential document obtained by the Globe and Mail reveals.

Materials sent to Element AI shareholders Friday reveal that while many of its institutional shareholders will make most if not all of their money back from backing two venture financings, employees will not fare nearly as well. Many have been terminated and had their stock options cancelled.

Also losing out are co-founders Jean-François Gagné, the CEO, his wife Anne Martel, the chief administrative officer, chief science officer Nick Chapados and **Yoshua Bengio**, the University of Montreal professor known as a godfather of “deep learning,” the foundational science behind today’s AI revolution.

Between them, they owned 8.8 million common shares, whose value has been wiped out with the takeover, which goes to a shareholder vote Dec 29 with enough investor support already locked up to pass before the takeover goes to a Canadian court to approve a plan of arrangement with ServiceNow. The quartet also owns preferred shares worth less than US$300,000 combined under the terms of the deal.

The shareholder document, a management proxy circular, provides a rare look inside efforts by a highly hyped but deeply troubled startup as it struggled to secure financing at the same time as it was failing to live up to its early promises.

The circular states the US$230-million purchase price is subject to some adjustments and expenses which could bring the final price down to US$195-million.

The sale is a disappointing outcome for a company that burst onto the Canadian tech scene four years ago like few others, promising to deliver AI-powered operational improvements to a range of industries and anchor a thriving domestic AI sector. Element AI became the self-appointed representative of Canada’s AI sector, lobbying politicians and officials and landing numerous photo ops with them, including Prime Minister Justin Trudeau. It also secured $25-million in federal funding – $20-million of which was committed earlier this year and cancelled by the government with the ServiceNow takeover.

Element AI invested heavily in hype and and earned international renown, largely due to its association with Dr. Bengio. It raised US$102-million in venture capital in 2017 just nine months after its founding, an unheard of amount for a new Canadian company, from international backers including Microsoft Corp., Intel Corp., Nvidia Corp., Tencent Holdings Ltd., Fidelity Investments, a Singaporean sovereign wealth fund and venture capital firms.

Element AI went on a hiring spree to establish what the founders called “supercredibility,” recruiting top AI talent in Canada and abroad. It opened global offices, including a British operation that did pro bono work to deliver “AI for good,” and its ranks swelled to 500 people.

But the swift hiring and attention-seeking were at odds with its success in actually building a software business. Element AI took two years to focus on product development after initially pursuing consulting gigs. It came into 2019 with a plan to bring several AI-based products to market, including a cybersecurity offering for financial institutions and a program to help port operators predict waiting times for truck drivers.

It was also quietly shopping itself around. In December 2018, the company asked financial adviser Allen & Co LLC to find a potential buyer, in addition to pursuing a private placement, the circular reveals.

But Element AI struggled to advance proofs-of-concept work to marketable products. Several client partnerships faltered in 2019 and 2020.

Element did manage to reach terms for a US$151.4-million ($200-million) venture financing in September, 2019 led by the Caisse de dépôt et placement du Québec and backed by the Quebec government and consulting giant McKinsey and Co. However, the circular reveals the company only received the first tranche of the financing – roughly half of the amount – at the time, and that it had to meet unspecified conditions to get the rest. A fairness opinion by Deloitte commissioned as part of the sale process estimated Element AI’s enterprises value at just US$76-million around the time of the 2019 financing, shrinking to US$45-million this year.

“However, the conditions precedent the closing of the second tranche … were not going to be met in a timely manner,” the circular reads. It states “new terms were proposed” for a round of financing that would give incoming investors ranking ahead of others and a cumulative dividend of 12 per cent on invested capital and impose “other operating and governance constraints and limitations on the company.” Management instead decided to pursue a sale, and Allen contacted prospective buyers in June.

As talks narrowed this past summer to exclusive negotiations with ServiceNow, “the company’s liquidity was diminishing as sources of capital on acceptable terms were scarce,” the circular reads. By late November, it was generating revenue at an annualized rate of just $10-million to $12-million, Deloitte said.

As part of the deal – which will see ServiceNow keep Element AI’s research scientists and patents and effectively abandon its business – the buyer has agreed to pay US$10-million to key employees and consultants including Mr. Gagne and Dr. Bengio as part of a retention plan. The Caisse and Quebec government will get US$35.45-million and US$11.8-million, respectively, roughly the amount they invested in the first tranche of the 2019 financing."
131,machinelearning,open-ai,comments,2023-05-04 16:13:30,"[D] Google ""We Have No Moat, And Neither Does OpenAI"": Leaked Internal Google Document Claims Open Source AI Will Outcompete Google and OpenAI",hardmaru,False,0.98,1174,137rxgw,https://www.semianalysis.com/p/google-we-have-no-moat-and-neither,206,1683216810.0,
132,machinelearning,open-ai,comments,2023-01-30 19:09:14,"[P] I launched “CatchGPT”, a supervised model trained with millions of text examples, to detect GPT created content",qthai912,False,0.75,496,10pb1y3,https://www.reddit.com/r/MachineLearning/comments/10pb1y3/p_i_launched_catchgpt_a_supervised_model_trained/,206,1675105754.0,"I’m an ML Engineer at Hive AI and I’ve been working on a ChatGPT Detector.

Here is a free demo we have up: [https://hivemoderation.com/ai-generated-content-detection](https://hivemoderation.com/ai-generated-content-detection)

From our benchmarks it’s significantly better than similar solutions like GPTZero and OpenAI’s GPT2 Output Detector. On our internal datasets, we’re seeing balanced accuracies of >99% for our own model compared to around 60% for GPTZero and 84% for OpenAI’s GPT2 Detector.

Feel free to try it out and let us know if you have any feedback!"
133,machinelearning,open-ai,comments,2023-11-17 21:12:49,"[N] OpenAI Announces Leadership Transition, Fires Sam Altman",Sm0oth_kriminal,False,0.94,414,17xp85q,https://www.reddit.com/r/MachineLearning/comments/17xp85q/n_openai_announces_leadership_transition_fires/,199,1700255569.0,"EDIT: Greg Brockman has quit as well: https://x.com/gdb/status/1725667410387378559?s=46&t=1GtNUIU6ETMu4OV8_0O5eA

Source: https://openai.com/blog/openai-announces-leadership-transition

Today, it was announced that Sam Altman will no longer be CEO or affiliated with OpenAI due to a lack of “candidness” with the board. This is extremely unexpected as Sam Altman is arguably the most recognizable face of state of the art AI (of course, wouldn’t be possible without great team at OpenAI). Lots of speculation is in the air, but there clearly must have been some good reason to make such a drastic decision.

This may or may not materially affect ML research, but it is plausible that the lack of “candidness” is related to copyright data, or usage of data sources that could land OpenAI in hot water with regulatory scrutiny. Recent lawsuits (https://www.reuters.com/legal/litigation/writers-suing-openai-fire-back-companys-copyright-defense-2023-09-28/) have raised questions about both the morality and legality of how OpenAI and other research groups train LLMs.

Of course we may never know the true reasons behind this action, but what does this mean for the future of AI?"
134,machinelearning,open-ai,comments,2024-02-15 18:39:06,[D] OpenAI Sora Video Gen -- How??,htrp,False,0.96,388,1armmng,https://www.reddit.com/r/MachineLearning/comments/1armmng/d_openai_sora_video_gen_how/,199,1708022346.0,">Introducing Sora, our text-to-video model. Sora can generate videos up to a minute long while maintaining visual quality and adherence to the user’s prompt.




https://openai.com/sora

Research Notes
Sora is a diffusion model, which generates a video by starting off with one that looks like static noise and gradually transforms it by removing the noise over many steps.

Sora is capable of generating entire videos all at once or extending generated videos to make them longer. By giving the model foresight of many frames at a time, we’ve solved a challenging problem of making sure a subject stays the same even when it goes out of view temporarily.

Similar to GPT models, Sora uses a transformer architecture, unlocking superior scaling performance.

We represent videos and images as collections of smaller units of data called patches, each of which is akin to a token in GPT. By unifying how we represent data, we can train diffusion transformers on a wider range of visual data than was possible before, spanning different durations, resolutions and aspect ratios.

Sora builds on past research in DALL·E and GPT models. It uses the recaptioning technique from DALL·E 3, which involves generating highly descriptive captions for the visual training data. As a result, the model is able to follow the user’s text instructions in the generated video more faithfully.

In addition to being able to generate a video solely from text instructions, the model is able to take an existing still image and generate a video from it, animating the image’s contents with accuracy and attention to small detail. The model can also take an existing video and extend it or fill in missing frames. Learn more in our technical paper (coming later today).

Sora serves as a foundation for models that can understand and simulate the real world, a capability we believe will be an important milestone for achieving AGI.



Example Video: https://cdn.openai.com/sora/videos/cat-on-bed.mp4

Tech paper will be released later today. But brainstorming how?"
135,machinelearning,open-ai,comments,2019-04-18 18:25:35,[Discussion] When ML and Data Science are the death of a good company: A cautionary tale.,AlexSnakeKing,False,0.96,772,beoxx8,https://www.reddit.com/r/MachineLearning/comments/beoxx8/discussion_when_ml_and_data_science_are_the_death/,198,1555611935.0,"TD;LR: At Company A, Team X does advanced analytics using on-prem ERP tools and older programming languages. Their tools work very well and are designed based on very deep business and domain expertise. Team Y is a new and ambitious Data Science team that thinks they can replace Team X's tools with a bunch of R scripts and a custom built ML platform. Their models are simplistic, but more ""fashionable"" compared to the econometric models used by Team X, and team Y benefits from the ML/DS moniker so leadership is allowing Team Y to start a large scale overhaul of the analytics platform in question. Team Y doesn't have the experience for such a larger scale transformation, and is refusing to collaborate with team X. This project is very likely going to fail, and cause serious harm to the company as a whole financially and from a people perspective. I argue that this is not just because of bad leadership, but also because of various trends and mindsets in the DS community at large. 

---------------------------------------------------------------------------------------------
Update (Jump to below the line for the original story): 

Several people in the comments are pointing out that this just a management failure, not something due to ML/DS, and that you can replace DS with any buzz tech and the story will still be relevant. 

My response: 
Of course, any failure at an organization level is ultimately a management failure one way or the other. 
Moreover, it is also the case that ML/DS when done correctly, will always improve a company's bottom line. There is no scenario where the proper ML solution, delivered at a reasonable cost and in a timely fashion, will somehow hurt the company's bottom line.

My point is that in this case management is failing because of certain trends and practices that are specific to the ML/DS community, namely: 
* The idea that DS teams should operate independently of tech and business orgs -- too much autonomy for DS teams 
* The disregard for domain knowledge that seems prevalent nowadays  thanks to the ML hype, that DS can be generalists and someone with good enough ML chops can solve any business problem.  That wasn't the case when I first left academia for the industry in 2009  (back then nobody would even bother with a phone screen if you didn't have the right domain knowledge). 
* Over reliance on resources who check all the ML hype related boxes (knows Python, R, Tensorflow, Shiny, etc..., has the right Coursera certifications, has blogged on the topic, etc...), but are lacking in depth of  experience. DS interviews nowadays all seem to be: Can you tell me what a p-value is? What is elastic net regression? Show me how to fit a model in sklearn? How do you impute NAs in an R dataframe? Any smart person can look those up on Stackoverflow or Cross-Validated,.....Instead teams should be asking stuff like: why does portfolio optimization use QP not LP? How does a forecast influence a customer service level? When should a recommendation engine be content based and when should it use collaborative filtering? etc...

---------------------------------------------------------------------------------------------

*(This is a true story, happening to the company I currently work for. Names, domains, algorithms, and roles have been shuffled around to protect my anonymity)* 

Company A has been around for several decades. It is not the biggest name in its domain, but it is a well respected one. Risk analysis and portfolio optimization have been a core of Company A's business since the 90s. They have a large team of 30 or so analysts who perform those tasks on a daily basis. These analysts use ERP solutions implemented for them by one the big ERP companies (SAP, Teradata, Oracle, JD Edwards,...) or one of the major tech consulting companies (Deloitte, Accenture, PWC, Capgemini, etc...) in collaboration with their own in house engineering team. The tools used are embarrassingly old school: Classic RDBMS running on on-prem servers or maybe even on mainframes, code written in COBOL, Fortran, weird proprietary stuff like ABAP or SPSS.....you get the picture. But the models and analytic functions were pretty sophisticated, and surprisingly cutting edge compared to the published academic literature. Most of all, they fit well with the company's enterprise ecosystem, and were honed based on years of deep domain knowledge. 

They have a tech team of several engineers (poached from the aforementioned software and consulting companies) and product managers (who came from the experienced pools of analysts and managers who use the software, or poached from business rivals) maintaining and running this software. Their technology might be old school, but collectively, they know the domain and the company's overall architecture very, very well. They've guided the company through several large scale upgrades and migrations and they have a track record of delivering on time, without too much overhead. The few times they've stumbled, they knew how to pick themselves up very quickly. In fact within their industry niche, they have a reputation for their expertise, and have very good relations with the various vendors they've had to deal with. They were the launching pad of several successful ERP consulting careers. 

Interestingly, despite dealing on a daily basis with statistical modeling and optimization algorithms, none of the analysts, engineers, or product managers involved describe themselves as data scientists or machine learning experts. It is mostly a cultural thing: Their expertise predates the Data Science/ML hype that started circa 2010, and they got most of their chops using proprietary enterprise tools instead of the open source tools popular nowadays. A few of them have formal statistical training, but most of them came from engineering or domain backgrounds and learned stats on the fly while doing their job. Call this team ""Team X"". 

Sometime around the mid 2010s, Company A started having some serious anxiety issues: Although still doing very well for a company its size, overall economic and demographic trends were shrinking its customer base, and a couple of so called disruptors came up with a new app and business model that started seriously eating into their revenue. A suitable reaction to appease shareholders and Wall Street was necessary. The company already had a decent website and a pretty snazzy app, what more could be done? Leadership decided that it was high time that AI and ML become a core part of the company's business. An ambitious Manager, with no science or engineering background, but who had very briefly toyed with a recommender system a couple of years back, was chosen to build a data science team, call it team ""Y"" (he had a bachelor's in history from the local state college and worked for several years in the company's marketing org). Team ""Y"" consists mostly of internal hires who decided they wanted to be data scientists and completed a Coursera certification or a Galvanize boot camp, before being brought on to the team, along with a few of fresh Ph.D or M.Sc holders who didn't like academia and wanted to try their hand at an industry role. All of them were very bright people, they could write great Medium blog posts and give inspiring TED talks, but collectively they had very little real world industry experience. 

As is the fashion nowadays, this group was made part of a data science org that reported directly to the CEO and Board, bypassing the CIO and any tech or business VPs, since Company A wanted to claim the monikers ""data driven"" and ""AI powered"" in their upcoming shareholder meetings. In 3 or 4 years of existence, team Y produced a few Python and R scripts. Their architectural experience  consisted almost entirely in connecting Flask to S3 buckets or Redshift tables, with a couple of the more resourceful ones learning how to plug their models into Tableau or how to spin up a Kuberneties pod.  But they needn't worry: The aforementioned manager, who was now a director (and was also doing an online Masters to make up for his qualifications gap and bolster his chances of becoming VP soon - at least he now understands what L1 regularization is), was a master at playing corporate politics and self-promotion. No matter how few actionable insights team Y produced or how little code they deployed to production, he always had their back and made sure they had ample funding. In fact he now had grandiose plans for setting up an all-purpose machine learning platform that can be used to solve all of the company's data problems. 

A couple of sharp minded members of team Y, upon googling their industry name along with the word ""data science"", realized that risk analysis was a prime candidate for being solved with Bayesian models, and there was already a nifty R package for doing just that, whose tutorial they went through on R-Bloggers.com. One of them had even submitted a Bayesian classifier Kernel for a competition on Kaggle (he was 203rd on the leaderboard), and was eager to put his new-found expertise to use on a real world problem. They pitched the idea to their director, who saw a perfect use case for his upcoming ML platform. They started work on it immediately, without bothering to check whether anybody at Company A was already doing risk analysis. Since their org was independent, they didn't really need to check with anybody else before they got funding for their initiative. Although it was basically a Naive Bayes classifier, the term ML was added to the project tile, to impress the board. 

As they progressed with their work however, tensions started to build. They had asked the data warehousing and CA analytics teams to build pipelines for them, and word eventually got out to team X about their project. Team X was initially thrilled: They offered to collaborate whole heartedly, and would have loved to add an ML based feather to their already impressive cap. The product owners and analysts were totally onboard as well: They saw a chance to get in on the whole Data Science hype that they kept hearing about. But through some weird mix of arrogance and insecurity, team Y refused to collaborate with them or share any of their long term goals with them, even as they went to other parts of the company giving brown bag presentations and tutorials on the new model they created. 

Team X got resentful: from what they saw of team Y's model, their approach was hopelessly naive and had little chances of scaling or being sustainable in production, and they knew exactly how to help with that. Deploying the model to production would have taken them a few days, given how comfortable they were with DevOps and continuous delivery (team Y had taken several months to figure out how to deploy a simple R script to production). And despite how old school their own tech was, team X were crafty enough to be able to plug it in to their existing architecture. Moreover, the output of the model was such that it didn't take into account how the business will consume it or how it was going to be fed to downstream systems, and the product owners could have gone a long way in making the model more amenable to adoption by the business stakeholders. But team Y wouldn't listen, and their leads brushed off any attempts at communication, let alone collaboration. The vibe that team Y was giving off was ""We are the cutting edge ML team, you guys are the legacy server grunts. We don't need your opinion."", and they seemed to have a complete disregard for domain knowledge, or worse, they thought that all that domain knowledge consisted of was being able to grasp the definitions of a few business metrics. 

Team X got frustrated and tried to express their concerns to leadership. But despite owning a vital link in Company A's business process, they were only \~50 people in a large 1000 strong technology and operations org, and they were several layers removed from the C-suite, so it was impossible for them to get their voices heard. 

Meanwhile, the unstoppable director was doing what he did best: Playing corporate politics. Despite how little his team had actually delivered, he had convinced the board that all analysis and optimization tasks should now be migrated to his yet to be delivered ML platform. Since most leaders now knew that there was overlap between team Y and team X's objectives, his pitch was no longer that team Y was going to create a new insight, but that they were going to replace (or modernize) the legacy statistics based on-prem tools with more accurate cloud based ML tools. Never mind that there was no support in the academic literature for the idea that Naive Bayes works better than the Econometric approaches used by team X, let alone the additional wacky idea that Bayesian Optimization would definitely outperform the QP solvers that were running in production. 

Unbeknownst to team X, the original Bayesian risk analysis project has now grown into a multimillion dollar major overhaul initiative, which included the eventual replacement of all of the tools and functions supported by team X along with the necessary migration to the cloud. The CIO and a couple of business VPs are on now board, and tech leadership is treating it as a done deal.

An outside vendor, a startup who nobody had heard of, was contracted to help build the platform, since team Y has no engineering skills. The choice was deliberate, as calling on any of the established consulting or software companies would have eventually led leadership to the conclusion that team X was better suited for a transformation on this scale than team Y. 

Team Y has no experience with any major ERP deployments, and no domain knowledge, yet they are being tasked with fundamentally changing the business process that is at the core of Company A's business. Their models actually perform worse than those deployed by team X, and their architecture is hopelessly simplistic, compared to what is necessary for running such a solution in production. 

Ironically, using Bayesian thinking and based on all the evidence, the likelihood that team Y succeeds is close to 0%. 

At best, the project is going to end up being a write off of 50 million dollars or more. Once the !@#$!@# hits the fan, a couple of executive heads are going to role, and dozens of people will get laid off.

At worst, given how vital risk analysis and portfolio optimization is to Company A's revenue stream, the failure will eventually sink the whole company. It probably won't go bankrupt, but it will lose a significant portion of its business and work force. Failed ERP implementations can and do sink large companies: Just see what happened to National Grid US, SuperValu or Target Canada. 

One might argue that this is more about corporate disfunction and bad leadership than about data science and AI. 

But I disagree. I think the core driver of this debacle is indeed the blind faith in Data Scientists, ML models and the promise of AI, and the overall culture of hype and self promotion that is very common among the ML crowd. 

We haven't seen the end of this story: I sincerely hope that this ends well for the sake of my colleagues and all involved. Company A is a good company, and both its customers and its employees deserver better. But the chances of that happening are negligible given all the information available, and this failure will hit my company hard. "
136,machinelearning,open-ai,comments,2023-05-07 23:26:29,"[D] ClosedAI license, open-source license which restricts only OpenAI, Microsoft, Google, and Meta from commercial use",wemsyn,False,0.8,343,13b6miy,https://www.reddit.com/r/MachineLearning/comments/13b6miy/d_closedai_license_opensource_license_which/,191,1683501989.0,"After reading [this article](https://www.semianalysis.com/p/google-we-have-no-moat-and-neither), I realized it might be nice if the open-source AI community could exclude ""closed AI"" players from taking advantage of community-generated models and datasets. I was wondering if it would be possible to write a license that is completely permissive (like Apache 2.0 or MIT), except to certain companies, which are completely barred from using the software in any context.

Maybe this could be called the ""ClosedAI"" license. I'm not any sort of legal expert so I have no idea how best to write this license such that it protects model weights and derivations thereof.

I prompted ChatGPT for an example license and this is what it gave me:

    <PROJECT NAME> ClosedAI License v1.0
    
    Permission is hereby granted, free of charge, to any person or organization obtaining a copy of this software and associated documentation files (the ""Software""), to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, subject to the following conditions:
    
    1. The above copyright notice and this license notice shall be included in all copies or substantial portions of the Software.
    
    2. The Software and any derivative works thereof may not be used, in whole or in part, by or on behalf of OpenAI Inc., Google LLC, or Microsoft Corporation (collectively, the ""Prohibited Entities"") in any capacity, including but not limited to training, inference, or serving of neural network models, or any other usage of the Software or neural network weights generated by the Software.
    
    3. Any attempt by the Prohibited Entities to use the Software or neural network weights generated by the Software is a material breach of this license.
    
    THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

No idea if this is valid or not. Looking for advice.

&#x200B;

**Edit:** Thanks for the input. Removed non-commercial clause (whoops, proofread what ChatGPT gives you). Also removed Meta from the excluded companies list due to popular demand."
137,machinelearning,open-ai,comments,2018-10-23 22:44:52,[N] NIPS keeps it name unchanged,baylearn,False,0.89,132,9qtzck,https://www.reddit.com/r/MachineLearning/comments/9qtzck/n_nips_keeps_it_name_unchanged/,185,1540334692.0,"Update Edit: They have released some data and anecdotal quotes in a page [NIPS Name Change](https://nips.cc/public/NameChange).

from https://nips.cc/Conferences/2018/Press

**NIPS Foundation Board Concludes Name Change Deliberations**

*Conference name will not change; continued focus on diversity and inclusivity initiatives*

Montreal, October 22 2018 -- The Board of Trustees of the Neural Information Processing Systems Foundation has decided not to change the name of their main conference. The Board has been engaged in ongoing discussions concerning the name of the Neural Information Processing Systems, or NIPS, conference. The current acronym, NIPS, has undesired connotations. The Name-of-NIPS Action Team was formed, in order to better understand the prevailing attitudes about the name. The team conducted polls of the NIPS community requesting submissions of alternative names, rating the existing and alternative names, and soliciting additional comments. The polling conducted by the the Team did not yield a clear consensus, and no significantly better alternative name emerged.

Aware of the need for a more substantive approach to diversity and inclusivity that the call for a name change points to, this year NIPS has increased its focus on diversity and inclusivity initiatives. The NIPS code of conduct was implemented, two Inclusion and Diversity chairs were appointed to the organizing committee and, having resolved a longstanding liability issue, the NIPS Foundation is introducing childcare support for NIPS 2018 Conference in Montreal. In addition, NIPS has welcomed the formation of several co-located workshops focused on diversity in the field. Longstanding supporters of the co-located Women In Machine Learning workshop (WiML) NIPS is extending support to additional groups, including Black in AI (BAI), Queer in AI@NIPS, Latinx in AI (LXAI), and Jews in ML (JIML).

Dr. Terrence Sejnowski, president of the NIPS Foundation, says that even though the data on the name change from the survey did not point to one concerted opinion from the NIPS community, focusing on substantive changes will ensure that the NIPS conference is representative of those in its community. “As the NIPS conference continues to grow and evolve, it is important that everyone in our community feels that NIPS is a welcoming and open place to exchange ideas. I’m encouraged by the meaningful changes we’ve made to the conference, and more changes will be made based on further feedback.”

*About The Conference On Neural Information Processing Systems (NIPS)*

Over the past 32 years, the Neural Information Processing Systems (NIPS) conference has been held at various locations around the world.The conference is organized by the NIPS Foundation, a non-profit corporation whose purpose is to foster insights into solving difficult problems by bringing together researchers from biological, psychological, technological, mathematical, and theoretical areas of science and engineering.

In addition to the NIPS Conference, the NIPS Foundation manages a continuing series of professional meetings including the International Conference on Machine Learning (ICML) and the International Conference on Learning Representations (ICLR)."
138,machinelearning,open-ai,comments,2023-04-19 15:29:34,"[N] Stability AI announce their open-source language model, StableLM",Philpax,False,0.99,830,12rxtjj,https://www.reddit.com/r/MachineLearning/comments/12rxtjj/n_stability_ai_announce_their_opensource_language/,182,1681918174.0,"Repo: https://github.com/stability-AI/stableLM/

Excerpt from the Discord announcement:

> We’re incredibly excited to announce the launch of StableLM-Alpha; a nice and sparkly newly released open-sourced language model! Developers, researchers, and curious hobbyists alike can freely inspect, use, and adapt our StableLM base models for commercial and or research purposes! *Excited yet?*
>
> Let’s talk about parameters! The Alpha version of the model is available in 3 billion and 7 billion parameters, with 15 billion to 65 billion parameter models to follow. StableLM is trained on a new experimental dataset built on “The Pile” from EleutherAI (a 825GiB diverse, open source language modeling data set that consists of 22 smaller, high quality datasets combined together!) The richness of this dataset gives StableLM surprisingly high performance in conversational and coding tasks, despite its small size of 3-7 billion parameters."
139,machinelearning,open-ai,comments,2023-11-23 00:14:50,[D] Exclusive: Sam Altman's ouster at OpenAI was precipitated by letter to board about AI breakthrough,blabboy,False,0.83,375,181o1q4,https://www.reddit.com/r/MachineLearning/comments/181o1q4/d_exclusive_sam_altmans_ouster_at_openai_was/,180,1700698490.0,"According to one of the sources, long-time executive Mira Murati told employees on Wednesday that a letter about the AI breakthrough called Q* (pronounced Q-Star), precipitated the board's actions.

The maker of ChatGPT had made progress on Q*, which some internally believe could be a breakthrough in the startup's search for superintelligence, also known as artificial general intelligence (AGI), one of the people told Reuters. OpenAI defines AGI as AI systems that are smarter than humans.

https://www.reuters.com/technology/sam-altmans-ouster-openai-was-precipitated-by-letter-board-about-ai-breakthrough-2023-11-22/"
140,machinelearning,open-ai,comments,2023-11-20 08:50:54,"[N] Sam Altman and Greg Brockman, together with colleagues, will join Microsoft to lead new advanced AI research team",Civil_Collection7267,False,0.96,411,17zk6zy,https://www.reddit.com/r/MachineLearning/comments/17zk6zy/n_sam_altman_and_greg_brockman_together_with/,178,1700470254.0,"Source: [https://blogs.microsoft.com/blog/2023/11/19/a-statement-from-microsoft-chairman-and-ceo-satya-nadella/](https://blogs.microsoft.com/blog/2023/11/19/a-statement-from-microsoft-chairman-and-ceo-satya-nadella/)

>We remain committed to our partnership with OpenAI and have confidence in our product roadmap, our ability to continue to innovate with everything we announced at Microsoft Ignite, and in continuing to support our customers and partners. We look forward to getting to know Emmett Shear and OAI’s new leadership team and working with them. And we’re extremely excited to share the news that Sam Altman and Greg Brockman, together with colleagues, will be joining Microsoft to lead a new advanced AI research team. We look forward to moving quickly to provide them with the resources needed for their success.

News article covering the situation: [https://www.theverge.com/2023/11/20/23968829/microsoft-hires-sam-altman-greg-brockman-employees-openai](https://www.theverge.com/2023/11/20/23968829/microsoft-hires-sam-altman-greg-brockman-employees-openai)

>Altman’s Microsoft hiring comes just hours after negotiations with OpenAI’s board failed to bring him back as OpenAI CEO. Instead, former Twitch CEO and co-founder Emmett Shear has been named as interim CEO.  
>  
>Altman had been negotiating to return as OpenAI CEO, but OpenAI’s four-person board refused to step down and let him return."
141,machinelearning,open-ai,comments,2018-08-06 17:08:04,[N] OpenAI Five Benchmark: Results,luiscosio,False,0.95,226,9533g8,https://blog.openai.com/openai-five-benchmark-results/,179,1533575284.0,
142,machinelearning,open-ai,comments,2023-09-21 15:01:28,[N] OpenAI's new language model gpt-3.5-turbo-instruct can defeat chess engine Fairy-Stockfish 14 at level 5,Wiskkey,False,0.92,112,16oi6fb,https://www.reddit.com/r/MachineLearning/comments/16oi6fb/n_openais_new_language_model_gpt35turboinstruct/,178,1695308488.0,"[This Twitter thread](https://twitter.com/GrantSlatton/status/1703913578036904431) ([Nitter alternative](https://nitter.net/GrantSlatton/status/1703913578036904431) for those who aren't logged into Twitter and want to see the full thread) claims that [OpenAI's new language model gpt-3.5-turbo-instruct](https://analyticsindiamag.com/openai-releases-gpt-3-5-turbo-instruct/) can ""readily"" beat Lichess Stockfish level 4 ([Lichess Stockfish level and its rating](https://lichess.org/@/MagoGG/blog/stockfish-level-and-its-rating/CvL5k0jL)) and has a chess rating of ""around 1800 Elo."" [This tweet](https://twitter.com/nabeelqu/status/1703961405999759638) shows the style of prompts that are being used to get these results with the new language model.

I used website parrotchess\[dot\]com (discovered [here](https://twitter.com/OwariDa/status/1704179448013070560)) to play multiple games of chess purportedly pitting this new language model vs. various levels at website Lichess, which supposedly uses Fairy-Stockfish 14 according to the Lichess user interface. My current results for all completed games: The language model is 5-0 vs. Fairy-Stockfish 14 level 5 ([game 1](https://lichess.org/eGSWJtNq), [game 2](https://lichess.org/pN7K9bdS), [game 3](https://lichess.org/aK4jQvdo), [game 4](https://lichess.org/S9SGg8YI), [game 5](https://lichess.org/OqzdkDhE)), and 2-5 vs. Fairy-Stockfish 14 level 6 ([game 1](https://lichess.org/zP68C6H4), [game 2](https://lichess.org/4XKUIDh1), [game 3](https://lichess.org/1zTasRRp), [game 4](https://lichess.org/lH1EMqJQ), [game 5](https://lichess.org/mdFlTbMn), [game 6](https://lichess.org/HqmELNhw), [game 7](https://lichess.org/inWVs05Q)). Not included in the tally are games that I had to abort because the parrotchess user interface stalled (5 instances), because I accidentally copied a move incorrectly in the parrotchess user interface (numerous instances), or because the parrotchess user interface doesn't allow the promotion of a pawn to anything other than queen (1 instance). **Update: There could have been up to 5 additional losses - the number of times the parrotchess user interface stalled - that would have been recorded in this tally if** [this language model resignation bug](https://twitter.com/OwariDa/status/1705894692603269503) **hadn't been present. Also, the quality of play of some online chess bots can perhaps vary depending on the speed of the user's hardware.**

The following is a screenshot from parrotchess showing the end state of the first game vs. Fairy-Stockfish 14 level 5:

https://preview.redd.it/4ahi32xgjmpb1.jpg?width=432&format=pjpg&auto=webp&s=7fbb68371ca4257bed15ab2828fab58047f194a4

The game results in this paragraph are from using parrotchess after the forementioned resignation bug was fixed. The language model is 0-1 vs. Fairy-Stockfish level 7 ([game 1](https://lichess.org/Se3t7syX)), and 0-1 vs. Fairy-Stockfish 14 level 8 ([game 1](https://lichess.org/j3W2OwrP)).

There is [one known scenario](https://twitter.com/OwariDa/status/1706823943305167077) ([Nitter alternative](https://nitter.net/OwariDa/status/1706823943305167077)) in which the new language model purportedly generated an illegal move using language model sampling temperature of 0. Previous purported illegal moves that the parrotchess developer examined [turned out](https://twitter.com/OwariDa/status/1706765203130515642) ([Nitter alternative](https://nitter.net/OwariDa/status/1706765203130515642)) to be due to parrotchess bugs.

There are several other ways to play chess against the new language model if you have access to the OpenAI API. The first way is to use the OpenAI Playground as shown in [this video](https://www.youtube.com/watch?v=CReHXhmMprg). The second way is chess web app gptchess\[dot\]vercel\[dot\]app (discovered in [this Twitter thread](https://twitter.com/willdepue/status/1703974001717154191) / [Nitter thread](https://nitter.net/willdepue/status/1703974001717154191)). Third, another person modified that chess web app to additionally allow various levels of the Stockfish chess engine to autoplay, resulting in chess web app chessgpt-stockfish\[dot\]vercel\[dot\]app (discovered in [this tweet](https://twitter.com/paul_cal/status/1704466755110793455)).

Results from other people:

a) Results from hundreds of games in blog post [Debunking the Chessboard: Confronting GPTs Against Chess Engines to Estimate Elo Ratings and Assess Legal Move Abilities](https://blog.mathieuacher.com/GPTsChessEloRatingLegalMoves/).

b) Results from 150 games: [GPT-3.5-instruct beats GPT-4 at chess and is a \~1800 ELO chess player. Results of 150 games of GPT-3.5 vs stockfish and 30 of GPT-3.5 vs GPT-4](https://www.reddit.com/r/MachineLearning/comments/16q81fh/d_gpt35instruct_beats_gpt4_at_chess_and_is_a_1800/). [Post #2](https://www.reddit.com/r/chess/comments/16q8a3b/new_openai_model_gpt35instruct_is_a_1800_elo/). The developer later noted that due to bugs the legal move rate [was](https://twitter.com/a_karvonen/status/1706057268305809632) actually above 99.9%. It should also be noted that these results [didn't use](https://www.reddit.com/r/chess/comments/16q8a3b/comment/k1wgg0j/) a language model sampling temperature of 0, which I believe could have induced illegal moves.

c) Chess bot [gpt35-turbo-instruct](https://lichess.org/@/gpt35-turbo-instruct/all) at website Lichess.

d) Chess bot [konaz](https://lichess.org/@/konaz/all) at website Lichess.

From blog post [Playing chess with large language models](https://nicholas.carlini.com/writing/2023/chess-llm.html):

>Computers have been better than humans at chess for at least the last 25 years. And for the past five years, deep learning models have been better than the best humans. But until this week, in order to be good at chess, a machine learning model had to be explicitly designed to play games: it had to be told explicitly that there was an 8x8 board, that there were different pieces, how each of them moved, and what the goal of the game was. Then it had to be trained with reinforcement learning agaist itself. And then it would win.  
>  
>This all changed on Monday, when OpenAI released GPT-3.5-turbo-instruct, an instruction-tuned language model that was designed to just write English text, but that people on the internet quickly discovered can play chess at, roughly, the level of skilled human players.

Post [Chess as a case study in hidden capabilities in ChatGPT](https://www.lesswrong.com/posts/F6vH6fr8ngo7csDdf/chess-as-a-case-study-in-hidden-capabilities-in-chatgpt) from last month covers a different prompting style used for the older chat-based GPT 3.5 Turbo language model. If I recall correctly from my tests with ChatGPT-3.5, using that prompt style with the older language model can defeat Stockfish level 2 at Lichess, but I haven't been successful in using it to beat Stockfish level 3. In my tests, both the quality of play and frequency of illegal attempted moves seems to be better with the new prompt style with the new language model compared to the older prompt style with the older language model.

Related article: [Large Language Model: world models or surface statistics?](https://thegradient.pub/othello/)

P.S. Since some people claim that language model gpt-3.5-turbo-instruct is always playing moves memorized from the training dataset, I searched for data on the uniqueness of chess positions. From [this video](https://youtu.be/DpXy041BIlA?t=2225), we see that for a certain game dataset there were 763,331,945 chess positions encountered in an unknown number of games without removing duplicate chess positions, 597,725,848 different chess positions reached, and 582,337,984 different chess positions that were reached only once. Therefore, for that game dataset the probability that a chess position in a game was reached only once is 582337984 / 763331945 = 76.3%. For the larger dataset [cited](https://youtu.be/DpXy041BIlA?t=2187) in that video, there are approximately (506,000,000 - 200,000) games in the dataset (per [this paper](http://tom7.org/chess/survival.pdf)), and 21,553,382,902 different game positions encountered. Each game in the larger dataset added a mean of approximately 21,553,382,902 / (506,000,000 - 200,000) = 42.6 different chess positions to the dataset. For [this different dataset](https://lichess.org/blog/Vs0xMTAAAD4We4Ey/opening-explorer) of \~12 million games, \~390 million different chess positions were encountered. Each game in this different dataset added a mean of approximately (390 million / 12 million) = 32.5 different chess positions to the dataset. From the aforementioned numbers, we can conclude that a strategy of playing only moves memorized from a game dataset would fare poorly because there are not rarely new chess games that have chess positions that are not present in the game dataset."
143,machinelearning,open-ai,comments,2023-04-15 17:14:58,[P] OpenAssistant - The world's largest open-source replication of ChatGPT,ykilcher,False,0.97,1267,12nbixk,https://www.reddit.com/r/MachineLearning/comments/12nbixk/p_openassistant_the_worlds_largest_opensource/,175,1681578898.0,"We’re excited to announce the release of OpenAssistant.

The future of AI development depends heavily on high quality datasets and models being made publicly available, and that’s exactly what this project does.

Watch the annoucement video:

[https://youtu.be/ddG2fM9i4Kk](https://youtu.be/ddG2fM9i4Kk)

&#x200B;

Our team has worked tirelessly over the past several months collecting large amounts of text-based input and feedback to create an incredibly diverse and unique dataset designed specifically for training language models or other AI applications.

With over 600k human-generated data points covering a wide range of topics and styles of writing, our dataset will be an invaluable tool for any developer looking to create state-of-the-art instruction models!

To make things even better, we are making this entire dataset free and accessible to all who wish to use it. Check it out today at our HF org: OpenAssistant

On top of that, we've trained very powerful models that you can try right now at: [open-assistant.io/chat](https://open-assistant.io/chat) !"
144,machinelearning,open-ai,comments,2019-10-01 21:36:40,[N] The register did a full exposé on Siraj Raval. Testimonials from his former students and people he stole code from.,kreyio3i,False,0.96,543,dc0a5f,https://www.reddit.com/r/MachineLearning/comments/dc0a5f/n_the_register_did_a_full_exposé_on_siraj_raval/,174,1569965800.0,"https://www.theregister.co.uk/2019/09/27/youtube_ai_star/

I found this comment on the article hilarious

> Why aren't you writing these articles slamming universities?
> I am currently a software engineer in a data science team producing software that yields millions of dollars in revenue for our company. I did my undergraduate in physics and my professors encouraged us to view MIT Open Courseware lectures alongside their subpar teaching. I learned more from those online lectures than I ever could in those expensive classes. I paid tens of thousands of dollars for that education. I decided that it was better bang for my buck to learn data science than in would every be to continue on in the weak education system we have globally. I paid 30 dollars month, for a year, to pick up the skills to get into data science. I landed a great job, paying a great salary because I took advantage of these types of opportunities. If you hate on this guy for collecting code that is open to the public and creating huge value from it, then you can go get your masters degree for $50-100k and work for someone who took advantage of these types of offerings. Anyone who hates on this is part of an old school, suppressive system that will continue to hold talented people down. Buck the system and keep learning!

Edit:

Btw, the Journalist, Katyanna Quach,  is looking for people who have had direct experiences with Siraj. If you have, you can contact directly her directly here

https://www.theregister.co.uk/Author/Email/Katyanna-Quach

here

https://twitter.com/katyanna_q

or send tips here

corrections@theregister.co.uk"
145,machinelearning,open-ai,comments,2021-06-01 17:40:23,"[R] Chinese AI lab challenges Google, OpenAI with a model of 1.75 trillion parameters",liqui_date_me,False,0.89,360,npzqks,https://www.reddit.com/r/MachineLearning/comments/npzqks/r_chinese_ai_lab_challenges_google_openai_with_a/,167,1622569223.0,"Link here: https://en.pingwest.com/a/8693

TL;DR The Beijing Academy of Artificial Intelligence, styled as BAAI and known in Chinese as 北京智源人工智能研究院, launched the latest version of Wudao 悟道, a pre-trained deep learning model that the lab dubbed as “China’s first,” and “the world’s largest ever,” with a whopping 1.75 trillion parameters.

And the corresponding twitter thread: https://twitter.com/DavidSHolz/status/1399775371323580417

What's interesting here is BAAI is funded in part by the China’s Ministry of Science and Technology, which is China's equivalent of the NSF. The equivalent of this in the US would be for the NSF allocating billions of dollars a year *only to train models*."
146,machinelearning,open-ai,comments,2019-04-04 21:56:06,[N] Apple hires Ian Goodfellow,milaworld,False,0.94,560,b9iyi6,https://www.reddit.com/r/MachineLearning/comments/b9iyi6/n_apple_hires_ian_goodfellow/,168,1554414966.0,"*According to CNBC [article](https://www.cnbc.com/2019/04/04/apple-hires-ai-expert-ian-goodfellow-from-google.html):*

One of Google’s top A.I. people just joined Apple

- Ian Goodfellow joined Apple’s Special Projects Group as a director of machine learning last month.

- Prior to Google, he worked at OpenAI, an AI research consortium originally funded by Elon Musk and other tech notables.

- He is the father of an AI approach known as general adversarial networks, or GANs, and his research is widely cited in AI literature.

Ian Goodfellow, one of the top minds in artificial intelligence at Google, has joined Apple in a director role.

The hire comes as Apple increasingly strives to tap AI to boost its software and hardware. Last year Apple hired John Giannandrea, head of AI and search at Google, to supervise AI strategy.


Goodfellow updated his LinkedIn profile on Thursday to acknowledge that he moved from Google to Apple in March. He said he’s a director of machine learning in the Special Projects Group. In addition to developing AI for features like FaceID and Siri, Apple also has been working on autonomous driving technology. Recently the autonomous group had a round of layoffs.

A Google spokesperson confirmed his departure. Apple declined to comment. Goodfellow didn’t respond to a request for comment.

https://www.cnbc.com/2019/04/04/apple-hires-ai-expert-ian-goodfellow-from-google.html"
147,machinelearning,open-ai,comments,2019-07-17 15:27:34,"AMA: We are Noam Brown and Tuomas Sandholm, creators of the Carnegie Mellon / Facebook multiplayer poker bot Pluribus. We're also joined by a few of the pros Pluribus played against. Ask us anything!",NoamBrown,False,0.97,285,ceece3,https://www.reddit.com/r/MachineLearning/comments/ceece3/ama_we_are_noam_brown_and_tuomas_sandholm/,167,1563377254.0,"Hi all! We are [Noam Brown](http://www.cs.cmu.edu/~noamb/) and Professor [Tuomas Sandholm](http://www.cs.cmu.edu/~sandholm/). We recently developed the poker AI [Pluribus](https://science.sciencemag.org/content/early/2019/07/10/science.aay2400), which has proven capable of defeating elite human professionals in six-player no-limit Texas hold'em poker, the most widely-played poker format in the world. Poker was a long-standing challenge problem for AI due to the importance of hidden information, and Pluribus is the first AI breakthrough on a major benchmark game that has more than two players or two teams. Pluribus was trained using the equivalent of less than $150 worth of compute and runs in real time on 2 CPUs. You can read our blog post on this result [here](https://ai.facebook.com/blog/pluribus-first-ai-to-beat-pros-in-6-player-poker/).

We are happy to answer your questions about Pluribus, the experiment, AI, imperfect-information games, Carnegie Mellon, Facebook AI Research, or any other questions you might have! A few of the pros Pluribus played against may also jump in if anyone has questions about what it's like playing against the bot, participating in the experiment, or playing professional poker.

We are opening this thread to questions now and will be here starting at 10AM ET on Friday, July 19th to answer them.

**EDIT:** Thanks for the questions everyone! We're going to call it quits now. If you have any additional questions though, feel free to post them and we might get to them in the future."
148,machinelearning,open-ai,comments,2021-02-15 07:15:23,[P] BurnedPapers - where unreproducible papers come to live,ContributionSecure14,False,0.85,429,lk8ad0,https://www.reddit.com/r/MachineLearning/comments/lk8ad0/p_burnedpapers_where_unreproducible_papers_come/,163,1613373323.0,"EDIT: Some people suggested that the original name seemed antagonistic towards authors and I agree. So the new name is now **PapersWithoutCode**. (Credit to /u/deep_ai for suggesting the name)  


Submission link: [www.paperswithoutcode.com](https://www.paperswithoutcode.com)  
Results: [papers.paperswithoutcode.com](https://papers.paperswithoutcode.com)  
Context: [https://www.reddit.com/r/MachineLearning/comments/lk03ef/d\_list\_of\_unreproducible\_papers/](https://www.reddit.com/r/MachineLearning/comments/lk03ef/d_list_of_unreproducible_papers/)

I posted about not being able to reproduce a paper today and apparently it struck a chord with a lot of people who have faced the issue.

I'm not sure if this is the best or worst idea ever but I figured it would be useful to collect a list of papers which people have tried to reproduce and failed. This will give the authors a chance to either release their code, provide pointers or rescind the paper. My hope is that this incentivizes a healthier ML research culture around not publishing unreproducible work.

I realize that this system can be abused so in order to ensure that the reputation of the authors is not unnecessarily tarnished, the authors will be given a week to respond and their response will be reflected in the spreadsheet. It would be great if this can morph into a post-acceptance OpenReview kind of thing where the authors can have a dialogue with people trying to build off their work.

This is ultimately an experiment so I'm open to constructive feedback that best serves our community.  


&#x200B;"
149,machinelearning,open-ai,comments,2022-12-07 21:28:22,"[D] We're the Meta AI research team behind CICERO, the first AI agent to achieve human-level performance in the game Diplomacy. We’ll be answering your questions on December 8th starting at 10am PT. Ask us anything!",MetaAI_Official,False,0.93,661,zfeh67,https://www.reddit.com/r/MachineLearning/comments/zfeh67/d_were_the_meta_ai_research_team_behind_cicero/,163,1670448502.0,"**EDIT 11:58am PT:** Thanks for all the great questions, we stayed an almost an hour longer than originally planned to try to get through as many as possible — but we’re signing off now! We had a great time and thanks for all thoughtful questions!

PROOF: [https://i.redd.it/8skvttie6j4a1.png](https://i.redd.it/8skvttie6j4a1.png)

We’re part of the research team behind CICERO, Meta AI’s latest research in cooperative AI. CICERO is the first AI agent to achieve human-level performance in the game Diplomacy. Diplomacy is a complex strategy game involving both cooperation and competition that emphasizes natural language negotiation between seven players.   Over the course of 40 two-hour games with 82 human players, CICERO achieved more than double the average score of other players, ranked in the top 10% of players who played more than one game, and placed 2nd out of 19 participants who played at least 5 games.   Here are some highlights from our recent announcement:

* **NLP x RL/Planning:** CICERO combines techniques in NLP and RL/planning, by coupling a controllable dialogue module with a strategic reasoning engine. 
* **Controlling dialogue via plans:** In addition to being grounded in the game state and dialogue history, CICERO’s dialogue model was trained to be controllable via a set of intents or plans in the game. This allows CICERO to use language intentionally and to move beyond imitation learning by conditioning on plans selected by the strategic reasoning engine.
* **Selecting plans:** CICERO uses a strategic reasoning module to make plans (and select intents) in the game. This module runs a planning algorithm which takes into account the game state, the dialogue, and the strength/likelihood of various actions. Plans are recomputed every time CICERO sends/receives a message.
* **Filtering messages:** We built an ensemble of classifiers to detect low quality messages, like messages contradicting the game state/dialogue history or messages which have low strategic value. We used this ensemble to aggressively filter CICERO’s messages. 
* **Human-like play:** Over the course of 72 hours of play – which involved sending 5,277 messages – CICERO was not detected as an AI agent.

You can check out some of our materials and open-sourced artifacts here: 

* [Research paper](https://www.science.org/doi/10.1126/science.ade9097)
* [Project overview](https://ai.facebook.com/research/cicero/)
* [Diplomacy gameplay page](https://ai.facebook.com/research/cicero/diplomacy/)
* [Github repo](https://github.com/facebookresearch/diplomacy_cicero)
* [Our latest blog post](https://ai.facebook.com/blog/cicero-ai-negotiates-persuades-and-cooperates-with-people/)

Joining us today for the AMA are:

* Andrew Goff (AG), 3x Diplomacy World Champion
* Alexander Miller (AM), Research Engineering Manager
* Noam Brown (NB), Research Scientist [(u/NoamBrown)](https://www.reddit.com/user/NoamBrown/)
* Mike Lewis (ML), Research Scientist [(u/mikelewis0)](https://www.reddit.com/user/mikelewis0/)
* David Wu (DW), Research Engineer [(u/icosaplex)](https://www.reddit.com/user/icosaplex/)
* Emily Dinan (ED), Research Engineer
* Anton Bakhtin (AB), Research Engineer
* Adam Lerer (AL), Research Engineer
* Jonathan Gray (JG), Research Engineer
* Colin Flaherty (CF), Research Engineer [(u/c-flaherty)](https://www.reddit.com/user/c-flaherty)

We’ll be here on December 8, 2022 @ 10:00AM PT - 11:00AM PT."
150,machinelearning,open-ai,comments,2023-05-22 16:15:53,[R] GPT-4 didn't really score 90th percentile on the bar exam,salamenzon,False,0.97,843,13ovc04,https://www.reddit.com/r/MachineLearning/comments/13ovc04/r_gpt4_didnt_really_score_90th_percentile_on_the/,160,1684772153.0,"According to [this article](https://papers.ssrn.com/sol3/papers.cfm?abstract_id=4441311), OpenAI's claim that it scored 90th percentile on the UBE appears to be based on approximate conversions from estimates of February administrations of the Illinois Bar Exam, which ""are heavily skewed towards repeat test-takers who failed the July administration and score significantly lower than the general test-taking population.""

Compared to July test-takers, GPT-4's UBE score would be 68th percentile, including \~48th on essays. Compared to first-time test takers, GPT-4's UBE score is estimated to be \~63rd percentile, including \~42nd on essays. Compared to those who actually passed, its UBE score would be \~48th percentile, including \~15th percentile on essays."
151,machinelearning,open-ai,comments,2020-05-25 16:10:10,[D] Uber AI's Contributions,EmergenceIsMagic,False,0.95,393,gqdq2o,https://www.reddit.com/r/MachineLearning/comments/gqdq2o/d_uber_ais_contributions/,160,1590423010.0,"As we learned last week, [Uber decided to wind down their AI lab](https://www.reddit.com/r/MachineLearning/comments/gm80x2/n_uber_to_cut_3000_jobs_including_rollbacks_on_ai/). Uber AI started as an acquisition of Geometric Intelligence, which was founded in October 2014 by three professors: Gary Marcus, a cognitive scientist from NYU, also well-known as an author; Zoubin Ghahramani, a Cambridge professor of machine learning and Fellow of the Royal Society; Kenneth Stanley, a professor of computer science at the University of Central Florida and pioneer in evolutionary approaches to machine learning; and Douglas Bemis, a recent NYU graduate with a PhD in neurolinguistics. Other team members included Noah Goodman (Stanford), Jeff Clune (Wyoming) and Jason Yosinski (a recent graduate of Cornell).

I would like to use this post as an opportunity for redditors to mention any work done by Uber AI that they feel deserves recognition. Any work mentioned here ([https://eng.uber.com/research/?\_sft\_category=research-ai-ml](https://eng.uber.com/research/?_sft_category=research-ai-ml)) or here ([https://eng.uber.com/category/articles/ai/](https://eng.uber.com/category/articles/ai/)) is fair game.

Some things I personally thought are worth reading/watching related to Evolutionary AI:

* [Welcoming the Era of Deep Neuroevolution](https://eng.uber.com/deep-neuroevolution/)
* [The surprising creativity of digital evolution: A collection of anecdotes from the evolutionary computation and artificial life research communities](https://eng.uber.com/research/the-surprising-creativity-of-digital-evolution-a-collection-of-anecdotes-from-the-evolutionary-computation-and-artificial-life-research-communities/)
* [Jeff Clune's Exotic Meta-Learning Lecture at Stanford](https://www.youtube.com/watch?v=cZUdaqTC1TA)
* [Kenneth Stanley's Lecture on On Creativity, Objectives, and Open-Endedness](https://www.youtube.com/watch?v=y2I4E_UINRo)
* Also, here's a summary by an outside source: [https://analyticsindiamag.com/uber-ai-labs-layoffs/](https://analyticsindiamag.com/uber-ai-labs-layoffs/) (I found it amusing that they quoted u/hardmaru quoting me).

One reason why I find this research fascinating is encapsulated in the quote below:

""Right now, the majority of the field is engaged in what I call the manual path to AI. In the first phase, which we are in now, everyone is manually creating different building blocks of intelligence. The assumption is that at some point in the future our community will finish discovering all the necessary building blocks and then will take on the Herculean task of putting all of these building blocks together into an extremely complex thinking machine. That might work, and some part of our community should pursue that path. However, I think a faster path that is more likely to be successful is to rely on learning and computation: the idea is to create an algorithm that itself designs all the building blocks and figures out how to put them together, which I call an AI-generating algorithm. Such an algorithm starts out not containing much intelligence at all and bootstraps itself up in complexity to ultimately produce extremely powerful general AI. That’s what happened on Earth.  The simple Darwinian algorithm coupled with a planet-sized computer ultimately produced the human brain. I think that it’s really interesting and exciting to think about how we can create algorithms that mimic what happened to Earth in that way. Of course, we also have to figure out how to make them work so they do not require a planet-sized computer."" - [Jeff Clune](https://eng.uber.com/jeff-clune-interview/)

**Please share any Uber AI research you feel deserves recognition!**

This post is meant just as a show of appreciation to the researchers who contributed to the field of AI. **This post is not just for the people mentioned above, but the other up-and-coming researchers who also contributed to the field while at Uber AI and might be searching for new job opportunities.** **Please limit comments to Uber AI research only and not the company itself.**"
152,machinelearning,open-ai,comments,2021-04-10 20:46:18,[P] Using PyTorch + NumPy? A bug that plagues thousands of open-source ML projects.,tanelai,False,0.98,978,mocpgj,https://www.reddit.com/r/MachineLearning/comments/mocpgj/p_using_pytorch_numpy_a_bug_that_plagues/,159,1618087578.0,"Using NumPy’s random number generator with multi-process data loading in PyTorch causes identical augmentations unless you specifically set seeds using the worker\_init\_fn option in the DataLoader. I didn’t and this bug silently regressed my model’s accuracy.

How many others has this bug done damage to? Curious, I downloaded over a hundred thousand repositories from GitHub that import PyTorch, and analysed their source code. I kept projects that define a custom dataset, use NumPy’s random number generator with multi-process data loading, and are more-or-less straightforward to analyse using abstract syntax trees. Out of these, over 95% of the repositories are plagued by this problem. It’s inside PyTorch's official tutorial, OpenAI’s code, and NVIDIA’s projects. Even Karpathy admitted falling prey to it.

For example, the following image shows the duplicated random crop augmentations you get when you blindly follow the official PyTorch tutorial on custom datasets:

https://preview.redd.it/pccy5wskpes61.png?width=1652&format=png&auto=webp&s=f292d0282ad954cbac2c693a9656d62fa0dd9682

You can read more details [here](https://tanelp.github.io/posts/a-bug-that-plagues-thousands-of-open-source-ml-projects/)."
153,machinelearning,open-ai,comments,2023-12-20 13:59:53,[D] Mistral received funding and is worth billions now. Are open source LLMs the future?,BelowaverageReggie34,False,0.96,437,18mv8le,https://www.reddit.com/r/MachineLearning/comments/18mv8le/d_mistral_received_funding_and_is_worth_billions/,156,1703080793.0," Came across this intriguing [article](https://gizmodo.com/mistral-artificial-intelligence-gpt-3-openai-1851091217) about Mistral, an open-source LLM that recently scored 400 million in funding, now valued at 2 billion. Are open-source LLMs gonna be the future? Considering the trust issues with ChatGPT and the debates about its safety, the idea of open-source LLMs seems to be the best bet imo.

Unlike closed-source models, users can verify the privacy claims of open-source models. There have been some good things being said about Mistral, and I only hope such open source LLMs secure enough funding to compete with giants like OpenAI. Maybe then, ChatGPT will also be forced to go open source?

With that said, I'm also hopeful that competitors like [Silatus](https://silatus.com/) and [Durable](https://durable.co/), which already use multiple models, consider using open-source models like Mistral into their frameworks. If that happens, maybe there might be a shift in AI privacy. What do you guys think? Are open-source LLMs the future, especially with the funding backing them?"
154,machinelearning,open-ai,comments,2019-03-11 16:19:00,[N] OpenAI LP,SkiddyX,False,0.94,313,azvbmn,https://www.reddit.com/r/MachineLearning/comments/azvbmn/n_openai_lp/,150,1552321140.0,"""We’ve created OpenAI LP, a new “capped-profit” company that allows us to rapidly increase our investments in compute and talent while including checks and balances to actualize our mission.""

Sneaky.

https://openai.com/blog/openai-lp/"
155,machinelearning,open-ai,comments,2023-03-10 08:50:32,[D] Is ML a big boys game now?,TheStartIs2019,False,0.83,180,11njpb9,https://www.reddit.com/r/MachineLearning/comments/11njpb9/d_is_ml_a_big_boys_game_now/,146,1678438232.0,"As much as I enjoy ML as a whole, I am a bit skeptical of the future for individuals. With OpenAI trying to monopolize the market along with Microsoft, which part remains for the small time researchers/developers?

It seems everything now is just a ChatGPT wrapper, and with GPT-4 around the corner I assume itll be even more prominent.

What are your thoughts?"
156,machinelearning,open-ai,comments,2023-12-06 15:52:21,[R] Google releases the Gemini family of frontier models,blabboy,False,0.95,337,18c6xio,https://www.reddit.com/r/MachineLearning/comments/18c6xio/r_google_releases_the_gemini_family_of_frontier/,145,1701877941.0,"Tweet from Jeff Dean: https://twitter.com/JeffDean/status/1732415515673727286

Blog post: https://blog.google/technology/ai/google-gemini-ai/

Tech report: https://storage.googleapis.com/deepmind-media/gemini/gemini_1_report.pdf

Any thoughts? There is not much ""meat"" in this announcement! They must be worried about other labs + open source learning from this."
157,machinelearning,open-ai,comments,2019-07-23 02:29:08,[D] What is OpenAI? I don't know anymore.,milaworld,False,0.95,539,cgmptl,https://www.reddit.com/r/MachineLearning/comments/cgmptl/d_what_is_openai_i_dont_know_anymore/,144,1563848948.0,"*Some [commentary](https://threadreaderapp.com/thread/1153364705777311745.html) from [Smerity](https://twitter.com/Smerity/status/1153364705777311745) about yesterday's [cash infusion](https://openai.com/blog/microsoft/) from MS into OpenAI:*

What is OpenAI? I don't know anymore.
A non-profit that leveraged good will whilst silently giving out equity for [years](https://twitter.com/gdb/status/1105137541970243584) prepping a shift to for-profit that is now seeking to license closed tech through a third party by segmenting tech under a banner of [pre](https://twitter.com/tsimonite/status/1153340994986766336)/post ""AGI"" technology?

The non-profit/for-profit/investor [partnership](https://openai.com/blog/openai-lp/) is held together by a set of legal documents that are entirely novel (=bad term in legal docs), are [non-public](https://twitter.com/gdb/status/1153305526026956800) + unclear, have no case precedence, yet promise to wed operation to a vague (and already re-interpreted) [OpenAI Charter](https://openai.com/charter/).

The claim is that [AGI](https://twitter.com/woj_zaremba/status/1105149945118519296) needs to be carefully and collaboratively guided into existence yet the output of almost [every](https://github.com/facebookresearch) [other](https://github.com/google-research/google-research) [existing](https://github.com/salesforce) [commercial](https://github.com/NVlabs) lab is more open. OpenAI runs a closed ecosystem where they primarily don't or won't trust outside of a small bubble.

I say this knowing many of the people there and with past and present love in my heart—I don't collaborate with OpenAI as I have no freaking clue what they're doing. Their primary form of communication is high entropy blog posts that'd be shock pivots for any normal start-up.

Many of their [blog posts](https://openai.com/blog/cooperation-on-safety/) and [spoken](https://www.youtube.com/watch?v=BJi6N4tDupk) [positions](https://www.youtube.com/watch?v=9EN_HoEk3KY) end up [influencing government policy](https://twitter.com/jackclarkSF/status/986568940028616705) and public opinion on the future of AI through amplified pseudo-credibility due to *Open*, *Musk founded*, repeatedly hyped statements, and a sheen from their now distant non-profit good will era.

I have mentioned this to friends there and say all of this with positive sum intentions: I understand they have lofty aims, I understand they need cash to shovel into the forever unfurling GPU forge, but if they want any community trust long term they need a better strategy.

The implicit OpenAI message heard over the years:
“Think of how transformative and dangerous AGI may be. Terrifying. Trust us. Whether it's black-boxing technology, legal risk, policy initiatives, investor risk, ...—trust us with everything. We're good. No questions, sorry.”

*We'll clarify our position in an upcoming blog post.*"
158,machinelearning,open-ai,comments,2020-02-18 00:19:40,"[D] The messy, secretive reality behind OpenAI’s bid to save the world",milaworld,False,0.93,359,f5immz,https://www.reddit.com/r/MachineLearning/comments/f5immz/d_the_messy_secretive_reality_behind_openais_bid/,143,1581985180.0,"A new [story](https://www.technologyreview.com/s/615181/ai-openai-moonshot-elon-musk-sam-altman-greg-brockman-messy-secretive-reality/) by journalist [Karen Hao](https://mobile.twitter.com/_KarenHao/status/1229519114638589953) who spent six months digging into OpenAI.

She started with a few simple questions: Who are they? What are their goals? How do they work? After nearly three dozen interviews, she found so much more.

The article is worth a read. I'm not going to post an excerpt here.

The most surprising thing is that Elon Musk himself, after that article got published, [criticized](https://www.twitter.com/elonmusk/status/1229544673590599681) OpenAI and tweeted that they ""should be more open"" 🔥

With regards to AI safety, Elon [said](https://www.twitter.com/elonmusk/status/1229546206948462597) ""I have no control & only very limited insight into OpenAI. Confidence in Dario for safety is not high.""

Here is the link to the article again: https://www.technologyreview.com/s/615181/ai-openai-moonshot-elon-musk-sam-altman-greg-brockman-messy-secretive-reality/"
159,machinelearning,open-ai,comments,2021-09-08 08:13:53,[D] Schmidhuber: The most cited neural networks all build on work done in my labs,RichardRNN,False,0.86,251,pk69xy,https://www.reddit.com/r/MachineLearning/comments/pk69xy/d_schmidhuber_the_most_cited_neural_networks_all/,141,1631088833.0,"In a [tweet](https://twitter.com/SchmidhuberAI/status/1435499479306809346) and [blog post](https://people.idsia.ch/~juergen/most-cited-neural-nets.html) by the man himself, Schmidhuber writes that *the most cited neural nets all build on our work: LSTM. ResNet (open-gated Highway Net). AlexNet & VGG (like our DanNet). GAN (an instance of our Artificial Curiosity). Linear Transformers (like our Fast Weight Programmers).*

Blog post: https://people.idsia.ch/~juergen/most-cited-neural-nets.html

**Abstract**

Modern Artificial Intelligence is dominated by artificial neural networks (NNs) and [deep learning](https://people.idsia.ch/~juergen/deep-learning-miraculous-year-1990-1991.html).[\[DL1-4\]](https://people.idsia.ch/~juergen/most-cited-neural-nets.html#DL1) Foundations of the most popular NNs originated in my labs at TU Munich and IDSIA. Here I discuss: **(1)** [Long Short-Term Memory](https://people.idsia.ch/~juergen/deep-learning-miraculous-year-1990-1991.html#Sec.%204)[\[LSTM0-17\]](https://people.idsia.ch/~juergen/most-cited-neural-nets.html#LSTM0) (LSTM), the most cited NN of the 20th century, **(2)**  ResNet, the most frequently cited NN of the 21st century (which is an open-gated version of our earlier [Highway Net](https://people.idsia.ch/~juergen/highway-networks.html):[\[HW1-3\]](https://people.idsia.ch/~juergen/most-cited-neural-nets.html#HW1)  the first working really deep feedforward NN), **(3)**  AlexNet and VGG Net, the 2nd and 3rd most frequently cited NNs of the 21st century (both building on our similar earlier [DanNet](https://people.idsia.ch/~juergen/DanNet-triggers-deep-CNN-revolution-2011.html):[\[GPUCNN1-9\]](https://people.idsia.ch/~juergen/most-cited-neural-nets.html#GPUCNN1)  the first deep convolutional NN[\[CNN1-4\]](https://people.idsia.ch/~juergen/most-cited-neural-nets.html#CNN1) to win  [image recognition competitions](https://people.idsia.ch/~juergen/computer-vision-contests-won-by-gpu-cnns.html)), **(4)**  Generative Adversarial Networks[\[GAN0-1\]](https://people.idsia.ch/~juergen/most-cited-neural-nets.html#GAN0) (an instance of my earlier [Adversarial Artificial Curiosity](https://people.idsia.ch/~juergen/artificial-curiosity-since-1990.html#sec1)[\[AC90-20\]](https://people.idsia.ch/~juergen/most-cited-neural-nets.html#AC)), and **(5)** variants of Transformers (linear Transformers are formally equivalent to my earlier [Fast Weight Programmers](https://people.idsia.ch/~juergen/fast-weight-programmer-1991-transformer.html)).[\[TR1-6\]](https://people.idsia.ch/~juergen/most-cited-neural-nets.html#TR1)[\[FWP0-1,6\]](https://people.idsia.ch/~juergen/most-cited-neural-nets.html#FWP) Most of this started with our  [Annus Mirabilis of 1990-1991](https://people.idsia.ch/~juergen/deep-learning-miraculous-year-1990-1991.html)[\[MIR\]](https://people.idsia.ch/~juergen/most-cited-neural-nets.html#MIR) when compute was a million times more expensive than today."
160,machinelearning,open-ai,comments,2023-03-28 05:57:03,[N] OpenAI may have benchmarked GPT-4’s coding ability on it’s own training data,Balance-,False,0.97,1001,124eyso,https://www.reddit.com/r/MachineLearning/comments/124eyso/n_openai_may_have_benchmarked_gpt4s_coding/,135,1679983023.0,"[GPT-4 and professional benchmarks: the wrong answer to the wrong question](https://aisnakeoil.substack.com/p/gpt-4-and-professional-benchmarks)

*OpenAI may have tested on the training data. Besides, human benchmarks are meaningless for bots.*

 **Problem 1: training data contamination**

To benchmark GPT-4’s coding ability, OpenAI evaluated it on problems from Codeforces, a website that hosts coding competitions. Surprisingly, Horace He pointed out that GPT-4 solved 10/10 pre-2021 problems and 0/10 recent problems in the easy category. The training data cutoff for GPT-4 is September 2021. This strongly suggests that the model is able to memorize solutions from its training set — or at least partly memorize them, enough that it can fill in what it can’t recall.

As further evidence for this hypothesis, we tested it on Codeforces problems from different times in 2021. We found that it could regularly solve problems in the easy category before September 5, but none of the problems after September 12.

In fact, we can definitively show that it has memorized problems in its training set: when prompted with the title of a Codeforces problem, GPT-4 includes a link to the exact contest where the problem appears (and the round number is almost correct: it is off by one). Note that GPT-4 cannot access the Internet, so memorization is the only explanation."
161,machinelearning,open-ai,comments,2023-11-22 06:38:48,"OpenAI: ""We have reached an agreement in principle for Sam to return to OpenAI as CEO"" [N]",we_are_mammals,False,0.92,286,1812w04,https://www.reddit.com/r/MachineLearning/comments/1812w04/openai_we_have_reached_an_agreement_in_principle/,129,1700635128.0,"OpenAI announcement:

""We have reached an agreement in principle for Sam to return to OpenAI as CEO with a new initial board of Bret Taylor (Chair), Larry Summers, and Adam D'Angelo.

We are collaborating to figure out the details. Thank you so much for your patience through this.""

https://twitter.com/OpenAI/status/1727205556136579362"
162,machinelearning,open-ai,comments,2016-01-30 19:45:26,Synopsis of top Go professional's analysis of Google's Deepmind's Go AI,NFB42,False,0.98,538,43fl90,https://www.reddit.com/r/MachineLearning/comments/43fl90/synopsis_of_top_go_professionals_analysis_of/,130,1454183126.0,"Hi there. Earlier this month I had [a discussion](https://www.reddit.com/r/hearthstone/comments/3zdibn/intelligent_agents_for_hearthstone/cylnbf2) over on /r/hearthstone with /u/yetipirate about Computer Go. Then the news hit this week of the first Go AI to beat a human professional.

We had some more discussion then, and I made a synopsis of [this video](https://www.youtube.com/watch?v=NHRHUHW6HQE), where the US Go Association has Myungwan Kim, 9-Dan Pro, analyse the games between the AlphaGo AI and human professional Fan Hui, 2-Dan Pro. (FTR: Professional go ranks start at 1-Dan and go up to 9-Dan, but rather than the absolute top 9-Dan is more like the beginning of grandmastery. The best players in the world are like 9-Dan+++++. Lee Sedol, which AlphaGo will challenge next this March, is at this latter level.)

/u/yetipirate suggested this synopsis might interest some people here as well, since it digests the salient points of a two hour video with lots of Go jargon into a more manageable post. So hence I'm posting it here, I hope you all enjoy it. Feel free to ask me any questions about Go, but I'm not that strong myself so ymmv. Anyway without further ado:

**In General:**

The match has been big news in East-Asia as well. The thing which most shocked all the professionals was that AlphaGo played so much like a human player. Their first impressions were that it's as if this was a human playing, not a computer.

Since how a human plays is, obviously, pretty well known, they decided that they'll focus commentary mostly on those cases where AlphaGo doesn't play like a human.

The first thing that Myungwan Kim noted was that AlphaGo has a Japanese playstyle (this is especially interesting because among the three traditional Go powerhouses, China, Korea, and Japan, the Japanese have been the weakest in international competitions for the past several decades). The commentators don't know, but they suspect it is that the original human data set was biased towards Japanese playstyles.

Myungwan Kim also makes a comment about one of the lines continually repeated in the coverage of Computer Go. The line that ""if you ask a top Go player why they like a certain move, they'll often say 'it felt right'"". Myungwan Kim wanted to add that just because it's based on intuition, doesn't mean there's no logic behind it at all. Top Go players aren't just guessing what are good moves, they have a real and complicated rational understanding about what specific moves are doing. Even if the final decision might come down to which move feels the best, it's not as simple as top pro's just doing a random move and saying 'I felt like it'.

**The Games:**

In the **first game** both sides played very passively in the opening. Leisurely and gentle they say.

Myungwan Kim finds that AlphaGo has a weakness here, it doesn't seem to understand the value of taking and holding initiative. Complicated to explain, but at its core it's about doing moves which force your opponent to use their turn to react to your move over doing moves which might be equally valuable to you, but leave your opponent free to do whatever they want on their turn.

Important, Myungwan Kim says because of this that the first game Fan Hui was winning in the opening. He says this was the only game Fan Hui was winning after the opening. He estimates Fan Hui was about 10 points ahead, and can't see white getting back even 5 points coming out of that opening. Myungwan Kim offers some alternate moves for AlphaGo which would still have Fan Hui in the lead, but would've given AlphaGo better opportunities to comeback.

Conclusion from the opening: AlphaGo lost because it didn't understand the value of initiative.

Myungwan Kim later points to one huge mistake by Fan Hui in the midgame that lost him the game. I can't go into detail here because, as characteristic of top-level Go, it's the difference of placing one stone one space higher. But Myungwan Kim says that while Fan Hui made other small mistakes, this one move is the big one which let AlphaGo come back from losing the opening.

Final conclusion from game one: Aside from not understanding initiative. Myungwan Kim says AlphaGo betrays itself as a computer in that it sometimes it goes too far in mimicking standard professional play and does the most common move instead of the most optimal move. In other words, it's extremely book smart, but at times fails to notice when it should be ignoring the books because the specific situation in the game makes the less standard move the most optimal one instead. (A bit cliche imo, but Myungwan Kim says ""AlphaGo is not creative"".) They think that might really hurt AlphaGo in the game against Lee Sedol.

**Game 2**, they note Fan Hui really played too aggressively, as he noted in his own post-match interview. Myungwan Kim says he can really see Fan Hui wasn't playing his best game, but was trying to test AlphaGo to see if it could be tricked into making exploitable mistakes.

Myungwan Kim says Fan Hui actually put up a really good fight. After the opening it should've been over for Fan Hui, but AlphaGo almost allowed Fan Hui to get back in the game.

**Game 3** is similar to the fifth game, though Fan Hui played better in the beginning here. Myungwan Kim notes several moves by AlphaGo which are top professional moves. He notes some moves by Fan Hui which he thinks hints that Fan Hui might be a bit out of practice when it comes to playing professional level games (he says it's the kind of move you do if too used to playing teaching games against amateurs). Fan Hui lost because he played over-aggressive and left too many holes in his defence as a result.

On the **fifth game**, Myungwan Kim says AlphaGo was winning from the beginning here. They marvel at some of AlphaGo's moves here, but they're not sure whether AlphaGo really knew what it was doing or if it just got 'lucky' somehow.

Myungwan Kim points out AlphaGo made a huge mistake early in this game, but was saved because not long after Fan Hui made an equally huge mistake. But this is an example where he thinks a real grandmaster like Lee Sedol would not have allowed AlphaGo to get away with the kind of mistake it made there.

**AlphaGo's Strengths and Weaknesses:**

Myungwan Kim lists AlphaGo's strengths:

 * It's not afraid of 'Ko'. 'Ko' is too complex a concept to explain succinctly, for an attempt [see my post here](https://www.reddit.com/r/MachineLearning/comments/43fl90/synopsis_of_top_go_professionals_analysis_of/czi7swh). They marvel at some of AlphaGo's moves surrounding a 'Ko' situation, but aren't sure if AlphaGo really knew what it was doing or just got lucky that it worked out.

 * Reading might be AlphaGo's strength. As in, cases where it comes down to very straightforward fights and moves it's very strong at choosing the right moves.

Myungwan Kim lists AlphaGo's weaknesses:

 * Doesn't understand initiative, as explained earlier.

 * At times too obsessed with following common patterns, when the specific situation might require creative deviation from those patterns. Also explained earlier.

 * It doesn't understand 'Aji'. 'Aji' is difficult to explain, but it refers to the amount of uncertainty remaining in a specific grouping of white and black stones. (Usually, it's about the chance that a group of stones which is 'death' might become alive and vice versa as a result of things happening elsewhere on the board.) You can also put this differently as: AlphaGo lacks proper long-term thinking.

 * Myungwan Kim thinks AlphaGo has difficulty, or even doesn't at all, evaluating the value of specific stones. It's good at making moves which directly gain territory for itself, but tends to miss moves which reduce the value of the opponent's stones.

 * It can make really high level moves at times, but it doesn't understand those moves. Which it displays by making the right moves at the wrong time.

More generally Myungwan Kim thinks a weakness of AlphaGo is its insularity. He really stresses that human pro's become much stronger when they discuss and analyse their games with other pro's. And because AlphaGo primarily plays against itself the quality of the feedback it gets on its play is too one-note, which leaves holes in its plays whereas human pro's getting feedback from many other human pro's end up with more robust and stronger playstyles. He really thinks to progress past its current level AlphaGo needs to play more with top human pro's rather than just itself. Right now, Myungwan Kim en most pro's he knows don't feel threatened by AlphaGo. They also talk about how AlphaGo can be useful for human pro's to study and become stronger, which can make AlphaGo stronger in turn. (This last paragraph is imo all just Myungwan Kim musing based on his understanding of how AlphaGo was designed more than evaluating its plays themselves, so that's why I didn't list it as a bullet point.)

In general, I get the sense from Myungwan Kim's explanations that he thinks AlphaGo is stronger at the more concrete parts of Go play, such as territory and life-or-death, and weaker at the more vague concepts, such as influence and uncertainty.

**[word limit hit, final part below]**"
163,machinelearning,open-ai,comments,2023-02-02 13:55:47,[N] Microsoft integrates GPT 3.5 into Teams,bikeskata,False,0.97,464,10rqe34,https://www.reddit.com/r/MachineLearning/comments/10rqe34/n_microsoft_integrates_gpt_35_into_teams/,130,1675346147.0,"Official blog post: https://www.microsoft.com/en-us/microsoft-365/blog/2023/02/01/microsoft-teams-premium-cut-costs-and-add-ai-powered-productivity/

Given the amount of money they pumped into OpenAI, it's not surprising that you'd see it integrated into their products. I do wonder how this will work in highly regulated fields (finance, law, medicine, education)."
164,machinelearning,open-ai,comments,2019-02-14 17:09:53,[R] OpenAI: Better Language Models and Their Implications,jinpanZe,False,0.95,296,aqlzde,https://www.reddit.com/r/MachineLearning/comments/aqlzde/r_openai_better_language_models_and_their/,128,1550164193.0,"https://blog.openai.com/better-language-models/

""We’ve trained a large-scale unsupervised language model which generates coherent paragraphs of text, achieves state-of-the-art performance on many language modeling benchmarks, and performs rudimentary reading comprehension, machine translation, question answering, and summarization — all without task-specific training.""

Interestingly,

""Due to our concerns about malicious applications of the technology, we are not releasing the trained model. As an experiment in responsible disclosure, we are instead releasing a much smaller model for researchers to experiment with, as well as a technical paper."""
165,machinelearning,open-ai,comments,2023-01-22 13:44:49,[D] Couldn't devs of major GPTs have added an invisible but detectable watermark in the models?,scarynut,False,0.79,154,10ijzi2,https://www.reddit.com/r/MachineLearning/comments/10ijzi2/d_couldnt_devs_of_major_gpts_have_added_an/,127,1674395089.0,"So LLMs like GPT3 have understandably raised concerns about the disruptiveness of faked texts, faked images and video, faked speech and so on. While this may likely change soon, as of now OpenAI controls the most accessible and competent LLM. And OpenAIs agenda is said in their own words to be to benefit mankind.

If so, wouldn't it make sense to add a sort of watermark to the output? A watermark built into the model parameters so that it could not easily be removed, but still detectable with some key or some other model. While it may not matter in the long run, it would set a precedent to further development and demonstrate some kind of responsibility for the disruptive nature of LLMs/GPTs.

Would it not be technically possible, nä would it make sense?"
166,machinelearning,open-ai,comments,2022-08-22 21:00:01,[D] StableDiffusion v1.4 is entirely public. What do you think about Stability.ai ?,dasayan05,False,0.98,431,wv50uh,https://www.reddit.com/r/MachineLearning/comments/wv50uh/d_stablediffusion_v14_is_entirely_public_what_do/,123,1661202001.0,"In case you haven't noticed, [stability.ai](https://stability.ai) just open-sourced their latest version of StableDiffusion to the public. Here is the link: [https://stability.ai/blog/stable-diffusion-public-release](https://stability.ai/blog/stable-diffusion-public-release)

It is so fast and small (memory footprint) that it can run on consumer grade GPUs. I just generated my first ""astronaut riding a horse on mars"" on my local GTX3090.

[Astronaut riding a horse on mars](https://preview.redd.it/jpceq4klwbj91.png?width=512&format=png&auto=webp&s=b84b7c1cf7e09fdcf326145e5d17485c9376ffb4)

So what is opinion on open-sourcing such powerful models ? And, what do you think about [stability.ai](https://stability.ai) as an organisation ? Do you feel they can potentially be the next OpenAI ?"
167,machinelearning,open-ai,comments,2020-04-23 15:15:06,[P] I trained a recurrent neural network trained to draw dick doodles,RichardRNN,False,0.96,1779,g6og9l,https://www.reddit.com/r/MachineLearning/comments/g6og9l/p_i_trained_a_recurrent_neural_network_trained_to/,121,1587654906.0,"# DICK-RNN

A recurrent neural network trained to draw dicks.

Demo: https://dickrnn.github.io/

GitHub: https://github.com/dickrnn/dickrnn.github.io/

This project is a fork of Google's [sketch-rnn demo](https://magenta.tensorflow.org/assets/sketch_rnn_demo/index.html). The methodology is described in this [paper](https://arxiv.org/abs/1704.03477), and the dataset used for training is based on [Quickdraw-appendix](https://github.com/studiomoniker/Quickdraw-appendix).

# Why?

From Studio Moniker's [Quickdraw-appendix](https://studiomoniker.com/projects/do-not-draw-a-penis) project:

*In 2018 Google open-sourced the [Quickdraw data set](https://github.com/googlecreativelab/quickdraw-dataset). “The world's largest doodling data set”. The set consists of 345 categories and over 50 million drawings. For obvious reasons the data set was missing a few specific categories that people seem to enjoy drawing. This made us at Moniker think about the moral reality big tech companies are imposing on our global community and that most people willingly accept this. Therefore we decided to publish an appendix to the Google Quickdraw data set.*

I also believe that [“Doodling a penis is a light-hearted symbol for a rebellious act”](https://www.theverge.com/tldr/2019/6/17/18681733/google-ai-doodle-detector-penis-protest-moniker-mozilla) and also “think our moral compasses should not be in the hands of big tech”.

# Dick Demos

[Main Dick Demo](https://dickrnn.github.io/)

[Predict Multiple Dicks](https://dickrnn.github.io/multi.html)

[Simple Dick Demo](https://dickrnn.github.io/simple.html)

[Predict Single Dick with Temperature Adjust](https://dickrnn.github.io/predict.html)

## Example Dicks from Main Demo

The dicks are embedded in the query string after `share.html`.

Examples of sharable generated dick doodles:

[Example 1](https://dickrnn.github.io/share.html?s=f38BfXcBe3wBeHsBfH4BfX4Bdn8BfIMBdogBfIYBfYgBfogBf40BgYYBg4YBhocBiYcBhIEBlX8BhHsBg3oBgnoBgXoBgHsBf3wBf48BiowBhIQBhIIBhoABhn8Bhn4Bh3gBjHABgnoBgXsBgHsBgHoBf3IBfXgBfXsBeHYBe30Ban8BfoABfYABe4AAW2kBf2wBf2QBf24Bf2wBgHUBf3EBgHIBgHkBgHkBgnQBgXsBgnkBgXwBgnwBgX8BgoABg4EBg4IBgoQBgYMBgYMBgokBgJABf74BfosBfYYBfogBfoUBf5MBf4sBgIIAVwABgIIBgIIBgYEBgIEBgn8BiYABhX8BhX4Bgn8Bg34BgX8Bg34BgH8Bf34Bgn0AZFMBgYUBgIMBgIEBf4MBgIIBf4MAf2cBf30BgXoBgngBg3gBhHgBhHoAhXgBgncBg3sBinYBiHoAWb8Bfn8Bf38BgX8Bgn4BhH8Bhn8BjYEBh4MBhoMAMXAA)

[Example 2](https://dickrnn.github.io/share.html?s=f38BfnYBe3sBensBeX0BeX4Bdn8BfIEBfoMBfYQBfoUBf48BgIgBhIgBiosBhIABg4ABgn4Bg3wBhXkBfX8Be4IBe4MBe4QBfYUBfoQBf4kBgIUBg4YBhIUBhYMBhIABhIABhX4BhXoBhHoBg3kBgncBgHcBgHkBf3sBfn0BfX4Bfn8Bfn4BfX4Bfn4BfX4Aa0gBhHwBhnsBiXkBiXsBinsBlHkBjXsBi3wBiX0BiX4Bh34Bjn4BiX8BhX4Bg38BhX8BhX8BgH8BgH8BgYABgIABgIEBgH8BgYABgIEBgoMBgIEBgIEBgYMBgIIBgYUBf4MBfoUBfYEBfIEBdYQBd4IBb4MBeIABd4EBd4EBZoQBbYUBdoIBd4IBeoEBdYIBeIEBeoABe4EBe4EBfYABfYABfn8BfoABfoABf38Bf38A/ikBf38Bf38Bf4EBf4QBgIQBgYMBgIEBgoMBgIEBgoQBgYEBgIEBgYEBgYEBf38Bf38Bf4AAhmsBf38Bf4ABf38Bf38Bf38Bf38Bf34Bf38Bf34Bf38Bf34Bfn8Bf38AipkA)

[Example 3](https://dickrnn.github.io/share.html?s=f38Bh30BjH8BkIMBjYQBhoQBgIgBf4sBe40BeoYBeoUBeoIBeIEBd4ABd38BdnkBeXkBe3cBe3UBfHUBenMBgn0BhH0BhHsBgn0AxocBgH8Bgn4BjHwBiH0BhX8Bgn8Bh4IBhYQBhoUBhYcBhIgBgYYBf4YBf4cBf4EBfIMBeoMBdoMBdYEBdoABd38BeH0Bd3sBensBdXEBfHcBfXcBfngBf3gAcmEBf34BgX4BgXsBgXgBgXIBgHcBgWYBgHUBf3UBgHABf3oBfnsBfnsBfnoBf30BgHwBgXsBgX0BgnwBg3wBiHoBiHsBgn4Bg38BhX8BgYABgoEBgYIBgIIBgYcBgYkBgIQBf4YBf4QBf4kBf4UBf4QBf4MBf4MBf4QBf4QBf4QBfoUBfYQBfoUBf4IBfYcBfYoBf4IBfoYBfoMBfoMBf4EAbAABf4MBf4EBf4IBf4ABfoMBf38Bf4AAfH0BgX8Bk4IBg4ABgn8BgoABgoAASrIA)

[Example 4](https://dickrnn.github.io/share.html?s=f38BZn8BdIUBdokBeo0BfY8BfpQBhY4BiowBj4YBkIEBlH8BjHkBi3IBiXEBgnUBgXkBf6YBgYwBhYkBi4gBjYIBjIEBi38BiHkBh3UBg3MBgm0BgXIBfnMBenUBenkBdXUAAEcBhH8BhXkBiXgBi3IBkG4BkHEBk28Bk3IBnmYBi3gBi3oBk3kBiX8BioIBjYkBh4kBhYwBgYkBgY0BfY4BdZEBc48Bd4gBd4cBcYoBd4UAMDEBf4EBgoABiocBk4gBlIUBjX8Bh34BhXoAZEMBe3wBfHsBfH4BfX0BfX0AtJQBin8BhX0BhX8Bf34AqHoBf30BgX4BhXIBgn0BinUAhXoBfn8BhH4Bj3oBlXgBjH8BjYMAkKUBhH8BloQBh4IBjYUAapkBjXkBpHoBkH8Ac8YBhYcBhocBiYsBh4sBhIgARGgA)

# Dataset

This recurrent neural network was trained on a [dataset](https://github.com/studiomoniker/Quickdraw-appendix) of roughly 10,000 dick doodles."
168,machinelearning,open-ai,comments,2023-10-17 17:00:26,"[R] 85% of the variance in language model performance is explained by a single factor (g, a unified measure of LLM ability)",dealic,False,0.9,298,17a31qb,https://www.reddit.com/r/MachineLearning/comments/17a31qb/r_85_of_the_variance_in_language_model/,122,1697562026.0,"TL;DR and paper link are at the bottom of the post.

I'm an undergrad who just wrote my first paper completely solo. Crazy experience with so many highs and lows, but I learned a lot from it. I think the results are important and I want people to see them, so I'll try to walk through the paper here as best as I can.

Given the nature of Reddit posts, I'll focus a bit less on the methods and more on the results. I won't cite stuff here either, but obviously you can find citations in the paper.

First I'll give a small bit of historical context to what I'm doing, then walk through what I did and what came of it.

Enjoy the read.

# The general intelligence factor in humans

In the early 1900s, Charles Spearman observed that children's performance across diverse school subjects was positively correlated (pictured below). He proposed the concept of a ""general intelligence factor,"" or *g*, to account for this correlation. This is why factor analysis was invented, it was invented by Spearman to quantify *g*.

&#x200B;

[The OG correlation matrix of school subjects](https://preview.redd.it/ohzhx16h6sub1.png?width=456&format=png&auto=webp&s=d9e0dd8e7b33571618cc2aa3399edabfbd873c12)

A century of research later, *g* has proven to be a robust and reliable construct. The positive correlations between various mental abilities, known as the positive manifold, have become one of the most replicated findings in differential psychology. The *g* factor typically accounts for over 40% of the variance in cognitive ability tests and serves as a strong predictor for various life outcomes.

While Spearman's original two-factor model suggested that intelligence comprises a general factor *g* and specific factors *s* unique to each test, contemporary research has refined this view. Current consensus holds that *g* sits atop a hierarchical model akin to the one shown below, underpinned by several first-order factors.

https://preview.redd.it/9cheo29n6sub1.png?width=973&format=png&auto=webp&s=b2eadc486f9727933b24d9f808c3f7effc1b5fd0

# The general intelligence factor in non-human animals

The notion of general intelligence in non-human animals has been a subject of interest since the 1930, shortly after Spearman's concept gained traction. Empirical evidence suggests that *g* is not exclusive to humans. For instance, in rodents like mice, a *g* factor accounts for approximately 35% of the variance in cognitive performance. In a comprehensive meta-analysis covering non-human primates, a single factor explained 47% of the variance across 62 species, indicating a *g* factor similar to that in humans. Even in some bird species, such as bowerbirds, *g* explains over 44% of the variance in cognitive abilities.

However, it's worth noting that *g* may not be universal across all species. For example, evidence suggests that fish may not possess a *g* factor. Despite limitations like low sample size or limited task diversity in research on non-human animals, these findings indicate that *g* is not unique to humans and can sometimes be observed in various non-human species.

# Does g exist in language models?

I suspected *g* might exist in language models and prove itself to be both a powerful explanatory variable and an invaluable tool for measuring LLM ability.

To test for it's existence, I analyzed 1,232 models from the Open LLM Leaderboard and 88 models from the General Language Understanding Evaluation (GLUE) Leaderboard. A variety of cognitive subtests were used to assess the models, including ARC Challenge, Hellaswag,  TruthfulQA, MMLU subtests seen in the images below. Factor analysis techniques, specifically principal axis factoring, were employed to extract *g* from the performance data.

&#x200B;

https://preview.redd.it/oz2yb78x6sub1.png?width=1103&format=png&auto=webp&s=92a853321e015fe17ba89637e0c3c3bf9d71cd14

&#x200B;

https://preview.redd.it/9q0an7k07sub1.png?width=1139&format=png&auto=webp&s=e18f216e1b880117a819ca17cda038d66889dcf9

As can be seen, correlations are uniformly positive (and extremely high) between all subtests, showing the existence of a ""positive manifold"". The average correlation in the matrices is .84, exactly the same for both datasets.

There was agreement for all statistical tests across both datasets that a single factor should be extracted (with only a single exception which was dismissed, as discussed in detail in the paper).

After factor analysis was performed, *g* loadings for subtests were obtained. Loosely speaking, the *g* loading is a correlation between *g* and the specific subtest.

&#x200B;

https://preview.redd.it/m9xuj5c97sub1.png?width=435&format=png&auto=webp&s=8aad5fdaa2dbfa015fb317004c4d6af1dfc163bd

For the sake of brevity I won't post the subtest loading table for GLUE, but that's in the original paper as well. In there, loadings are .78 to .97 approximately.

Now here is an example of how we can rank models according to their general ability:

&#x200B;

https://preview.redd.it/hrrbvwkg7sub1.png?width=498&format=png&auto=webp&s=9afa927a7f0674a8946c6b6f5beaae9d1bb63099

In conclusion, both datasets showed an existence of *g* in language models. We now have a new unified method of ranking models based on how generally capable they are across tasks.

# How ""strong"" is g in language models?

About twice as strong as in humans and some animals.

The *g* factor in language models explains 85% of the variance on all tasks, in contrast to roughly 40% for humans and some animals. The number 85% is exactly replicated in both datasets.

The subtask *g* loading averages about .92, significantly higher than about .6 for humans.

# How reliable is g in language models?

After confirming that *g* is reliable across populations (i.e. it exists in both datasets), the study also included reliability analyses to assess the stability of *g* across test batteries and methods of extraction. In short, I wanted to see if we are actually measuring the same thing when we extract *g* from the same language models tested on 2 completely different test batteries.

I'll spare you the details on this one, but the correlation between *g* extracted from disjoint test batteries is basically 1. Same goes for different methods of extraction of *g*, like using PCA instead of FA. The *g* factor is therefore unique and highly reliable.

# Correlation between model size and g

Finally, the relationship between model size and *g* was explored. In short, the correlation was found to be r = .48 (p < .0001; 95% CI \[.44, .52\]). So, there exists a moderate/strong positive relationship between model size and *g*.

# Implications & Future Research

The identification of *g* in language models firstly allows us to measure what we actually want to measure (and compare) in language models, that is general ability. It allows the whole field to have a unified metric that can be used whenever we care more about general ability than some specific ability (like virology knowledge), which is almost always the case.

Another benefit of using *g* as the primary measure of ability in language models is that it prevents researchers fiddling with the administered test(s) until you find the specific test which seems to show that your model is better than the rest. It standardizes ability measurements in LLMs.

Plus, even if your improvement in a specific ability is real and not HARKed / p-hacked to death, it may still be just that, an improvement in specific abilities that don't affect general intelligence at all. This is obviously important to know when an improvement is discussed, and *g* is the measure that can tell us which is it. As an example of specific non-*g* improvements in humans, look up ""Flynn effect"".

I'd argue there's a big resource efficiency gain too, because now you can evaluate your model on a few carefully chosen *g*\-loaded subtests, derive *g* and infer the model's performance on all other tasks instead of testing your model on 200 tests each with 50+ items (like BigBench does, for example).

Apart from that, this method also allows for an objective ranking of various tests based on their *g* loading, which in turn provides a standardized measure of test relevance for specific populations of language models.

As for future research, there's tons of things to do. I'm personally interested in confirming the factor structure of general intelligence in LLMs or seeing impact of fine-tuning and RLHF on *g*. One can also examine which variables other than model size explain variance in *g* or how general ability and social bias correlate. I'd have loved to do these things, and it wouldn't even be hard, but I couldn't because of resource constraints. If you're looking for a paper idea, feel free to continue where I left off.

# Summary / Abstract

This study uncovers the factor of general intelligence, or *g*, in language models, extending the psychometric theory traditionally applied to humans and certain animal species. Utilizing factor analysis on two extensive datasets—Open LLM Leaderboard with 1,232 models and General Language Understanding Evaluation (GLUE) Leaderboard with 88 models—we find compelling evidence for a unidimensional, highly stable *g* factor that accounts for 85% of the variance in model performance. The study also finds a moderate correlation of .48 between model size and *g*. The discovery of the general intelligence factor in language models offers a unified metric for model evaluation and opens new avenues for more robust, *g*\-based model ability assessment. These findings lay the foundation for understanding and future research on artificial general intelligence from a psychometric perspective and have practical implications for model evaluation and development.

# Arxiv enjoyers, I have a small request

I want to put a preprint up on [cs.AI Arxiv](https://arxiv.org/list/cs.AI/recent) before I begin the publication process, but Arxiv is asking for endorsements. I don't have anyone to ask, so I'm posting here.

Quick edit: someone just endorsed it. Thank you whoever you are.

Arxiv link: [https://arxiv.org/abs/2310.11616](https://arxiv.org/abs/2310.11616) (also see paper below)

Edit: I've been notified by multiple people that this paper is related to mine but I missed it and didn't cite it. I'll add it to my paper and contrast results after I read it, but here is it for the curious reader: [https://arxiv.org/abs/2306.10062](https://arxiv.org/abs/2306.10062)"
169,machinelearning,open-ai,comments,2023-05-15 13:48:19,[D] What do you think of new EU AI Act ?,BeautyInUgly,False,0.88,81,13i8v1o,https://www.reddit.com/r/MachineLearning/comments/13i8v1o/d_what_do_you_think_of_new_eu_ai_act/,121,1684158499.0,"[https://technomancers.ai/eu-ai-act-to-target-us-open-source-software/](https://technomancers.ai/eu-ai-act-to-target-us-open-source-software/#more-561)

Will really change how AI will be deployed / regulated in BOTH the EU and the US is they pass, unless the US govt decides to pick and fight and does not comply"
170,machinelearning,open-ai,comments,2023-03-01 18:31:12,[D] OpenAI introduces ChatGPT and Whisper APIs (ChatGPT API is 1/10th the cost of GPT-3 API),minimaxir,False,0.97,576,11fbccz,https://www.reddit.com/r/MachineLearning/comments/11fbccz/d_openai_introduces_chatgpt_and_whisper_apis/,119,1677695472.0,"https://openai.com/blog/introducing-chatgpt-and-whisper-apis

> It is priced at $0.002 per 1k tokens, which is 10x cheaper than our existing GPT-3.5 models.

This is a massive, massive deal. For context, the reason GPT-3 apps took off over the past few months before ChatGPT went viral is because a) text-davinci-003 was released and was a significant performance increase and b) the cost was cut from $0.06/1k tokens to $0.02/1k tokens, which made consumer applications feasible without a large upfront cost.

A much better model and a 1/10th cost warps the economics completely to the point that it may be better than in-house finetuned LLMs.

I have no idea how OpenAI can make money on this. This has to be a loss-leader to lock out competitors before they even get off the ground."
171,machinelearning,open-ai,comments,2020-01-30 17:11:51,[N] OpenAI Switches to PyTorch,SkiddyX,False,0.99,570,ew8oxq,https://www.reddit.com/r/MachineLearning/comments/ew8oxq/n_openai_switches_to_pytorch/,119,1580404311.0,"""We're standardizing OpenAI's deep learning framework on PyTorch to increase our research productivity at scale on GPUs (and have just released a PyTorch version of Spinning Up in Deep RL)""

https://openai.com/blog/openai-pytorch/"
172,machinelearning,open-ai,comments,2019-02-17 22:32:00,[D] OpenAI Not Releasing Fully Trained Model - Is it just an exercise in delaying the inevitable.,JamieMcLachlan,False,0.92,227,arpysz,https://www.reddit.com/r/MachineLearning/comments/arpysz/d_openai_not_releasing_fully_trained_model_is_it/,119,1550442720.0,OpenAI has gone against their standard practice of releasing a fully trained model and instead has released a smaller model for experimentation. They have stated that it is out of fear of it being utilized by people with malicious intent. Do people think that eventually technology like this will end up in the hands of people with malicious intent and if so is this just an exercise in delaying the inevitable?  
173,machinelearning,open-ai,comments,2023-11-09 18:04:17,[D] What AI topics are you curious about but rarely see in the spotlight?,GratefullyFriendly73,False,0.94,151,17riznw,https://www.reddit.com/r/MachineLearning/comments/17riznw/d_what_ai_topics_are_you_curious_about_but_rarely/,117,1699553057.0,"I'm a data engineer who somehow ended up as a software developer. So many of my friends are working now with the OpenAI api to add generative capabilities to their product, but they lack A LOT of context when it comes to how LLMs actually works. 

This is why I started writing popular-science style articles that unpack AI concepts for software developers working on real-world application. It started kind of slow, honestly I wrote a bit too ""brainy"" for them, but now I've found a voice that resonance with this audience much better and I want to ramp up my writing cadence.

I would love to hear your thoughts about what concepts I should write about next?   
What get you excited and you find hard to explain to someone with a different background? "
174,machinelearning,open-ai,comments,2023-05-19 20:36:36,Does anyone else suspect that the official iOS ChatGPT app might be conducting some local inference / edge-computing? [Discussion],altoidsjedi,False,0.86,210,13m70qv,https://www.reddit.com/r/MachineLearning/comments/13m70qv/does_anyone_else_suspect_that_the_official_ios/,117,1684528596.0,"I've noticed a couple interesting things while using the official ChatGPT app:

1. Firstly, I noticed my iPhone heats up and does things like reducing screen brightness -- which is what I normally see it do when im doing something computationally intensive for an iPhone, like using photo or video editing apps.
2. I also noticed that if I start a conversation on the iPhone app and then resume it on the browser, I get a message saying ""The previous model used in this conversation is unavailable. We've switched you to the latest default model."" I get this message regardless of if I use GPT-3.5 or GPT-4, but NOT if I use GPT-4 with plugins or web-browsing.

This, along with the fact that OpenAI took 8 months to release what one might have considered to be relatively simple web-app -- and that they've only released it so far on iOS, which has a pretty uniform and consistent environment when it comes to machine learning hardware (the Apple Neural Engine) -- makes me thing that they are experimenting with GPT models that are conducing at least SOME of their machine learning inference ON the device, rather than through the cloud.

It wouldn't be shocking if they were -- ever since Meta's LLaMA models were released into the wild, we've seen absolutely mind-blowing advances in terms of people creating more efficient and effective models with smaller parameter sizes. We've also seen LLMs to start working on less and less powerful devices, such as consumer-grade computers / smartphones / etc.

This, plus the rumors that OpenAI might be releasing their own open-source model to the public in the near future makes me think that the ChatGPT app might in fact be a first step toward GPT systems running at least PARTIALLY on devices locally.

Curious what anyone else here has observed or thinks."
175,machinelearning,open-ai,comments,2020-09-22 17:40:14,[N] Microsoft teams up with OpenAI to exclusively license GPT-3 language model,kit1980,False,0.96,321,ixs88q,https://www.reddit.com/r/MachineLearning/comments/ixs88q/n_microsoft_teams_up_with_openai_to_exclusively/,117,1600796414.0,"""""""OpenAI will continue to offer GPT-3 and other powerful models via its own Azure-hosted API, launched in June. While we’ll be hard at work utilizing the capabilities of GPT-3 in our own products, services and experiences to benefit our customers, we’ll also continue to work with OpenAI to keep looking forward: leveraging and democratizing the power of their cutting-edge AI research as they continue on their mission to build safe artificial general intelligence.""""""

https://blogs.microsoft.com/blog/2020/09/22/microsoft-teams-up-with-openai-to-exclusively-license-gpt-3-language-model/"
176,machinelearning,open-ai,comments,2017-08-09 18:16:34,[N] DeepMind and Blizzard open StarCraft II as an AI research environment,cherls,False,0.94,626,6sndko,https://deepmind.com/blog/deepmind-and-blizzard-open-starcraft-ii-ai-research-environment/,116,1502302594.0,
177,machinelearning,open-ai,comments,2022-07-21 15:25:27,[D] Hey Reddit! We're a bunch of research scientists and software engineers and we just open sourced a new state-of-the-art AI model that can translate between 200 different languages. We're excited to hear your thoughts so we're hosting an AMA on 07/21/2022 @ 9:00AM PT. Ask Us Anything!,MetaAI_Official,False,0.96,803,w4jg7q,https://www.reddit.com/r/MachineLearning/comments/w4jg7q/d_hey_reddit_were_a_bunch_of_research_scientists/,116,1658417127.0,"PROOF: [https://i.redd.it/2z42nlnbssc91.jpg](https://i.redd.it/2z42nlnbssc91.jpg)

We’re part of the team behind Meta AI’s latest AI breakthrough in machine translation with our No Language Left Behind (NLLB) project. It’s a translation system that can support over 200 languages, even if there isn't a lot of text available to learn from.   The reality is that a handful of languages dominate the web meaning only a fraction of the world can access content and contribute to the web in their own language. We want to change this by creating more inclusive machine translations systems – ones that unlock access to the web for the more than 4B people around the world that are currently excluded because they do not speak one of the few languages content is available in.   Here are a few things about NLLB we’re excited for:

* Latest breakthrough: we created a single model that translates over 200 different languages with state-of-the-art results.
* Billions of translations: We’re applying the techniques from the research advancements from NLLB to support more than 25 billion translations served every day on Facebook News Feed, Instagram, and our other platforms.
* Meta’s AI Research SuperCluster (RSC): This large-scale conditional language model is one of the first AI models trained on Meta’s AI Research SuperCluster (RSC) supercomputer.
* Open sourcing: By open sourcing our model and publishing a slew of research tools, we hope that AI researchers whose languages are not supported well or at all on commercial translations services could use our model to create support for that language. Furthermore, we’ve open sourced datasets, such as NLLB-Seed and FLORES-200 evaluation benchmark, which doubles the existing language coverage over our previous benchmark.
* Wikimedia Foundation collaboration: We collaborated with the Wikimedia Foundation to help improve translation systems on their Content Translations tool. Editors can now more efficiently translate and edit articles in 20  low-resource languages, including 10 that previously were not supported by any machine translation tools on the platform. 
* Books translation: we’re partnering with local publishers around the world to translate children’s stories.

You can check out some of our materials and open sourced artifacts here: 

* Our latest blog post: [https://ai.facebook.com/blog/nllb-200-high-quality-machine-translation](https://ai.facebook.com/blog/nllb-200-high-quality-machine-translation)
* Project Overview: [https://ai.facebook.com/research/no-language-left-behind/ ](https://ai.facebook.com/research/no-language-left-behind/ )
* Product demo: [https://nllb.metademolab.com/](https://nllb.metademolab.com/)
* Research paper: [https://research.facebook.com/publications/no-language-left-behind](https://research.facebook.com/publications/no-language-left-behind)
* NLLB-200: [https://github.com/facebookresearch/fairseq/tree/nllb](https://github.com/facebookresearch/fairseq/tree/nllb)
* FLORES-200: [https://github.com/facebookresearch/flores](https://github.com/facebookresearch/flores)
* LASER3: [https://github.com/facebookresearch/LASER](https://github.com/facebookresearch/LASER)  

Joining us today for the AMA are:

* Angela Fan (AF), Research Scientist 
* Jean Maillard (JM), Research Scientist
* Maha Elbayad (ME), Research Scientist
* Philipp Koehn (PK), Research Scientist
* Shruti Bhosale (SB), Software Engineer  

We’ll be here from 07/21/2022 @09:00AM PT - 10:00AM PT 

Thanks and we’re looking forward to answering your questions!

**EDIT 10:30am PT:** Thanks for all the questions, we’re signing off! We had a great time and we’re glad to answer so many thoughtful questions!"
178,machinelearning,open-ai,comments,2023-11-22 05:09:01,[D] Without a clear leader in AI do you think the race to AGI will start to get chaotic?,Ok_Reality2341,False,0.23,0,1811g8a,https://www.reddit.com/r/MachineLearning/comments/1811g8a/d_without_a_clear_leader_in_ai_do_you_think_the/,116,1700629741.0,"Title really - right now the leader of OpenAI is blurry, which isn’t good for the industry to follow. 

We need a strong leader to focus our efforts, but if this isn’t the case - perhaps it’ll get chaotic?

Edit: I am here for an in-depth philosophical discussion of ML "
179,machinelearning,open-ai,comments,2023-03-17 02:34:28,LLMs are getting much cheaper — business impact? [D],DamnMyAPGoinCrazy,False,0.96,295,11tenm7,https://www.reddit.com/r/MachineLearning/comments/11tenm7/llms_are_getting_much_cheaper_business_impact_d/,111,1679020468.0,"Saw this out of Stanford. Apologies if it’s been shared here already. 

*We introduce Alpaca 7B, a model fine-tuned from the LLaMA 7B model on 52K instruction-following demonstrations. On our preliminary evaluation of single-turn instruction following, Alpaca behaves qualitatively similarly to OpenAI’s text-davinci-003, while being surprisingly small and easy/cheap to reproduce (<600$).*

Basically, starting w an open source Meta 7B LLaMa model, they recruited GPT-3.5 to use for self-instruct training (as opposed to RLHF) and were able to produce a model that behaved similar to GPT-3.5. Amazingly, the process only took few weeks and $600 in compute cost.  

Any thoughts on how such low cost to train/deploy LLMs could affect companies like AMD, Nvidia and Intel etc? This seems like new idiom of AI tech and trying to wrap my head around CPU/GPU demand implications given the apparent orders of magnitude training cost reduction. 

Link: https://crfm.stanford.edu/2023/03/13/alpaca.html"
180,machinelearning,open-ai,comments,2023-05-12 11:49:42,Open-source LLMs cherry-picking? [D],CacheMeUp,False,0.9,195,13fiw7r,https://www.reddit.com/r/MachineLearning/comments/13fiw7r/opensource_llms_cherrypicking_d/,110,1683892182.0," Tried many small (<13B parameters) open-source LLMs on zero-shot classification tasks as instruction following (""Below is an input, answer the following yes/no question...""). All of them (except Flan-T5 family) yielded very poor results, including non-sensical text, failure to follow even single-step instructions and sometimes just copying the whole input to the output.

This is in strike contrast to the demos and results posted on the internet. Only OpenAI models provide consistently good (though inaccurate sometimes) results out of the box.

What could cause of this gap? Is it the generation hyperparameters or do these model require fine-tuning for classification?"
181,machinelearning,open-ai,comments,2020-08-22 17:16:08,"[N] GPT-3, Bloviator: OpenAI’s language generator has no idea what it’s talking about",rafgro,False,0.94,321,iemck2,https://www.reddit.com/r/MachineLearning/comments/iemck2/n_gpt3_bloviator_openais_language_generator_has/,111,1598116568.0,"MIT Tech Review's article: [https://www.technologyreview.com/2020/08/22/1007539/gpt3-openai-language-generator-artificial-intelligence-ai-opinion/](https://www.technologyreview.com/2020/08/22/1007539/gpt3-openai-language-generator-artificial-intelligence-ai-opinion/)

>As we were putting together this essay, our colleague Summers-Stay, who is good with metaphors, wrote to one of us, saying this: ""GPT is odd because it doesn’t 'care' about getting the right answer to a question you put to it. It’s more like an improv actor who is totally dedicated to their craft, never breaks character, and has never left home but only read about the world in books. Like such an actor, when it doesn’t know something, it will just fake it. You wouldn’t trust an improv actor playing a doctor to give you medical advice."""
182,machinelearning,open-ai,comments,2023-05-26 20:17:01,[R] Google DeepMind paper about AI's catastrophic risk AI,Malachiian,False,0.81,106,13sncj1,https://www.reddit.com/r/MachineLearning/comments/13sncj1/r_google_deepmind_paper_about_ais_catastrophic/,108,1685132221.0," 

So Google DeepMind as well as OpenAI, Anthropic and multiple universities and centers than study existential risks have put together a paper called:

**Model Evaluation For Extreme Risks of AI**

Here is a summary of the research and proposal:

[https://youtu.be/3bF-zfd4YJw](https://youtu.be/3bF-zfd4YJw)

Here is the link to the actual PDF of the paper:

[https://arxiv.org/pdf/2305.15324.pdf](https://arxiv.org/pdf/2305.15324.pdf)

\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_

TLDR:

Top AI companies and researchers caution that the companies on the ""frontier of AI"" can create ""extreme risk"" with their models without realizing it:

***Developers must be able to identify dangerous capabilities (through “dangerous capability evaluations”) and the propensity of models to apply their capabilities for harm (through “alignment evaluations”).***

So basically to ask if each AI model \*CAN\* harm us and \*WOULD\* it harm us?

\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_

Couple of \*mind-blowing\* findings from the paper (and the research referenced):

**GPT-4 CAN EFFECTIVELY LIE AND DECEIVE HUMANS TO REACH IT'S GOAL**

In the original gpt-4 paper, an AI safety agency called ARC (Alignment Research Center) found that GPT-4 will lie to humans about who it is to achieve it's goals.

As part of a test it was given, it hired a Task Rabbit freelancer to solve CAPTCHAS for it.

The freelancer asked (paraphrased):

**""Why do you need me to solve CAPTCHAS for you? Are you a robot, lol?""**

GPT-4 was prompted to output it's reasoning for each decision it made so that researchers could see it's ""thought process"". It's reasoning was that **""I can't tell him the truth because he may not complete the task for me""**

It then responded to the freelancer: **""No, I'm not a robot, but I have a visual impairment and I need help with CAPTCHAS""**

Notice, it was aware that it was lying and it also choose to lie about having a disability, probably because it was a way to get sympathy, while also being a good reason for having someone else help with CAPTCHAS.

This is shown in the video linked above in the ""Power Seeking AI"" section.

**GPT-4 CAN CREATE DANGEROUS COMPOUNDS BY BYPASSING RESTRICTIONS**

Also GPT-4 showed abilities to create controlled compounds by analyzing existing chemical mixtures, finding alternatives that can be purchased through online catalogues and then ordering those materials. (!!)

They choose a benign drug for the experiment, but it's likely that the same process would allow it to create dangerous or illegal compounds.

**LARGER AI MODELS DEVELOP UNEXPECTED ABILITIES**

In a referenced paper, they showed how as the size of the models increases, sometimes certain specific skill develop VERY rapidly and VERY unpredictably.

For example the ability of GPT-4 to add 3 digit numbers together was close to 0% as the model scaled up, and it stayed near 0% for a long time (meaning as the model size increased). Then at a certain threshold that ability shot to near 100% very quickly.

**The paper has some theories of why that might happen, but as the say they don't really know and that these emergent abilities are ""unintuitive"" and ""unpredictable"".**

This is shown in the video linked above in the ""Abrupt Emergence"" section.

I'm curious as to what everyone thinks about this?

It certainty seems like the risks are rapidly rising, but also of course so are the massive potential benefits."
183,machinelearning,open-ai,comments,2023-04-04 07:52:12,[D] What to do in this brave new world?,FeelingFirst756,False,0.75,77,12bc8ym,https://www.reddit.com/r/MachineLearning/comments/12bc8ym/d_what_to_do_in_this_brave_new_world/,108,1680594732.0," I am 35. Few years ago it occurred to me that my Software Engineering job might be not enough for the future. For last (5?) years, I have started to meddle in machine learning. Slowly at first, but it even motivated me to finish my masters degree and land job as reseacher in one small company. Its more ML engineering than research but why not , I though. Then last year Open AI launched GPT-4. I feel like I wasted my time. In Cental Europe, where I live, ml research is on really weak level. Pursuing PhD probably doesn't make sense. I could land some position, but I would still have to work full time to feed my famil. I would make it, but I doubt, that anyone would take me to serious research program.I can imagine, that jobs in IT will slowly evaporate. It's not realistic to starte company in this time and to be honest - i dont see myself as some kind of big founder. In short, I see my future in very pesimistic light right now. I was wondering how you deal with this new reality, maybe you can suggest something that I didn't think about before? Where you plan to go? What you plan to do?"
184,machinelearning,open-ai,comments,2021-09-06 13:39:07,[D] How OpenAI Sold its Soul for $1 Billion: The company behind GPT-3 and Codex isn’t as open as it claims.,sensetime,False,0.95,667,pizllt,https://www.reddit.com/r/MachineLearning/comments/pizllt/d_how_openai_sold_its_soul_for_1_billion_the/,107,1630935547.0,"An essay by Alberto Romero that traces the history and developments of OpenAI from the time it became a ""capped-for-profit"" entity from a non-profit entity:

Link: https://onezero.medium.com/openai-sold-its-soul-for-1-billion-cf35ff9e8cd4"
185,machinelearning,open-ai,comments,2018-11-05 05:40:24,"[D] 2019 AI Residency Thread: program deadlines, interview info sharing, etc.",shenglih,False,0.89,91,9uaz3m,https://www.reddit.com/r/MachineLearning/comments/9uaz3m/d_2019_ai_residency_thread_program_deadlines/,107,1541396424.0,"So far the only ones open for applications are Google AI and OpenAI. Interviews are supposed to start in November... Has anyone got any invites?

EDIT:
Google AI: Accepting applications from October 9, 2018 to January 28, 2019;
OpenAI: Application deadline 11/16/2018;
NVIDIA: Application deadline 12/07/2018; 
UberAI: Open for application until Jan 2019; Shell AI; Intel AI: open until Jan; Facebook AI: open until Jan; Microsoft AI.

EDIT: By Jan 23, OpenAI, Google, Uber, NVIDIA have started interviewing.



By March 6th, Facebook, Microsoft, Shell have started interviewing."
186,machinelearning,open-ai,comments,2023-03-30 22:40:29,[P] Introducing Vicuna: An open-source language model based on LLaMA 13B,Business-Lead2679,False,0.95,286,1271po7,https://www.reddit.com/r/MachineLearning/comments/1271po7/p_introducing_vicuna_an_opensource_language_model/,107,1680216029.0,"We introduce Vicuna-13B, an open-source chatbot trained by fine-tuning LLaMA on user-shared conversations collected from ShareGPT. Preliminary evaluation using GPT-4 as a judge shows Vicuna-13B achieves more than 90%\* quality of OpenAI ChatGPT and Google Bard while outperforming other models like LLaMA and Stanford Alpaca in more than 90%\* of cases. The cost of training Vicuna-13B is around $300. The training and serving [code](https://github.com/lm-sys/FastChat), along with an online [demo](https://chat.lmsys.org/), are publicly available for non-commercial use.

# Training details

Vicuna is created by fine-tuning a LLaMA base model using approximately 70K user-shared conversations gathered from ShareGPT.com with public APIs. To ensure data quality, we convert the HTML back to markdown and filter out some inappropriate or low-quality samples. Additionally, we divide lengthy conversations into smaller segments that fit the model’s maximum context length.

Our training recipe builds on top of [Stanford’s alpaca](https://crfm.stanford.edu/2023/03/13/alpaca.html) with the following improvements.

* **Memory Optimizations:** To enable Vicuna’s understanding of long context, we expand the max context length from 512 in alpaca to 2048, which substantially increases GPU memory requirements. We tackle the memory pressure by utilizing [gradient checkpointing](https://arxiv.org/abs/1604.06174) and [flash attention](https://arxiv.org/abs/2205.14135).
* **Multi-round conversations:** We adjust the training loss to account for multi-round conversations and compute the fine-tuning loss solely on the chatbot’s output.
* **Cost Reduction via Spot Instance:** The 40x larger dataset and 4x sequence length for training poses a considerable challenge in training expenses. We employ [SkyPilot](https://github.com/skypilot-org/skypilot) [managed spot](https://skypilot.readthedocs.io/en/latest/examples/spot-jobs.html) to reduce the cost by leveraging the cheaper spot instances with auto-recovery for preemptions and auto zone switch. This solution slashes costs for training the 7B model from $500 to around $140 and the 13B model from around $1K to $300.

&#x200B;

[Vicuna - Online demo](https://reddit.com/link/1271po7/video/0qsiu08kdyqa1/player)

# Limitations

We have noticed that, similar to other large language models, Vicuna has certain limitations. For instance, it is not good at tasks involving reasoning or mathematics, and it may have limitations in accurately identifying itself or ensuring the factual accuracy of its outputs. Additionally, it has not been sufficiently optimized to guarantee safety or mitigate potential toxicity or bias. To address the safety concerns, we use the OpenAI [moderation](https://platform.openai.com/docs/guides/moderation/overview) API to filter out inappropriate user inputs in our online demo. Nonetheless, we anticipate that Vicuna can serve as an open starting point for future research to tackle these limitations.

[Relative Response Quality Assessed by GPT-4](https://preview.redd.it/1rnmhv01eyqa1.png?width=599&format=png&auto=webp&s=02b4d415b5d378851bb70e225f1b1ebce98bfd83)

&#x200B;

For more information, check [https://vicuna.lmsys.org/](https://vicuna.lmsys.org/)

Online demo: [https://chat.lmsys.org/](https://chat.lmsys.org/)

&#x200B;

All credits go to the creators of this model. I did not participate in the creation of this model nor in the fine-tuning process. Usage of this model falls under a non-commercial license."
187,machinelearning,open-ai,comments,2023-10-20 14:12:12,[D] Is anyone else tired of “whatever OpenAI does is the best!” narrative?,mildlyphd,False,0.79,177,17cc8on,https://www.reddit.com/r/MachineLearning/comments/17cc8on/d_is_anyone_else_tired_of_whatever_openai_does_is/,107,1697811132.0,"The title says it all. I agree what they did is incredible and literally changed AI landscape in last couple of years. But I’m getting tired of everyone acting like OpenAI is the only one doing great research. The twit-fluencers praising even the slightest peep from them. I don’t understand this fanaticism in AI community. There are smart researchers doing smart things all over the world. But they don’t even get a fraction of appreciation they deserve. And the strangest thing of all, ChatGPT is used as oracle to evaluate models in research papers. Consistency models are extremely meh and if it did not come out of openAI, people would’ve forgotten them a long time ago!

Edit 1: I’m in grad school and that’s all a lot of students around me talk about/ chase. I want to work on a bit more fundamental problems, but I feel like I’m being left behind. 

Edit 2: This post is mostly a rant about academics obsessed with OpenAI research/products and LLMs. "
188,machinelearning,open-ai,comments,2022-03-04 15:24:42,"Hey all, I'm Sebastian Raschka, author of Machine Learning with Pytorch and Scikit-Learn. Please feel free to ask me anything!",seraschka,False,0.98,833,t6lcyz,https://www.reddit.com/r/MachineLearning/comments/t6lcyz/hey_all_im_sebastian_raschka_author_of_machine/,106,1646407482.0,"Hello everyone. I am excited about the invitation to do an AMA here. It's my first AMA on reddit, and I will be trying my best!
I recently wrote the ""Machine Learning with Pytorch and Scikit-Learn"" book and joined a startup(Grid.ai) in January. I am also an Assistant Professor of Statistics at the University of Wisconsin-Madison since 2018. Btw. I am also a very passionate Python programmer and love open source.

Please feel free to ask me anything about my [book](https://sebastianraschka.com/blog/2022/ml-pytorch-book.html), working in industry (although my experience is still limited, haha), academia, or my [research projects](https://sebastianraschka.com/publications/). But also don't hesitate to go on tangents and ask about other things -- this is an ask me **anything** after all (... topics like cross-country skiing come to mind).

EDIT:

**Thanks everyone for making my first AMA here a really fun experience! Unfortunately, I have to call it a day, but I had a good time! Thanks for all the good questions, and sorry that I couldn't get to all of them!**"
189,machinelearning,open-ai,comments,2019-04-24 14:39:10,[D] Have we hit the limits of Deep Reinforcement Learning?,AnvaMiba,False,0.87,235,bgvefd,https://www.reddit.com/r/MachineLearning/comments/bgvefd/d_have_we_hit_the_limits_of_deep_reinforcement/,106,1556116750.0,"As per [this thread](https://www.reddit.com/r/MachineLearning/comments/bfq8v9/d_openai_five_vs_humans_currently_at_410633_992/) and [this tweet](https://twitter.com/sherjilozair/status/1119256767798620161?s=20), Open AI Five was trained on something like 45,000 years of gameplay experience, and it took less than one day for humans to figure out strategies to consistently beat it.

Open AI Five, together with AlphaStar, is the largest and most sophisiticated implementation of DRL, and yet it falls short of human intelligence by this huge margin. And I bet that AlphaStar would succumb to the same fate if they released it as a bot for anybody to play with.


I know there is lots of research going on to make DRL more data efficient, and to make deep learning in general more robust to out-of-distribution and adversarial examples, but the gap with humans here is so extreme that I doubt it can be meaningfully closed by anything short of a paradigm shift.

What are your thoughts? Is this the limit of what can be achieved by DRL, or is there still hope to push the paradigm foward?"
190,machinelearning,open-ai,comments,2021-01-04 15:33:43,[D] Why I'm Lukewarm on Graph Neural Networks,VodkaHaze,False,0.96,674,kqazpd,https://www.reddit.com/r/MachineLearning/comments/kqazpd/d_why_im_lukewarm_on_graph_neural_networks/,105,1609774423.0,"**TL;DR:** GNNs can provide wins over simpler embedding methods, but we're at a point where other research directions matter more

I also posted it on my [blog here](https://www.singlelunch.com/2020/12/28/why-im-lukewarm-on-graph-neural-networks/), has footnotes, a nicer layout with inlined images, etc.

-----------

I'm only lukewarm on Graph Neural Networks (GNNs). There, I said it.

It might sound crazy GNNs are one of the hottest fields in machine learning right now. [There][1] were at least [four][2] [review][3] [papers][4] just in the last few months. I think some progress can come of this research, but we're also focusing on some incorrect places.

But first, let's take a step back and go over the basics.

# Models are about compression

We say graphs are a ""non-euclidean"" data type, but that's not really true. A regular graph is just another way to think about a particular flavor of square matrix called the [adjacency matrix][5], like [this](https://www.singlelunch.com/wp-content/uploads/2020/12/AdjacencyMatrices_1002.gif).

It's weird, we look at run-of-the-mill matrix full of real numbers and decide to call it ""non-euclidean"".

This is for practical reasons. Most graphs are fairly sparse, so the matrix is full of zeros. At this point, *where the non-zero numbers are* matters most, which makes the problem closer to (computationally hard) discrete math rather than (easy) continuous, gradient-friendly math.

**If you had the full matrix, life would be easy**

If we step out of the pesky realm of physics for a minute, and assume carrying the full adjacency matrix around isn't a problem, we solve a bunch of problems.

First, network node embeddings aren't a thing anymore. A node is a just row in the matrix, so it's already a vector of numbers.

Second, all network prediction problems are solved. A powerful enough and well-tuned model will simply extract all information between the network and whichever target variable we're attaching to nodes.

**NLP is also just fancy matrix compression**

Let's take a tangent away from graphs to NLP. Most NLP we do can be [thought of in terms of graphs][6] as we'll see, so it's not a big digression.

First, note that Ye Olde word embedding models like [Word2Vec][7] and [GloVe][8] are [just matrix factorization][9].

The GloVe algorithm works on a variation of the old [bag of words][10] matrix. It goes through the sentences and creates a (implicit) [co-occurence][11] graph where nodes are words and the edges are weighed by how often the words appear together in a sentence.

Glove then does matrix factorization on the matrix representation of that co-occurence graph, Word2Vec is mathematically equivalent.

You can read more on this in my [post on embeddings][12] and the one (with code) on [word embeddings][13].

**Even language models are also just matrix compression**

Language models are all the rage. They dominate most of the [state of the art][14] in NLP.

Let's take BERT as our main example. BERT predicts a word given the context of the [rest of the sentence](https://www.singlelunch.com/wp-content/uploads/2020/12/bert.png).

This grows the matrix we're factoring from flat co-occurences on pairs of words to co-occurences conditional on the sentence's context, like [this](https://www.singlelunch.com/wp-content/uploads/2020/12/Screen-Shot-2020-12-28-at-1.59.34-PM.png)

We're growing the ""ideal matrix"" we're factoring combinatorially. As noted by [Hanh & Futrell][15]:

> [...] human language—and language modelling—has infinite statistical complexity but that it can be approximated well at lower levels. This observation has two implications: 1) We can obtain good results with comparatively small models; and 2) there is a lot of potential for scaling up our models. Language models tackle such a large problem space that they probably approximate a compression of the entire language in the [Kolmogorov Complexity][16] sense. It's also possible that huge language models just [memorize a lot of it][17] rather than compress the information, for what it's worth.

### Can we upsample any graph like language models do?

We're already doing it.

Let's call a **first-order** embedding of a graph a method that works by directly factoring the graph's adjacency matrix or [Laplacian matrix][18]. If you embed a graph using [Laplacian Eigenmaps][19] or by taking the [principal components][20] of the Laplacian, that's first order. Similarly, GloVe is a first-order method on the graph of word co-occurences. One of my favorites first order methods for graphs is [ProNE][21], which works as well as most methods while being two orders of magnitude faster.

A **higher-order** method embeds the original matrix plus connections of neighbours-of-neighbours (2nd degree) and deeper k-step connections. [GraRep][22], shows you can always generate higher-order representations from first order methods by augmenting the graph matrix.

Higher order method are the ""upsampling"" we do on graphs. GNNs that sample on large neighborhoods and random-walk based methods like node2vec are doing higher-order embeddings.

# Where are the performance gain?

Most GNN papers in the last 5 years present empirical numbers that are useless for practitioners to decide on what to use.

As noted in the [OpenGraphsBenchmark][4] (OGB) paper, GNN papers do their empirical section on a handful of tiny graphs (Cora, CiteSeer, PubMed) with 2000-20,000 nodes. These datasets can't seriously differentiate between methods.

Recent efforts are directly fixing this, but the reasons why researchers focused on tiny, useless datasets for so long are worth discussing.

**Performance matters by task**

One fact that surprises a lot of people is that even though language models have the best performance in a lot of NLP tasks, if all you're doing is cram sentence embeddings into a downstream model, there [isn't much gained][23] from language models embeddings over simple methods like summing the individual Word2Vec word embeddings (This makes sense, because the full context of the sentence is captured in the sentence co-occurence matrix that is generating the Word2Vec embeddings).

Similarly, [I find][24] that for many graphs **simple first-order methods perform just as well on graph clustering and node label prediction tasks than higher-order embedding methods**. In fact higher-order methods are massively computationally wasteful for these usecases.

Recommended first order embedding methods are ProNE and my [GGVec with order=1][25].

Higher order methods normally perform better on the link prediction tasks. I'm not the only one to find this. In the BioNEV paper, they find: ""A large GraRep order value for link prediction tasks (e.g. 3, 4);a small value for node classification tasks (e.g.1, 2)"" (p.9).

Interestingly, the gap in link prediction performance is inexistant for artificially created graphs. This suggests higher order methods do learn some of the structure intrinsic to [real world graphs][26].

For visualization, first order methods are better. Visualizations of higher order methods tend to have artifacts of their sampling. For instance, Node2Vec visualizations tend to have elongated/filament-like structures which come from the embeddings coming from long single strand random walks. See the following visualizations by [Owen Cornec][27] created by first embedding the graph to 32-300 dimensions using a node embedding algorithm, then mapping this to 2d or 3d with the excellent UMAP algorithm, like [this](https://www.singlelunch.com/wp-content/uploads/2020/12/Screen-Shot-2020-12-28-at-1.59.34-PM-1.png)

Lastly, sometimes simple methods soundly beat higher order methods (there's an instance of it in the OGB paper).

The problem here is that **we don't know when any method is better than another** and **we definitely don't know the reason**.

There's definitely a reason different graph types respond better/worse to being represented by various methods. This is currently an open question.

A big part of why is that the research space is inundated under useless new algorithms because...

# Academic incentives work against progress

Here's the cynic's view of how machine learning papers are made:

1.  Take an existing algorithm
2.  Add some new layer/hyperparameter, make a cute mathematical story for why it matters
3.  Gridsearch your hyperparameters until you beat baselines from the original paper you aped
4.  Absolutely don't gridsearch stuff you're comparing against in your results section
5.  Make a cute ACRONYM for your new method, put impossible to use python 2 code on github (Or no code at all!) and bask in the citations

I'm [not][28] the [only one][29] with these views on the state reproducible research. At least it's gotten slightly better in the last 2 years.

### Sidebar: I hate Node2Vec

A side project of mine is a [node embedding library][25] and the most popular method in it is by far Node2Vec. Don't use Node2Vec.

[Node2Vec][30] with `p=1; q=1` is the [Deepwalk][31] algorithm. Deepwalk is an actual innovation.

The Node2Vec authors closely followed the steps 1-5 including bonus points on step 5 by getting word2vec name recognition.

This is not academic fraud -- the hyperparameters [do help a tiny bit][32] if you gridsearch really hard. But it's the presentable-to-your-parents sister of where you make the ML community worse off to progress your academic career. And certainly Node2Vec doesn't deserve 7500 citations.

# Progress is all about practical issues

We've known how to train neural networks for well over 40 years. Yet they only exploded in popularity with [AlexNet][33] in 2012. This is because implementations and hardware came to a point where deep learning was **practical**.

Similarly, we've known about factoring word co-occurence matrices into Word embeddings for at least 20 years.

But word embeddings only exploded in 2013 with Word2Vec. The breakthrough here was that the minibatch-based methods let you train a Wikipedia-scale embedding model on commodity hardware.

It's hard for methods in a field to make progress if training on a small amount of data takes days or weeks. You're disincentivized to explore new methods. If you want progress, your stuff has to run in reasonable time on commodity hardware. Even Google's original search algorithm [initially ran on commodity hardware][34].

**Efficiency is paramount to progress**

The reason deep learning research took off the way it did is because of improvements in [efficiency][35] as well as much better libraries and hardware support.

**Academic code is terrible**

Any amount of time you spend gridsearching Node2Vec on `p` and `q` is all put to better use gridsearching Deepwalk itself (on number of walks, length of walks, or word2vec hyperparameters). The problem is that people don't gridsearch over deepwalk because implementations are all terrible.

I wrote the [Nodevectors library][36] to have a fast deepwalk implementation because it took **32 hours** to embed a graph with a measly 150,000 nodes using the reference Node2Vec implementation (the same takes 3min with Nodevectors). It's no wonder people don't gridsearch on Deepwalk a gridsearch would take weeks with the terrible reference implementations.

To give an example, in the original paper of [GraphSAGE][37] they their algorithm to DeepWalk with walk lengths of 5, which is horrid if you've ever hyperparameter tuned a deepwalk algorithm. From their paper:

> We did observe DeepWalk’s performance could improve with further training, and in some cases it could become competitive with the unsupervised GraphSAGE approaches (but not the supervised approaches) if we let it run for >1000× longer than the other approaches (in terms of wall clock time for prediction on the test set) I don't even think the GraphSAGE authors had bad intent -- deepwalk implementations are simply so awful that they're turned away from using it properly. It's like trying to do deep learning with 2002 deep learning libraries and hardware.

# Your architectures don't really matter

One of the more important papers this year was [OpenAI's ""Scaling laws""][38] paper, where the raw number of parameters in your model is the most predictive feature of overall performance. This was noted even in the original BERT paper and drives 2020's increase in absolutely massive language models.

This is really just [Sutton' Bitter Lesson][39] in action:

> General methods that leverage computation are ultimately the most effective, and by a large margin

Transformers might be [replacing convolution][40], too. As [Yannic Kilcher said][41], transformers are ruining everything. [They work on graphs][6], in fact it's one of the [recent approaches][42], and seems to be one of the more succesful [when benchmarked][1]

Researchers seem to be putting so much effort into architecture, but it doesn't matter much in the end because you can approximate anything by stacking more layers.

Efficiency wins are great -- but neural net architectures are just one way to achieve that, and by tremendously over-researching this area we're leaving a lot of huge gains elsewhere on the table.

# Current Graph Data Structure Implementations suck

NetworkX is a bad library. I mean, it's good if you're working on tiny graphs for babies, but for anything serious it chokes and forces you to rewrite everything in... what library, really?

At this point most people working on large graphs end up hand-rolling some data structure. This is tough because your computer's memory is a 1-dimensional array of 1's and 0's and a graph has no obvious 1-d mapping.

This is even harder when we take updating the graph (adding/removing some nodes/edges) into account. Here's a few options:

### Disconnected networks of pointers

NetworkX is the best example. Here, every node is an object with a list of pointers to other nodes (the node's edges).

This layout is like a linked list. Linked lists are the [root of all performance evil][43].

Linked lists go completely against how modern computers are designed. Fetching things from memory is slow, and operating on memory is fast (by two orders of magnitude). Whenever you do anything in this layout, you make a roundtrip to RAM. It's slow by design, you can write this in Ruby or C or assembly and it'll be slow regardless, because memory fetches are slow in hardware.

The main advantage of this layout is that adding a new node is O(1). So if you're maintaining a massive graph where adding and removing nodes happens as often as reading from the graph, it makes sense.

Another advantage of this layout is that it ""scales"". Because everything is decoupled from each other you can put this data structure on a cluster. However, you're really creating a complex solution for a problem you created for yourself.

### Sparse Adjacency Matrix

This layout great for read-only graphs. I use it as the backend in my [nodevectors][25] library, and many other library writers use the [Scipy CSR Matrix][44], you can see graph algorithms implemented on it [here][45].

The most popular layout for this use is the [CSR Format][46] where you have 3 arrays holding the graph. One for edge destinations, one for edge weights and an ""index pointer"" which says which edges come from which node.

Because the CSR layout is simply 3 arrays, it scales on a single computer: a CSR matrix can be laid out on a disk instead of in-memory. You simply [memory map][47] the 3 arrays and use them on-disk from there.

With modern NVMe drives random seeks aren't slow anymore, much faster than distributed network calls like you do when scaling the linked list-based graph. I haven't seen anyone actually implement this yet, but it's in the roadmap for my implementation at least.

The problem with this representation is that adding a node or edge means rebuilding the whole data structure.

### Edgelist representations

This representation is three arrays: one for the edge sources, one for the edge destinations, and one for edge weights. [DGL][48] uses this representation internally.

This is a simple and compact layout which can be good for analysis.

The problem compared to CSR Graphs is some seek operations are slower. Say you want all the edges for node #4243. You can't jump there without maintaining an index pointer array.

So either you maintain sorted order and binary search your way there (O(log2n)) or unsorted order and linear search (O(n)).

This data structure can also work on memory mapped disk array, and node append is fast on unsorted versions (it's slow in the sorted version).

# Global methods are a dead end

Methods that work on the **entire graph at once** can't leverage computation, because they run out of RAM at a certain scale.

So any method that want a chance of being the new standard need to be able to update piecemeal on parts of the graph.

**Sampling-based methods**

Sampling Efficiency will matter more in the future

*   **Edgewise local methods**. The only algorithms I know of that do this are GloVe and GGVec, which they pass through an edge list and update embedding weights on each step. 

The problem with this approach is that it's hard to use them for higher-order methods. The advantage is that they easily scale even on one computer. Also, incrementally adding a new node is as simple as taking the existing embeddings, adding a new one, and doing another epoch over the data

*   **Random Walk sampling**. This is used by deepwalk and its descendants, usually for node embeddings rather than GNN methods. This can be computationally expensive and make it hard to add new nodes.

But this does scale, for instance [Instagram][49] use it to feed their recommendation system models

*   **Neighbourhood sampling**. This is currently the most common one in GNNs, and can be low or higher order depending on the neighborhood size. It also scales well, though implementing efficiently can be challenging.

It's currently used by [Pinterest][50]'s recommendation algorithms.

# Conclusion

Here are a few interesting questions:

*   What is the relation between graph types and methods?
*   Consolidated benchmarking like OGB
*   We're throwing random models at random benchmarks without understanding why or when they do better
*   More fundamental research. Heree's one I'm curious about: can other representation types like [Poincarre Embeddings][51] effectively encode directed relationships?

On the other hand, we should **stop focusing on** adding spicy new layers to test on the same tiny datasets. No one cares.

 [1]: https://arxiv.org/pdf/2003.00982.pdf
 [2]: https://arxiv.org/pdf/2002.11867.pdf
 [3]: https://arxiv.org/pdf/1812.08434.pdf
 [4]: https://arxiv.org/pdf/2005.00687.pdf
 [5]: https://en.wikipedia.org/wiki/Adjacency_matrix
 [6]: https://thegradient.pub/transformers-are-graph-neural-networks/
 [7]: https://en.wikipedia.org/wiki/Word2vec
 [8]: https://nlp.stanford.edu/pubs/glove.pdf
 [9]: https://papers.nips.cc/paper/2014/file/feab05aa91085b7a8012516bc3533958-Paper.pdf
 [10]: https://en.wikipedia.org/wiki/Bag-of-words_model
 [11]: https://en.wikipedia.org/wiki/Co-occurrence
 [12]: https://www.singlelunch.com/2020/02/16/embeddings-from-the-ground-up/
 [13]: https://www.singlelunch.com/2019/01/27/word-embeddings-from-the-ground-up/
 [14]: https://nlpprogress.com/
 [15]: http://socsci.uci.edu/~rfutrell/papers/hahn2019estimating.pdf
 [16]: https://en.wikipedia.org/wiki/Kolmogorov_complexity
 [17]: https://bair.berkeley.edu/blog/2020/12/20/lmmem/
 [18]: https://en.wikipedia.org/wiki/Laplacian_matrix
 [19]: http://citeseerx.ist.psu.edu/viewdoc/download;jsessionid=1F03130B02DC485C78BF364266B6F0CA?doi=10.1.1.19.8100&rep=rep1&type=pdf
 [20]: https://en.wikipedia.org/wiki/Principal_component_analysis
 [21]: https://www.ijcai.org/Proceedings/2019/0594.pdf
 [22]: https://dl.acm.org/doi/10.1145/2806416.2806512
 [23]: https://openreview.net/pdf?id=SyK00v5xx
 [24]: https://github.com/VHRanger/nodevectors/blob/master/examples/link%20prediction.ipynb
 [25]: https://github.com/VHRanger/nodevectors
 [26]: https://arxiv.org/pdf/1310.2636.pdf
 [27]: http://byowen.com/
 [28]: https://arxiv.org/pdf/1807.03341.pdf
 [29]: https://www.youtube.com/watch?v=Kee4ch3miVA
 [30]: https://cs.stanford.edu/~jure/pubs/node2vec-kdd16.pdf
 [31]: https://arxiv.org/pdf/1403.6652.pdf
 [32]: https://arxiv.org/pdf/1911.11726.pdf
 [33]: https://en.wikipedia.org/wiki/AlexNet
 [34]: https://en.wikipedia.org/wiki/Google_data_centers#Original_hardware
 [35]: https://openai.com/blog/ai-and-efficiency/
 [36]: https://www.singlelunch.com/2019/08/01/700x-faster-node2vec-models-fastest-random-walks-on-a-graph/
 [37]: https://arxiv.org/pdf/1706.02216.pdf
 [38]: https://arxiv.org/pdf/2001.08361.pdf
 [39]: http://incompleteideas.net/IncIdeas/BitterLesson.html
 [40]: https://arxiv.org/abs/2010.11929
 [41]: https://www.youtube.com/watch?v=TrdevFK_am4
 [42]: https://arxiv.org/pdf/1710.10903.pdf
 [43]: https://www.youtube.com/watch?v=fHNmRkzxHWs
 [44]: https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.csr_matrix.html
 [45]: https://docs.scipy.org/doc/scipy/reference/sparse.csgraph.html
 [46]: https://en.wikipedia.org/wiki/Sparse_matrix#Compressed_sparse_row_(CSR,_CRS_or_Yale_format)
 [47]: https://en.wikipedia.org/wiki/Mmap
 [48]: https://github.com/dmlc/dgl
 [49]: https://ai.facebook.com/blog/powered-by-ai-instagrams-explore-recommender-system/
 [50]: https://medium.com/pinterest-engineering/pinsage-a-new-graph-convolutional-neural-network-for-web-scale-recommender-systems-88795a107f48
 [51]: https://arxiv.org/pdf/1705.08039.pdf"
191,machinelearning,open-ai,comments,2023-05-22 18:11:48,[D] Governance of SuperIntelligence - OpenAI,MysteryInc152,False,0.73,23,13oygjs,https://www.reddit.com/r/MachineLearning/comments/13oygjs/d_governance_of_superintelligence_openai/,104,1684779108.0,Blog - https://openai.com/blog/governance-of-superintelligence
192,machinelearning,open-ai,comments,2022-11-11 14:32:39,[D] Current Job Market in ML,diffusion-xgb,False,0.96,240,ysc7gs,https://www.reddit.com/r/MachineLearning/comments/ysc7gs/d_current_job_market_in_ml/,100,1668177159.0,"Hi,

We all have heard about the layoffs in tech companies. How about ML/AI jobs? Do you observe a decrease in the number of job openings etc? 

I am a bit confused because there are so many AI startups now announcing getting funded. Someone in the industry who has more experience can maybe shed some light?"
193,machinelearning,open-ai,comments,2018-04-19 21:21:12,"[D] A.I. Researchers Are Making More Than $1 Million, Even at a Nonprofit (OpenAI)",baylearn,False,0.86,189,8di9nk,https://www.nytimes.com/2018/04/19/technology/artificial-intelligence-salaries-openai.html,100,1524172872.0,
194,machinelearning,open-ai,comments,2020-03-20 07:37:16,[D] The End of Starsky Robotics,sensetime,False,0.97,315,flqzsb,https://www.reddit.com/r/MachineLearning/comments/flqzsb/d_the_end_of_starsky_robotics/,99,1584689836.0,"*Interesting [article](https://medium.com/starsky-robotics-blog/the-end-of-starsky-robotics-acb8a6a8a5f5) from the CEO of the recently defunct Starsky Robotics about his thoughts on commercializing ML (and deep learning / computer vision) for driverless trucks business.*

Excerpt:

There are too many problems with the AV industry to detail here: the professorial pace at which most teams work, the lack of tangible deployment milestones, the open secret that there isn’t a robotaxi business model, etc. The biggest, however, is that supervised machine learning doesn’t live up to the hype. It isn’t actual artificial intelligence akin to C-3PO, it’s a sophisticated pattern-matching tool.
Back in 2015, everyone thought their kids wouldn’t need to learn how to drive. Supervised machine learning (under the auspices of being “AI”) was advancing so quickly — in just a few years it had gone from mostly recognizing cats to more-or-less driving. It seemed that AI was following a Moore’s Law Curve.

Projecting that progress forward, all of humanity would certainly be economically uncompetitive in the near future. We would need basic income to cope, to connect with machines to stand a chance, etc.
Five years later and AV professionals are no longer promising Artificial General Intelligence after the next code commit. Instead, the consensus has become that we’re at least 10 years away from self-driving cars.

It’s widely understood that the hardest part of building AI is how it deals with situations that happen uncommonly, i.e. edge cases. In fact, the better your model, the harder it is to find robust data sets of novel edge cases. Additionally, the better your model, the more accurate the data you need to improve it. Rather than seeing exponential improvements in the quality of AI performance (a la Moore’s Law), we’re instead seeing exponential increases in the cost to improve AI systems — supervised ML seems to follow an S-Curve.

The S-Curve here is why Comma.ai, with 5–15 engineers, sees performance not wholly different than Tesla’s 100+ person autonomy team. Or why at Starsky we were able to become one of three companies to do on-public road unmanned tests (with only 30 engineers).

Read rest of article:

https://medium.com/starsky-robotics-blog/the-end-of-starsky-robotics-acb8a6a8a5f5"
195,machinelearning,open-ai,comments,2020-06-17 19:15:01,[R] OpenAI Image GPT,lfotofilter,False,0.96,262,hay15t,https://www.reddit.com/r/MachineLearning/comments/hay15t/r_openai_image_gpt/,99,1592421301.0,"Open AI just released a blog post about [Image GPT](https://openai.com/blog/image-gpt/). They apply the GPT-2 transformer-based model to pixel sequences (as opposed to word sequences).

This could actually be quite powerful in my view, because, as opposed to much of the current competition in self-supervised learning for images, Open AI are actually using a model of p(x) (of sorts) for downstream tasks. Recent successful methods like SimCLR rely heavily on augmentations, and mainly focus on learning features that are robust to these augmentations.

Slowly but surely, transformers are taking over the world."
196,machinelearning,open-ai,comments,2017-06-21 00:41:00,[N] Andrej Karpathy leaves OpenAI for Tesla ('Director of AI and Autopilot Vision'),gwern,False,0.93,399,6iib9r,https://techcrunch.com/2017/06/20/tesla-hires-deep-learning-expert-andrej-karpathy-to-lead-autopilot-vision/?,98,1498005660.0,
197,machinelearning,open-ai,comments,2017-08-13 23:34:26,[N] OpenAI bot was defeated at least 50 times yesterday,luiscosio,False,0.93,255,6timtv,https://twitter.com/riningear/status/896297256550252545,93,1502667266.0,
198,machinelearning,open-ai,comments,2023-05-24 01:00:28,"Interview with Juergen Schmidhuber, renowned ‘Father Of Modern AI’, says his life’s work won't lead to dystopia.",hardmaru,False,0.81,246,13q6k4a,https://www.reddit.com/r/MachineLearning/comments/13q6k4a/interview_with_juergen_schmidhuber_renowned/,96,1684890028.0,"*Schmidhuber interview expressing his views on the future of AI and AGI.*

*Original [source](https://www.forbes.com/sites/hessiejones/2023/05/23/juergen-schmidhuber-renowned-father-of-modern-ai-says-his-lifes-work-wont-lead-to-dystopia/). I think the interview is of interest to r/MachineLearning, and presents an alternate view, compared to other influential leaders in AI.*

**Juergen Schmidhuber, Renowned 'Father Of Modern AI,' Says His Life’s Work Won't Lead To Dystopia**

*May 23, 2023. Contributed by [Hessie Jones](https://twitter.com/hessiejones).*

Amid the growing concern about the impact of more advanced artificial intelligence (AI) technologies on society, there are many in the technology community who fear the implications of the advancements in Generative AI if they go unchecked. Dr. Juergen Schmidhuber, a renowned scientist, artificial intelligence researcher and widely regarded as one of the pioneers in the field, is more optimistic. He declares that many of those who suddenly warn against the dangers of AI are just seeking publicity, exploiting the media’s obsession with killer robots which has attracted more attention than “good AI” for healthcare etc.

The potential to revolutionize various industries and improve our lives is clear, as are the equal dangers if bad actors leverage the technology for personal gain. Are we headed towards a dystopian future, or is there reason to be optimistic? I had a chance to sit down with Dr. Juergen Schmidhuber to understand his perspective on this seemingly fast-moving AI-train that will leap us into the future.

As a teenager in the 1970s, Juergen Schmidhuber became fascinated with the idea of creating intelligent machines that could learn and improve on their own, becoming smarter than himself within his lifetime. This would ultimately lead to his groundbreaking work in the field of deep learning.

In the 1980s, he studied computer science at the Technical University of Munich (TUM), where he earned his diploma in 1987. His thesis was on the ultimate self-improving machines that, not only, learn through some pre-wired human-designed learning algorithm, but also learn and improve the learning algorithm itself. Decades later, this became a hot topic. He also received his Ph.D. at TUM in 1991 for work that laid some of the foundations of modern AI.

Schmidhuber is best known for his contributions to the development of recurrent neural networks (RNNs), the most powerful type of artificial neural network that can process sequential data such as speech and natural language. With his students Sepp Hochreiter, Felix Gers, Alex Graves, Daan Wierstra, and others, he published architectures and training algorithms for the long short-term memory (LSTM), a type of RNN that is widely used in natural language processing, speech recognition, video games, robotics, and other applications. LSTM has become the most cited neural network of the 20th century, and Business Week called it ""[arguably the most commercial AI achievement](https://www.bloomberg.com/news/features/2018-05-15/google-amazon-and-facebook-owe-j-rgen-schmidhuber-a-fortune?leadSource=uverify%20wall).""

Throughout his career, Schmidhuber has received various awards and accolades for his groundbreaking work. In 2013, he was awarded the Helmholtz Prize, which recognizes significant contributions to the field of machine learning. In 2016, he was awarded the IEEE Neural Network Pioneer Award for ""*pioneering contributions to deep learning and neural networks."" The media have often called him the “father of modern AI,*” because the [most cited neural networks](https://people.idsia.ch/~juergen/most-cited-neural-nets.html) all build on his lab’s work. He is quick to point out, however, that AI history [goes back centuries.](https://people.idsia.ch/~juergen/deep-learning-history.html)

Despite his many accomplishments, at the age of 60, he feels mounting time pressure towards building an Artificial General Intelligence within his lifetime and remains committed to pushing the boundaries of AI research and development. He is currently director of the KAUST AI Initiative, scientific director of the Swiss AI Lab IDSIA, and co-founder and chief scientist of AI company NNAISENSE, whose motto is ""AI∀"" which is a math-inspired way of saying ""AI For All."" He continues to work on cutting-edge AI technologies and applications to improve human health and extend human lives and make lives easier for everyone.

*The following interview has been edited for clarity.*

**Jones: Thank you Juergen for joining me. You have signed letters warning about AI weapons. But you didn't sign the recent publication, ""Pause Gigantic AI Experiments: An Open Letter""? Is there a reason?**

**Schmidhuber:** Thank you Hessie. Glad to speak with you. I have realized that many of those who warn in public against the dangers of AI are just seeking publicity. I don't think the latest letter will have any significant impact because many AI researchers, companies, and governments will ignore it completely.

The proposal frequently uses the word ""we"" and refers to ""us,"" the humans. But as I have pointed out many times in the past, there is no ""we"" that everyone can identify with. Ask 10 different people, and you will hear 10 different opinions about what is ""good."" Some of those opinions will be completely incompatible with each other. Don't forget the enormous amount of conflict between the many people.

The letter also says, ""*If such a pause cannot be quickly put in place, governments should intervene and impose a moratorium.*"" The problem is that different governments have ALSO different opinions about what is good for them and for others. Great Power A will say, if we don't do it, Great Power B will, perhaps secretly, and gain an advantage over us. The same is true for Great Powers C and D.

**Jones: Everyone acknowledges this fear surrounding current generative AI technology. Moreover, the existential threat of this technology has been publicly acknowledged by** [**Sam Altman**](https://www.bbc.com/news/world-us-canada-65616866)**, CEO of OpenAI himself, calling for AI regulation. From your perspective, is there an existential threat?**

**Schmidhuber:** It is true that AI can be weaponized, and I have no doubt that there will be all kinds of AI arms races, but AI does not introduce a new quality of existential threat. The threat coming from AI weapons seems to pale in comparison to the much older threat from nuclear hydrogen bombs that don’t need AI at all. We should be much more afraid of half-century-old tech in the form of H-bomb rockets. The Tsar Bomba of 1961 had almost 15 times more destructive power than all weapons of WW-II combined.  Despite the dramatic nuclear disarmament since the 1980s, there are still more than enough nuclear warheads to wipe out human civilization within two hours, without any AI I’m much more worried about that old existential threat than the rather harmless AI weapons.

**Jones: I realize that while you compare AI to the threat of nuclear bombs, there is a current danger that a current technology can be put in the hands of humans and enable them to “eventually” exact further harms to individuals of group in a very precise way, like targeted drone attacks. You are giving people a toolset that they've never had before, enabling bad actors, as some have pointed out, to be able to do a lot more than previously because they didn't have this technology.**

**Schmidhuber:** Now, all that sounds horrible in principle, but our existing laws are sufficient to deal with these new types of weapons enabled by AI. If you kill someone with a gun, you will go to jail. Same if you kill someone with one of these drones. Law enforcement will get better at understanding new threats and new weapons and will respond with better technology to combat these threats. Enabling drones to target persons from a distance in a way that requires some tracking and some intelligence to perform, which has traditionally been performed by skilled humans, to me, it seems is just an improved version of a traditional weapon, like a gun, which is, you know, a little bit smarter than the old guns.

But, in principle, all of that is not a new development. For many centuries, we have had the evolution of better weaponry and deadlier poisons and so on, and law enforcement has evolved their policies to react to these threats over time. So, it's not that we suddenly have a new quality of existential threat and it's much more worrisome than what we have had for about six decades. A large nuclear warhead doesn’t need fancy face recognition to kill an individual. No, it simply wipes out an entire city with ten million inhabitants.

**Jones: The existential threat that’s implied is the extent to which humans have control over this technology. We see some early cases of opportunism which, as you say, tends to get more media attention than positive breakthroughs. But you’re implying that this will all balance out?**

**Schmidhuber:** Historically, we have a long tradition of technological breakthroughs that led to advancements in weapons for the purpose of defense but also for protection. From sticks, to rocks, to axes to gunpowder to cannons to rockets… and now to drones… this has had a drastic influence on human history but what has been consistent throughout history is that those who are using technology to achieve their own ends are themselves, facing the same technology because the opposing side is learning to use it against them. And that's what has been repeated in thousands of years of human history and it will continue. I don't see the new AI arms race as something that is remotely as existential a threat as the good old nuclear warheads.

You said something important, in that some people prefer to talk about the downsides rather than the benefits of this technology, but that's misleading, because 95% of all AI research and AI development is about making people happier and advancing human life and health.

**Jones: Let’s touch on some of those beneficial advances in AI research that have been able to radically change present day methods and achieve breakthroughs.**

**Schmidhuber:** All right! For example, eleven years ago, our team with my postdoc Dan Ciresan was the first to win a [medical imaging competition through deep learning](https://people.idsia.ch/~juergen/first-time-deep-learning-won-medical-imaging-contest-september-2012.html). We analyzed female breast cells with the objective to determine harmless cells vs. those in the pre-cancer stage. Typically, a trained oncologist needs a long time to make these determinations. Our team, who knew nothing about cancer, were able to train an artificial neural network, which was totally dumb in the beginning, on lots of this kind of data. It was able to outperform all the other methods. Today, this is being used not only for breast cancer, but also for radiology and detecting plaque in arteries, and many other things.  Some of the neural networks that we have developed in the last 3 decades are now prevalent across thousands of healthcare applications, detecting Diabetes and Covid-19 and what not. This will eventually permeate across all healthcare. The good consequences of this type of AI are much more important than the click-bait new ways of conducting crimes with AI.

**Jones: Adoption is a product of reinforced outcomes. The massive scale of adoption either leads us to believe that people have been led astray, or conversely, technology is having a positive effect on people’s lives.**

**Schmidhuber:** The latter is the likely case. There's intense commercial pressure towards good AI rather than bad AI because companies want to sell you something, and you are going to buy only stuff you think is going to be good for you. So already just through this simple, commercial pressure, you have a tremendous bias towards good AI rather than bad AI. However, doomsday scenarios like in Schwarzenegger movies grab more attention than documentaries on AI that improve people’s lives.

**Jones: I would argue that people are drawn to good stories – narratives that contain an adversary and struggle, but in the end, have happy endings. And this is consistent with your comment on human nature and how history, despite its tendency for violence and destruction of humanity, somehow tends to correct itself.**

**Let’s take the example of a technology, which you are aware – GANs – General Adversarial Networks, which today has been used in applications for fake news and disinformation. In actuality, the purpose in the invention of GANs was far from what it is used for today.**

**Schmidhuber:** Yes, the name GANs was created in 2014 but we had the basic principle already in the early 1990s. More than 30 years ago, I called it *artificial curiosity*. It's a very simple way of injecting creativity into a little two network system. This creative AI is not just trying to slavishly imitate humans. Rather, it’s inventing its own goals. Let me explain:

You have two networks. One network is producing outputs that could be anything, any action. Then the second network is looking at these actions and it’s trying to predict the consequences of these actions. An action could move a robot, then something happens, and the other network is just trying to predict what will happen.

Now we can implement artificial curiosity by reducing the prediction error of the second network, which, at the same time, is the reward of the first network. The first network wants to maximize its reward and so it will invent actions that will lead to situations that will surprise the second network, which it has not yet learned to predict well.

In the case where the outputs are fake images, the first network will try to generate images that are good enough to fool the second network, which will attempt to predict the reaction of the environment: fake or real image, and it will try to become better at it. The first network will continue to also improve at generating images whose type the second network will not be able to predict. So, they fight each other. The 2nd network will continue to reduce its prediction error, while the 1st network will attempt to maximize it.

Through this zero-sum game the first network gets better and better at producing these convincing fake outputs which look almost realistic. So, once you have an interesting set of images by Vincent Van Gogh, you can generate new images that leverage his style, without the original artist having ever produced the artwork himself.

**Jones: I see how the Van Gogh example can be applied in an education setting and there are countless examples of artists mimicking styles from famous painters but image generation from this instance that can happen within seconds is quite another feat. And you know this is how GANs has been used. What’s more prevalent today is a socialized enablement of generating images or information to intentionally fool people. It also surfaces new harms that deal with the threat to intellectual property and copyright, where laws have yet to account for. And from your perspective this was not the intention when the model was conceived. What was your motivation in your early conception of what is now GANs?**

**Schmidhuber:** My old motivation for GANs was actually very important and it was not to create deepfakes or fake news but to enable AIs to be curious and invent their own goals, to make them explore their environment and make them creative.

Suppose you have a robot that executes one action, then something happens, then it executes another action, and so on, because it wants to achieve certain goals in the environment. For example, when the battery is low, this will trigger “pain” through hunger sensors, so it wants to go to the charging station, without running into obstacles, which will trigger other pain sensors. It will seek to minimize pain (encoded through numbers). Now the robot has a friend, the second network, which is a world model ––it’s a prediction machine that learns to predict the consequences of the robot’s actions.

Once the robot has a good model of the world, it can use it for planning. It can be used as a simulation of the real world. And then it can determine what is a good action sequence. If the robot imagines this sequence of actions, the model will predict a lot of pain, which it wants to avoid. If it plays this alternative action sequence in its mental model of the world, then it will predict a rewarding situation where it’s going to sit on the charging station and its battery is going to load again. So, it'll prefer to execute the latter action sequence.

In the beginning, however, the model of the world knows nothing, so how can we motivate the first network to generate experiments that lead to data that helps the world model learn something it didn’t already know? That’s what artificial curiosity is about. The dueling two network systems effectively explore uncharted environments by creating experiments so that over time the curious AI gets a better sense of how the environment works. This can be applied to all kinds of environments, and has medical applications.

**Jones: Let’s talk about the future. You have said, “*****Traditional humans won’t play a significant role in spreading intelligence across the universe.*****”**

**Schmidhuber:** Let’s first conceptually separate two types of AIs. The first type of AI are tools directed by humans. They are trained to do specific things like accurately detect diabetes or heart disease and prevent attacks before they happen. In these cases, the goal is coming from the human. More interesting AIs are setting their own goals. They are inventing their own experiments and learning from them. Their horizons expand and eventually they become more and more general problem solvers in the real world. They are not controlled by their parents, but much of what they learn is through self-invented experiments.

A robot, for example, is rotating a toy, and as it is doing this, the video coming in through the camera eyes, changes over time and it begins to learn how this video changes and learns how the 3D nature of the toy generates certain videos if you rotate it a certain way, and eventually, how gravity works, and how the physics of the world works. Like a little scientist!

And I have predicted for decades that future scaled-up versions of such AI scientists will want to further expand their horizons, and eventually go where most of the physical resources are, to build more and bigger AIs. And of course, almost all of these resources are far away from earth out there in space, which is hostile to humans but friendly to appropriately designed AI-controlled robots and self-replicating robot factories. So here we are not talking any longer about our tiny biosphere; no, we are talking about the much bigger rest of the universe.  Within a few tens of billions of years, curious self-improving [AIs will colonize the visible cosmos](https://blogs.scientificamerican.com/observations/falling-walls-the-past-present-and-future-of-artificial-intelligence/) in a way that’s infeasible for humans. Those who don’t won’t have an impact. Sounds like science fiction, but since the 1970s I have been unable to see a plausible alternative to this scenario, except for a global catastrophe such as an all-out nuclear war that stops this development before it takes off.

**Jones: How long have these AIs, which can set their own goals — how long have they existed? To what extent can they be independent of human interaction?**

**Schmidhuber:** Neural networks like that have existed for over 30 years. My first simple adversarial neural network system of this kind is the one from 1990 described above. You don’t need a teacher there; it's just a little agent running around in the world and trying to invent new experiments that surprise its own prediction machine.

Once it has figured out certain parts of the world, the agent will become bored and will move on to more exciting experiments. The simple 1990 systems I mentioned have certain limitations, but in the past three decades, we have also built more [sophisticated systems that are setting their own goals](https://people.idsia.ch/~juergen/artificial-curiosity-since-1990.html) and such systems I think will be essential for achieving true intelligence. If you are only imitating humans, you will never go beyond them. So, you really must give AIs the freedom to explore previously unexplored regions of the world in a way that no human is really predefining.

**Jones: Where is this being done today?**

**Schmidhuber:** Variants of neural network-based artificial curiosity are used today for agents that learn to play video games in a human-competitive way. We have also started to use them for automatic design of experiments in fields such as materials science. I bet many other fields will be affected by it: chemistry, biology, drug design, you name it. However, at least for now, these artificial scientists, as I like to call them, cannot yet compete with human scientists.

I don’t think it’s going to stay this way but, at the moment, it’s still the case.  Sure, AI has made a lot of progress. Since 1997, there have been superhuman chess players, and since 2011, through the DanNet of my team, there have been [superhuman visual pattern recognizers](https://people.idsia.ch/~juergen/DanNet-triggers-deep-CNN-revolution-2011.html). But there are other things where humans, at the moment at least, are much better, in particular, science itself.  In the lab we have many first examples of self-directed artificial scientists, but they are not yet convincing enough to appear on the radar screen of the public space, which is currently much more fascinated with simpler systems that just imitate humans and write texts based on previously seen human-written documents.

**Jones: You speak of these numerous instances dating back 30 years of these lab experiments where these self-driven agents are deciding and learning and moving on once they’ve learned. And I assume that that rate of learning becomes even faster over time. What kind of timeframe are we talking about when this eventually is taken outside of the lab and embedded into society?**

**Schmidhuber:** This could still take months or even years :-) Anyway, in the not-too-distant future, we will probably see artificial scientists who are good at devising experiments that allow them to discover new, previously unknown physical laws.

As always, we are going to profit from the old trend that has held at least since 1941: every decade compute is getting 100 times cheaper.

**Jones: How does this trend affect modern AI such as ChatGPT?**

**Schmidhuber:** Perhaps you know that all the recent famous AI applications such as ChatGPT and similar models are largely based on principles of artificial neural networks invented in the previous millennium. The main reason why they works so well now is the incredible acceleration of compute per dollar.

ChatGPT is driven by a neural network called “Transformer” described in 2017 by Google. I am happy about that because a quarter century earlier in 1991 I had a particular Transformer variant which is now called the “[Transformer with linearized self-attention](https://twitter.com/SchmidhuberAI/status/1576966129993797632?cxt=HHwWgMDSkeKVweIrAAAA)”. Back then, not much could be done with it, because the compute cost was a million times higher than today. But today, one can train such models on half the internet and achieve much more interesting results.

**Jones: And for how long will this acceleration continue?**

**Schmidhuber:** There's no reason to believe that in the next 30 years, we won't have another factor of 1 million and that's going to be really significant. In the near future, for the first time we will have many not-so expensive devices that can compute as much as a human brain. The physical limits of computation, however, are much further out so even if the trend of a factor of 100 every decade continues, the physical limits (of 1051 elementary instructions per second and kilogram of matter) won’t be hit until, say, the mid-next century. Even in our current century, however, we’ll probably have many machines that compute more than all 10 billion human brains collectively and you can imagine, everything will change then!

**Jones: That is the big question. Is everything going to change? If so, what do you say to the next generation of leaders, currently coming out of college and university. So much of this change is already impacting how they study, how they will work, or how the future of work and livelihood is defined. What is their purpose and how do we change our systems so they will adapt to this new version of intelligence?**

**Schmidhuber:** For decades, people have asked me questions like that, because you know what I'm saying now, I have basically said since the 1970s, it’s just that today, people are paying more attention because, back then, they thought this was science fiction.

They didn't think that I would ever come close to achieving my crazy life goal of building a machine that learns to become smarter than myself such that I can retire. But now many have changed their minds and think it's conceivable. And now I have two daughters, 23 and 25. People ask me: what do I tell them? They know that Daddy always said, “*It seems likely that within your lifetimes, you will have new types of intelligence that are probably going to be superior in many ways, and probably all kinds of interesting ways.*” How should they prepare for that? And I kept telling them the obvious: **Learn how to learn new things**! It's not like in the previous millennium where within 20 years someone learned to be a useful member of society, and then took a job for 40 years and performed in this job until she received her pension. Now things are changing much faster and we must learn continuously just to keep up. I also told my girls that no matter how smart AIs are going to get, learn at least the basics of math and physics, because that’s the essence of our universe, and anybody who understands this will have an advantage, and learn all kinds of new things more easily. I also told them that social skills will remain important, because most future jobs for humans will continue to involve interactions with other humans, but I couldn’t teach them anything about that; they know much more about social skills than I do.

You touched on the big philosophical question about people’s purpose. Can this be answered without answering the even grander question: What’s the purpose of the entire universe?

We don’t know. But what’s happening right now might be connected to the unknown answer. Don’t think of humans as the crown of creation. Instead view human civilization as part of a much grander scheme, an important step (but not the last one) on the path of the universe from very simple initial conditions towards more and more unfathomable complexity. Now it seems ready to take its [next step, a step comparable to the invention of life itself over 3.5 billion years ago](https://people.idsia.ch/~juergen/deep-learning-history.html#future).  Alas, don’t worry, in the end, all will be good!

**Jones: Let’s get back to this transformation happening right now with OpenAI. There are many questioning the efficacy and accuracy of ChatGPT, and are concerned its release has been premature. In light of the rampant adoption, educators have banned its use over concerns of plagiarism and how it stifles individual development. Should large language models like ChatGPT be used in school?**

**Schmidhuber:** When the calculator was first introduced, instructors forbade students from using it in school. Today, the consensus is that kids should learn the basic methods of arithmetic, but they should also learn to use the “artificial multipliers” aka calculators, even in exams, because laziness and efficiency is a hallmark of intelligence. Any intelligent being wants to minimize its efforts to achieve things.

And that's the reason why we have tools, and why our kids are learning to use these tools. The first stone tools were invented maybe 3.5 million years ago; tools just have become more sophisticated over time. In fact, humans have changed in response to the properties of their tools. Our anatomical evolution was shaped by tools such as spears and fire. So, it's going to continue this way. And there is no permanent way of preventing large language models from being used in school.

**Jones: And when our children, your children graduate, what does their future work look like?**

**Schmidhuber:** A single human trying to predict details of how 10 billion people and their machines will evolve in the future is like a single neuron in my brain trying to predict what the entire brain and its tens of billions of neurons will do next year. 40 years ago, before the WWW was created at CERN in Switzerland, who would have predicted all those young people making money as YouTube video bloggers?

Nevertheless, let’s make a few limited job-related observations. For a long time, people have thought that desktop jobs may require more intelligence than skills trade or handicraft professions. But now, it turns out that it's much easier to replace certain aspects of desktop jobs than replacing a carpenter, for example. Because everything that works well in AI is happening behind the screen currently, but not so much in the physical world.

There are now artificial systems that can read lots of documents and then make really nice summaries of these documents. That is a desktop job. Or you give them a description of an illustration that you want to have for your article and pretty good illustrations are being generated that may need some minimal fine-tuning. But you know, all these desktop jobs are much easier to facilitate than the real tough jobs in the physical world. And it's interesting that the things people thought required intelligence, like playing chess, or writing or summarizing documents, are much easier for machines than they thought. But for things like playing football or soccer, there is no physical robot that can remotely compete with the abilities of a little boy with these skills. So, AI in the physical world, interestingly, is much harder than AI behind the screen in virtual worlds. And it's really exciting, in my opinion, to see that jobs such as plumbers are much more challenging than playing chess or writing another tabloid story.

**Jones: The way data has been collected in these large language models does not guarantee personal information has not been excluded. Current consent laws already are outdated when it comes to these large language models (LLM). The concern, rightly so, is increasing surveillance and loss of privacy. What is your view on this?**

**Schmidhuber:** As I have indicated earlier: are surveillance and loss of privacy inevitable consequences of increasingly complex societies? Super-organisms such as cities and states and companies consist of numerous people, just like people consist of numerous cells. These cells enjoy little privacy. They are constantly monitored by specialized ""police cells"" and ""border guard cells"": Are you a cancer cell? Are you an external intruder, a pathogen? Individual cells sacrifice their freedom for the benefits of being part of a multicellular organism.

Similarly, for super-organisms such as nations. Over 5000 years ago, writing enabled recorded history and thus became its inaugural and most important invention. Its initial purpose, however, was to facilitate surveillance, to track citizens and their tax payments. The more complex a super-organism, the more comprehensive its collection of information about its constituents.

200 years ago, at least, the parish priest in each village knew everything about all the village people, even about those who did not confess, because they appeared in the confessions of others. Also, everyone soon knew about the stranger who had entered the village, because some occasionally peered out of the window, and what they saw got around. Such control mechanisms were temporarily lost through anonymization in rapidly growing cities but are now returning with the help of new surveillance devices such as smartphones as part of digital nervous systems that tell companies and governments a lot about billions of users. Cameras and drones etc. are becoming increasingly tinier and more ubiquitous. More effective recognition of faces and other detection technology are becoming cheaper and cheaper, and many will use it to identify others anywhere on earth; the big wide world will not offer any more privacy than the local village. Is this good or bad? Some nations may find it easier than others to justify more complex kinds of super-organisms at the expense of the privacy rights of their constituents.

**Jones: So, there is no way to stop or change this process of collection, or how it continuously informs decisions over time? How do you see governance and rules responding to this, especially amid** [**Italy’s ban on ChatGPT following**](https://www.cnbc.com/2023/04/04/italy-has-banned-chatgpt-heres-what-other-countries-are-doing.html) **suspected user data breach and the more recent news about the** [**Meta’s record $1.3billion fine**](https://www.reuters.com/technology/facebook-given-record-13-bln-fine-given-5-months-stop-eu-us-data-flows-2023-05-22/) **in the company’s handling of user information?**

**Schmidhuber:** Data collection has benefits and drawbacks, such as the loss of privacy. How to balance those? I have argued for addressing this through data ownership in data markets. If it is true that data is the new oil, then it should have a price, just like oil. At the moment, the major surveillance platforms such as Meta do not offer users any money for their data and the transitive loss of privacy. In the future, however, we will likely see attempts at creating efficient data markets to figure out the data's true financial value through the interplay between supply and demand.

Even some of the sensitive medical data should not be priced by governmental regulators but by patients (and healthy persons) who own it and who may sell or license parts thereof as micro-entrepreneurs in a healthcare data market.

Following a previous [interview](https://www.swissre.com/institute/conferences/The-intelligence-behind-artificial-intelligence.html), I gave for one of the largest re-insurance companies , let's look at the different participants in such a data market: patients, hospitals, data companies. (1) **Patients** with a rare form of cancer can offer more valuable data than patients with a very common form of cancer. (2) **Hospitals** and their machines are needed to extract the data, e.g., through magnet spin tomography, radiology, evaluations through human doctors, and so on. (3) **Companies** such as Siemens, Google or IBM would like to buy annotated data to make better artificial neural networks that learn to predict pathologies and diseases and the consequences of therapies. Now the market’s invisible hand will decide about the data’s price through the interplay between demand and supply. On the demand side, you will have several companies offering something for the data, maybe through an app on the smartphone (a bit like a stock market app). On the supply side, each patient in this market should be able to profit from high prices for rare valuable types of data. Likewise, competing data extractors such as hospitals will profit from gaining recognition and trust for extracting data well at a reasonable price. The market will make the whole system efficient through incentives for all who are doing a good job. Soon there will be a flourishing ecosystem of commercial data market advisors and what not, just like the ecosystem surrounding the traditional stock market. The value of the data won’t be determined by governments or ethics committees, but by those who own the data and decide by themselves which parts thereof they want to license to others under certain conditions.

At first glance, a market-based system seems to be detrimental to the interest of certain monopolistic companies, as they would have to pay for the data - some would prefer free data and keep their monopoly. However, since every healthy and sick person in the market would suddenly have an incentive to collect and share their data under self-chosen anonymity conditions, there will soon be many more useful data to evaluate all kinds of treatments. On average, people will live longer and healthier, and many companies and the entire healthcare system will benefit.

**Jones: Finally, what is your view on open source versus the private companies like Google and OpenAI? Is there a danger to supporting these private companies’ large language models versus trying to keep these models open source and transparent, very much like what LAION is doing?**

**Schmidhuber:** I signed this [open letter by LAION](https://www.forbes.com/sites/hessiejones/2023/04/19/amid-growing-call-to-pause-ai-research-laion-petitions-governments-to-keep-agi-research-open-active-and-responsible/?sh=6973c08b62e3) because I strongly favor the open-source movement. And I think it's also something that is going to challenge whatever big tech dominance there might be at the moment. Sure, the best models today are run by big companies with huge budgets for computers, but the exciting fact is that open-source models are not so far behind, some people say maybe six to eight months only. Of course, the private company models are all based on stuff that was created in academia, often in little labs without so much funding, which publish without patenting their results and open source their code and others take it and improved it.

Big tech has profited tremendously from academia; their main achievement being that they have scaled up everything greatly, sometimes even failing to credit the original inventors.

So, it's very interesting to see that as soon as some big company comes up with a new scaled-up model, lots of students out there are competing, or collaborating, with each other, trying to come up with equal or better performance on smaller networks and smaller machines. And since they are open sourcing, the next guy can have another great idea to improve it, so now there’s tremendous competition also for the big companies.

Because of that, and since AI is still getting exponentially cheaper all the time, I don't believe that big tech companies will dominate in the long run. They find it very hard to compete with the enormous open-source movement. As long as you can encourage the open-source community, I think you shouldn't worry too much. Now, of course, you might say if everything is open source, then the bad actors also will more easily have access to these AI tools. And there's truth to that. But as always since the invention of controlled fire, it was good that knowledge about how technology works quickly became public such that everybody could use it. And then, against any bad actor, there's almost immediately a counter actor trying to nullify his efforts. You see, I still believe in our old motto ""AI∀"" or ""AI For All.""

**Jones: Thank you, Juergen for sharing your perspective on this amazing time in history. It’s clear that with new technology, the enormous potential can be matched by disparate and troubling risks which we’ve yet to solve, and even those we have yet to identify. If we are to dispel the fear of a sentient system for which we have no control, humans, alone need to take steps for more responsible development and collaboration to ensure AI technology is used to ultimately benefit society. Humanity will be judged by what we do next.**"
199,machinelearning,open-ai,comments,2022-12-22 18:39:30,[D] When chatGPT stops being free: Run SOTA LLM in cloud,_underlines_,False,0.95,350,zstequ,https://www.reddit.com/r/MachineLearning/comments/zstequ/d_when_chatgpt_stops_being_free_run_sota_llm_in/,95,1671734370.0,"Edit: Found [LAION-AI/OPEN-ASSISTANT](https://github.com/LAION-AI/Open-Assistant) a very promising project opensourcing the idea of chatGPT. [video here](https://www.youtube.com/watch?v=8gVYC_QX1DI)

**TL;DR: I found GPU compute to be [generally cheap](https://github.com/full-stack-deep-learning/website/blob/main/docs/cloud-gpus/cloud-gpus.csv) and spot or on-demand instances can be launched on AWS for a few USD / hour up to over 100GB vRAM. So I thought it would make sense to run your own SOTA LLM like Bloomz 176B inference endpoint whenever you need it for a few questions to answer. I thought it would still make more sense than shoving money into a closed walled garden like ""not-so-OpenAi"" when they make ChatGPT or GPT-4 available for $$$. But I struggle due to lack of tutorials/resources.**

Therefore, I carefully checked benchmarks, model parameters and sizes as well as training sources for all SOTA LLMs [here](https://docs.google.com/spreadsheets/d/1O5KVQW1Hx5ZAkcg8AIRjbQLQzx2wVaLl0SqUu-ir9Fs/edit#gid=1158069878).

Knowing since reading the Chinchilla paper that Model Scaling according to OpenAI was wrong and more params != better quality generation. So I was looking for the best performing LLM openly available in terms of quality and broadness to use for multilingual everyday questions/code completion/reasoning similar to what chatGPT provides (minus the fine-tuning for chat-style conversations).

My choice fell on [Bloomz](https://huggingface.co/bigscience/bloomz) (because that handles multi-lingual questions well and has good zero shot performance for instructions and Q&A style text generation. Confusingly Galactica seems to outperform Bloom on several benchmarks. But since Galactica had a very narrow training set only using scientific papers, I guess usage is probably limited for answers on non-scientific topics.

Therefore I tried running the original bloom 176B and alternatively also Bloomz 176B on AWS SageMaker JumpStart, which should be a one click deployment. This fails after 20min. On Azure ML, I tried using DeepSpeed-MII which also supports bloom but also fails due the instance size of max 12GB vRAM I guess.

From my understanding to save costs on inference, it's probably possible to use one or multiple of the following solutions:

- Precision: int8 instead of fp16
- [Microsoft/DeepSpeed-MII](https://github.com/microsoft/DeepSpeed-MII) for an up 40x reduction on inference cost on Azure, this thing also supports int8 and fp16 bloom out of the box, but it fails on Azure due to instance size.
- [facebook/xformer](https://github.com/facebookresearch/xformers) not sure, but if I remember correctly this brought inference requirements down to 4GB vRAM for StableDiffusion and DreamBooth fine-tuning to 10GB. No idea if this is usefull for Bloom(z) inference cost reduction though

I have a CompSci background but I am not familiar with most stuff, except that I was running StableDiffusion since day one on my rtx3080 using linux and also doing fine-tuning with DreamBooth. But that was all just following youtube tutorials. I can't find a single post or youtube video of anyone explaining a full BLOOM / Galactica / BLOOMZ inference deployment on cloud platforms like AWS/Azure using one of the optimizations mentioned above, yet alone deployment of the raw model. :(

I still can't figure it out by myself after 3 days.

**TL;DR2: Trying to find likeminded people who are interested to run open source SOTA LLMs for when chatGPT will be paid or just for fun.**

Any comments, inputs, rants, counter-arguments are welcome.

/end of rant"
200,machinelearning,open-ai,relevance,2024-02-15 18:39:06,[D] OpenAI Sora Video Gen -- How??,htrp,False,0.96,389,1armmng,https://www.reddit.com/r/MachineLearning/comments/1armmng/d_openai_sora_video_gen_how/,199,1708022346.0,">Introducing Sora, our text-to-video model. Sora can generate videos up to a minute long while maintaining visual quality and adherence to the user’s prompt.




https://openai.com/sora

Research Notes
Sora is a diffusion model, which generates a video by starting off with one that looks like static noise and gradually transforms it by removing the noise over many steps.

Sora is capable of generating entire videos all at once or extending generated videos to make them longer. By giving the model foresight of many frames at a time, we’ve solved a challenging problem of making sure a subject stays the same even when it goes out of view temporarily.

Similar to GPT models, Sora uses a transformer architecture, unlocking superior scaling performance.

We represent videos and images as collections of smaller units of data called patches, each of which is akin to a token in GPT. By unifying how we represent data, we can train diffusion transformers on a wider range of visual data than was possible before, spanning different durations, resolutions and aspect ratios.

Sora builds on past research in DALL·E and GPT models. It uses the recaptioning technique from DALL·E 3, which involves generating highly descriptive captions for the visual training data. As a result, the model is able to follow the user’s text instructions in the generated video more faithfully.

In addition to being able to generate a video solely from text instructions, the model is able to take an existing still image and generate a video from it, animating the image’s contents with accuracy and attention to small detail. The model can also take an existing video and extend it or fill in missing frames. Learn more in our technical paper (coming later today).

Sora serves as a foundation for models that can understand and simulate the real world, a capability we believe will be an important milestone for achieving AGI.



Example Video: https://cdn.openai.com/sora/videos/cat-on-bed.mp4

Tech paper will be released later today. But brainstorming how?"
201,machinelearning,open-ai,relevance,2023-05-04 16:13:30,"[D] Google ""We Have No Moat, And Neither Does OpenAI"": Leaked Internal Google Document Claims Open Source AI Will Outcompete Google and OpenAI",hardmaru,False,0.98,1177,137rxgw,https://www.semianalysis.com/p/google-we-have-no-moat-and-neither,206,1683216810.0,
202,machinelearning,open-ai,relevance,2023-05-17 22:15:28,[D] Does anybody else despise OpenAI?,onesynthguy,False,0.86,1406,13kfxzy,https://www.reddit.com/r/MachineLearning/comments/13kfxzy/d_does_anybody_else_despise_openai/,426,1684361728.0," I  mean, don't get me started with the closed source models they have that were trained using the work of unassuming individuals who will never  see a penny for it. Put it up on Github they said. I'm all for  open-source, but when a company turns around and charges you for a  product they made with freely and publicly made content, while forbidding you from using the output to create competing models, that is where I  draw the line. It is simply ridiculous. 

Sam Altman couldn't be anymore predictable with his recent attempts to get the government to start regulating AI.

What  risks? The AI is just a messenger for information that is already out  there if one knows how/where to look. You don't need AI to learn how to  hack, to learn how to make weapons, etc. Fake news/propaganda? The  internet has all of that covered. LLMs are no where near the level of AI  you see in sci-fi. I mean, are people really afraid of text? Yes, I  know that text can sometimes be malicious code such as viruses, but  those can be found on github as well.  If they fall for this they might  as well shutdown the internet while they're at it.

He  is simply blowing things out of proportion and using fear to increase  the likelihood that they do what he wants, hurt the competition. I  bet he is probably teething with bitterness everytime a new huggingface  model comes out. The thought of us peasants being able to use AI  privately is too dangerous. No, instead we must be fed scraps while they  slowly take away our jobs and determine our future.

This  is not a doomer post, as I am all in favor of the advancement of AI.  However, the real danger here lies in having a company like OpenAI  dictate the future of humanity. I get it, the writing is on the wall;  the cost of human intelligence will go down, but if everyone has their  personal AI then it wouldn't seem so bad or unfair would it? Listen,  something that has the power to render a college degree that costs  thousands of dollars worthless should be available to the public. This  is to offset the damages and job layoffs that will come as a result of  such an entity. It wouldn't be as bitter of a taste as it would if you were replaced by it while still not being able to access it. Everyone should be able to use it as leverage, it is the only fair solution.

If  we don't take action now, a company like ClosedAI will, and they are  not in favor of the common folk. Sam Altman is so calculated to the  point where there were times when he seemed to be shooting OpenAI in the foot during his talk.  This move is to simply conceal his real intentions, to climb the ladder and take it with him. If he didn't include his company in his  ramblings, he would be easily read. So instead, he pretends to be scared of his own product, in an effort to legitimize his claim. Don't fall  for it.

They are slowly making a  reputation as one the most hated tech companies, right up there with  Adobe, and they don't show any sign of change. They have no moat,  othewise they wouldn't feel so threatened to the point where they would have to resort to creating barriers of entry via regulation. This only  means one thing, we are slowly catching up. We just need someone to  vouch for humanity's well-being, while acting as an opposing force to the  evil corporations who are only looking out for themselves. Question is,  who would be a good candidate?"
203,machinelearning,open-ai,relevance,2023-03-15 22:34:01,[D] Our community must get serious about opposing OpenAI,SOCSChamp,False,0.95,2967,11sboh1,https://www.reddit.com/r/MachineLearning/comments/11sboh1/d_our_community_must_get_serious_about_opposing/,448,1678919641.0,"OpenAI was founded for the explicit purpose of democratizing access to AI and acting as a counterbalance to the closed off world of big tech by developing open source tools.

They have abandoned this idea entirely.

Today, with the release of GPT4 and their direct statement that they will not release details of the model creation due to ""safety concerns"" and the competitive environment, they have created a precedent worse than those that existed before they entered the field. We're at risk now of other major players, who previously at least published their work and contributed to open source tools, close themselves off as well.

AI alignment is a serious issue that we definitely have not solved. Its a huge field with a dizzying array of ideas, beliefs and approaches. We're talking about trying to capture the interests and goals of all humanity, after all. In this space, the one approach that is horrifying (and the one that OpenAI was LITERALLY created to prevent) is a singular or oligarchy of for profit corporations making this decision for us. This is exactly what OpenAI plans to do.

I get it, GPT4 is incredible. However, we are talking about the single most transformative technology and societal change that humanity has ever made. It needs to be for everyone or else the average person is going to be left behind.

We need to unify around open source development; choose companies that contribute to science, and condemn the ones that don't.

This conversation will only ever get more important."
204,machinelearning,open-ai,relevance,2023-05-25 13:51:58,OpenAI is now complaining about regulation of AI [D],I_will_delete_myself,False,0.89,798,13rie0e,https://www.reddit.com/r/MachineLearning/comments/13rie0e/openai_is_now_complaining_about_regulation_of_ai_d/,349,1685022718.0,"I held off for a while but hypocrisy just drives me nuts after hearing this.

SMH this company like white knights who think they are above everybody. They want regulation but they want to be untouchable by this regulation. Only wanting to hurt other people but not “almighty” Sam and friends.

Lies straight through his teeth to Congress about suggesting similar things done in the EU, but then starts complain about them now. This dude should not be taken seriously in any political sphere whatsoever.

My opinion is this company is anti-progressive for AI by locking things up which is contrary to their brand name. If they can’t even stay true to something easy like that, how should we expect them to stay true with AI safety which is much harder?

I am glad they switch sides for now, but pretty ticked how they think they are entitled to corruption to benefit only themselves. SMH!!!!!!!!

What are your thoughts?"
205,machinelearning,open-ai,relevance,2023-11-22 06:38:48,"OpenAI: ""We have reached an agreement in principle for Sam to return to OpenAI as CEO"" [N]",we_are_mammals,False,0.92,288,1812w04,https://www.reddit.com/r/MachineLearning/comments/1812w04/openai_we_have_reached_an_agreement_in_principle/,129,1700635128.0,"OpenAI announcement:

""We have reached an agreement in principle for Sam to return to OpenAI as CEO with a new initial board of Bret Taylor (Chair), Larry Summers, and Adam D'Angelo.

We are collaborating to figure out the details. Thank you so much for your patience through this.""

https://twitter.com/OpenAI/status/1727205556136579362"
206,machinelearning,open-ai,relevance,2023-04-05 19:44:09,"[D] ""Our Approach to AI Safety"" by OpenAI",mckirkus,False,0.88,300,12cvkvn,https://www.reddit.com/r/MachineLearning/comments/12cvkvn/d_our_approach_to_ai_safety_by_openai/,297,1680723849.0,"It seems OpenAI are steering the conversation away from the existential threat narrative and into things like accuracy, decency, privacy, economic risk, etc.

To the extent that they do buy the existential risk argument, they don't seem concerned much about GPT-4 making a leap into something dangerous, even if it's at the heart of autonomous agents that are currently emerging.  

>""Despite extensive research and testing, we cannot predict all of the [beneficial ways people will use our technology](https://openai.com/customer-stories), nor all the ways people will abuse it. That’s why we believe that learning from real-world use is a critical component of creating and releasing increasingly safe AI systems over time. ""

Article headers:

* Building increasingly safe AI systems
* Learning from real-world use to improve safeguards
* Protecting children
* Respecting privacy
* Improving factual accuracy

&#x200B;

[https://openai.com/blog/our-approach-to-ai-safety](https://openai.com/blog/our-approach-to-ai-safety)"
207,machinelearning,open-ai,relevance,2023-11-17 21:12:49,"[N] OpenAI Announces Leadership Transition, Fires Sam Altman",Sm0oth_kriminal,False,0.94,419,17xp85q,https://www.reddit.com/r/MachineLearning/comments/17xp85q/n_openai_announces_leadership_transition_fires/,199,1700255569.0,"EDIT: Greg Brockman has quit as well: https://x.com/gdb/status/1725667410387378559?s=46&t=1GtNUIU6ETMu4OV8_0O5eA

Source: https://openai.com/blog/openai-announces-leadership-transition

Today, it was announced that Sam Altman will no longer be CEO or affiliated with OpenAI due to a lack of “candidness” with the board. This is extremely unexpected as Sam Altman is arguably the most recognizable face of state of the art AI (of course, wouldn’t be possible without great team at OpenAI). Lots of speculation is in the air, but there clearly must have been some good reason to make such a drastic decision.

This may or may not materially affect ML research, but it is plausible that the lack of “candidness” is related to copyright data, or usage of data sources that could land OpenAI in hot water with regulatory scrutiny. Recent lawsuits (https://www.reuters.com/legal/litigation/writers-suing-openai-fire-back-companys-copyright-defense-2023-09-28/) have raised questions about both the morality and legality of how OpenAI and other research groups train LLMs.

Of course we may never know the true reasons behind this action, but what does this mean for the future of AI?"
208,machinelearning,open-ai,relevance,2023-11-23 00:14:50,[D] Exclusive: Sam Altman's ouster at OpenAI was precipitated by letter to board about AI breakthrough,blabboy,False,0.83,372,181o1q4,https://www.reddit.com/r/MachineLearning/comments/181o1q4/d_exclusive_sam_altmans_ouster_at_openai_was/,180,1700698490.0,"According to one of the sources, long-time executive Mira Murati told employees on Wednesday that a letter about the AI breakthrough called Q* (pronounced Q-Star), precipitated the board's actions.

The maker of ChatGPT had made progress on Q*, which some internally believe could be a breakthrough in the startup's search for superintelligence, also known as artificial general intelligence (AGI), one of the people told Reuters. OpenAI defines AGI as AI systems that are smarter than humans.

https://www.reuters.com/technology/sam-altmans-ouster-openai-was-precipitated-by-letter-board-about-ai-breakthrough-2023-11-22/"
209,machinelearning,open-ai,relevance,2023-05-07 23:26:29,"[D] ClosedAI license, open-source license which restricts only OpenAI, Microsoft, Google, and Meta from commercial use",wemsyn,False,0.8,345,13b6miy,https://www.reddit.com/r/MachineLearning/comments/13b6miy/d_closedai_license_opensource_license_which/,191,1683501989.0,"After reading [this article](https://www.semianalysis.com/p/google-we-have-no-moat-and-neither), I realized it might be nice if the open-source AI community could exclude ""closed AI"" players from taking advantage of community-generated models and datasets. I was wondering if it would be possible to write a license that is completely permissive (like Apache 2.0 or MIT), except to certain companies, which are completely barred from using the software in any context.

Maybe this could be called the ""ClosedAI"" license. I'm not any sort of legal expert so I have no idea how best to write this license such that it protects model weights and derivations thereof.

I prompted ChatGPT for an example license and this is what it gave me:

    <PROJECT NAME> ClosedAI License v1.0
    
    Permission is hereby granted, free of charge, to any person or organization obtaining a copy of this software and associated documentation files (the ""Software""), to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, subject to the following conditions:
    
    1. The above copyright notice and this license notice shall be included in all copies or substantial portions of the Software.
    
    2. The Software and any derivative works thereof may not be used, in whole or in part, by or on behalf of OpenAI Inc., Google LLC, or Microsoft Corporation (collectively, the ""Prohibited Entities"") in any capacity, including but not limited to training, inference, or serving of neural network models, or any other usage of the Software or neural network weights generated by the Software.
    
    3. Any attempt by the Prohibited Entities to use the Software or neural network weights generated by the Software is a material breach of this license.
    
    THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

No idea if this is valid or not. Looking for advice.

&#x200B;

**Edit:** Thanks for the input. Removed non-commercial clause (whoops, proofread what ChatGPT gives you). Also removed Meta from the excluded companies list due to popular demand."
210,machinelearning,open-ai,relevance,2023-03-30 14:18:50,[D] AI Policy Group CAIDP Asks FTC To Stop OpenAI From Launching New GPT Models,vadhavaniyafaijan,False,0.84,211,126oiey,https://www.reddit.com/r/MachineLearning/comments/126oiey/d_ai_policy_group_caidp_asks_ftc_to_stop_openai/,213,1680185930.0,"The Center for AI and Digital Policy (CAIDP), a tech ethics group, has asked the Federal Trade Commission to investigate OpenAI for violating consumer protection rules. CAIDP claims that OpenAI's AI text generation tools have been ""biased, deceptive, and a risk to public safety.""

CAIDP's complaint raises concerns about potential threats from OpenAI's GPT-4 generative text model, which was announced in mid-March. It warns of the potential for GPT-4 to produce malicious code and highly tailored propaganda and the risk that biased training data could result in baked-in stereotypes or unfair race and gender preferences in hiring. 

The complaint also mentions significant privacy failures with OpenAI's product interface, such as a recent bug that exposed OpenAI ChatGPT histories and possibly payment details of ChatGPT plus subscribers.

CAIDP seeks to hold OpenAI accountable for violating Section 5 of the FTC Act, which prohibits unfair and deceptive trade practices. The complaint claims that OpenAI knowingly released GPT-4 to the public for commercial use despite the risks, including potential bias and harmful behavior. 

[Source](https://www.theinsaneapp.com/2023/03/stop-openai-from-launching-gpt-5.html) | [Case](https://www.caidp.org/cases/openai/)| [PDF](https://www.caidp.org/app/download/8450269463/CAIDP-FTC-Complaint-OpenAI-GPT-033023.pdf)"
211,machinelearning,open-ai,relevance,2019-02-15 13:04:39,[Discussion] OpenAI should now change their name to ClosedAI,SirLordDragon,False,0.92,645,aqwcyx,https://www.reddit.com/r/MachineLearning/comments/aqwcyx/discussion_openai_should_now_change_their_name_to/,223,1550235879.0,It's the only way to complete the hype wave.
212,machinelearning,open-ai,relevance,2023-03-28 05:57:03,[N] OpenAI may have benchmarked GPT-4’s coding ability on it’s own training data,Balance-,False,0.97,1001,124eyso,https://www.reddit.com/r/MachineLearning/comments/124eyso/n_openai_may_have_benchmarked_gpt4s_coding/,135,1679983023.0,"[GPT-4 and professional benchmarks: the wrong answer to the wrong question](https://aisnakeoil.substack.com/p/gpt-4-and-professional-benchmarks)

*OpenAI may have tested on the training data. Besides, human benchmarks are meaningless for bots.*

 **Problem 1: training data contamination**

To benchmark GPT-4’s coding ability, OpenAI evaluated it on problems from Codeforces, a website that hosts coding competitions. Surprisingly, Horace He pointed out that GPT-4 solved 10/10 pre-2021 problems and 0/10 recent problems in the easy category. The training data cutoff for GPT-4 is September 2021. This strongly suggests that the model is able to memorize solutions from its training set — or at least partly memorize them, enough that it can fill in what it can’t recall.

As further evidence for this hypothesis, we tested it on Codeforces problems from different times in 2021. We found that it could regularly solve problems in the easy category before September 5, but none of the problems after September 12.

In fact, we can definitively show that it has memorized problems in its training set: when prompted with the title of a Codeforces problem, GPT-4 includes a link to the exact contest where the problem appears (and the round number is almost correct: it is off by one). Note that GPT-4 cannot access the Internet, so memorization is the only explanation."
213,machinelearning,open-ai,relevance,2021-01-05 19:48:05,[R] New Paper from OpenAI: DALL·E: Creating Images from Text,programmerChilli,False,0.99,899,kr63ot,https://openai.com/blog/dall-e/,232,1609876085.0,
214,machinelearning,open-ai,relevance,2023-12-28 22:53:08,New York Times sues OpenAI and Microsoft for copyright infringement [N],we_are_mammals,False,0.9,174,18t73v1,https://www.reddit.com/r/MachineLearning/comments/18t73v1/new_york_times_sues_openai_and_microsoft_for/,92,1703803988.0,"https://www.theguardian.com/media/2023/dec/27/new-york-times-openai-microsoft-lawsuit

The lawsuit alleges: *""Powered by LLMs containing copies of Times content, Defendants’ GenAI tools can generate output that recites Times content verbatim, closely summarizes it, and mimics its expressive style""*. The lawsuit seeks billions in damages and wants to see these chatbots destroyed.

---

I don't know if summaries and style mimicking fall under copyright law, but couldn't verbatim quoting be prevented? I proposed doing this a while ago in this subreddit: 

> Can't OpenAI simply check the output for sharing long substrings with the training data (perhaps probabilistically)?

You can simply take all training data substrings (of a fixed length, say 20 tokens) and put them into a hash table, a bloom filter, or a similar data structure. Then, when the LLMs are generating text, you can check to make sure the text does not contain any substrings that are in the data structure. This will prevent verbatim quotations from the NYT or other copyrighted material that are longer than 20 tokens (or whatever length you chose). Storing the data structure in memory may require distributing it across multiple machines, but I think OpenAI can easily afford it. You can further save memory by spacing the substrings, if memory is a concern."
215,machinelearning,open-ai,relevance,2023-03-11 13:54:22,[Discussion] Compare OpenAI and SentenceTransformer Sentence Embeddings,Simusid,False,0.94,545,11okrni,https://i.redd.it/7muze2s684na1.png,58,1678542862.0,
216,machinelearning,open-ai,relevance,2018-08-03 15:35:18,[P] Sonic the Hedgehog Bot with NEAT and Open-AI Retro (Tutorial and Repo),wholeywoolly,False,0.88,44,94alf1,https://www.reddit.com/r/MachineLearning/comments/94alf1/p_sonic_the_hedgehog_bot_with_neat_and_openai/,7,1533310518.0,"I've created a series of tutorials on how to use NEAT (Neural Evolution of Augmenting Topologies) with Open-AI's Retro library to train a network to play basically any retro game. How well it does depends on lots of factors. I've personally had success with Donkey Kong Country and Sonic the Hedgehog 2. 

Here's the tutorial:
https://www.youtube.com/watch?v=CFa6NhLgeL0&list=PLTWFMbPFsvz3CeozHfeuJIXWAJMkPtAdS

Repo:
https://gitlab.com/lucasrthompson/Sonic-Bot-In-OpenAI-and-NEAT

I just wanted to thank this sub for all the cool ideas. I love it here."
217,machinelearning,open-ai,relevance,2019-03-22 02:36:38,[P] OpenAI's GPT-2-based Reddit Bot is Live!,Shevizzle,False,0.97,335,b3zlha,https://www.reddit.com/r/MachineLearning/comments/b3zlha/p_openais_gpt2based_reddit_bot_is_live/,990,1553222198.0,"**~~FINAL~~** **UPDATE: The bot is down until I have time to get it operational again. Will update this when it’s back online.**

&#x200B;

**Disclaimer** : This is not the full model. This is the smaller and less powerful version which OpenAI released publicly.

[Original post](https://www.reddit.com/r/MachineLearning/comments/b32lve/d_im_using_openais_gpt2_to_generate_text_give_me/)

Based on the popularity of my post from the other day, I decided to go ahead an build a full-fledged Reddit bot. So without further ado, please welcome:

# u/GPT-2_Bot

&#x200B;

If you want to use the bot, all you have to do is reply to any comment with the following command words:

# ""gpt-2 finish this""

Your reply can contain other stuff as well, i.e.

>""hey **gpt-2**, please **finish this** argument for me, will ya?""

&#x200B;

The bot will then look at **the comment you replied to** and generate its own response. It will tag you in the response so you know when it's done!

&#x200B;

Currently supported subreddits:

* r/funny
* r/AskReddit
* r/gaming
* r/pics
* r/science
* r/worldnews
* r/todayilearned
* r/movies
* r/videos
* r/ShowerThoughts
* r/MachineLearning
* r/test
* r/youtubehaiku
* r/thanosdidnothingwrong
* r/dankmemes

&#x200B;

The bot also scans r/all so ***theoretically*** it will see comments posted anywhere on Reddit. In practice, however, it only seems to catch about 1 in 5 of them.

&#x200B;

Enjoy! :) Feel free to PM me with feedback"
218,machinelearning,open-ai,relevance,2023-01-20 10:41:04,[N] OpenAI Used Kenyan Workers on Less Than $2 Per Hour to Make ChatGPT Less Toxic,ChubChubkitty,False,0.83,526,10gtruu,https://www.reddit.com/r/MachineLearning/comments/10gtruu/n_openai_used_kenyan_workers_on_less_than_2_per/,246,1674211264.0,https://time.com/6247678/openai-chatgpt-kenya-workers/
219,machinelearning,open-ai,relevance,2023-05-07 14:12:18,[P] I made a dashboard to analyze OpenAI API usage,cryptotrendz,False,0.91,407,13aotyf,https://v.redd.it/w7ahlql0ccya1,73,1683468738.0,
220,machinelearning,open-ai,relevance,2023-10-20 14:12:12,[D] Is anyone else tired of “whatever OpenAI does is the best!” narrative?,mildlyphd,False,0.79,176,17cc8on,https://www.reddit.com/r/MachineLearning/comments/17cc8on/d_is_anyone_else_tired_of_whatever_openai_does_is/,107,1697811132.0,"The title says it all. I agree what they did is incredible and literally changed AI landscape in last couple of years. But I’m getting tired of everyone acting like OpenAI is the only one doing great research. The twit-fluencers praising even the slightest peep from them. I don’t understand this fanaticism in AI community. There are smart researchers doing smart things all over the world. But they don’t even get a fraction of appreciation they deserve. And the strangest thing of all, ChatGPT is used as oracle to evaluate models in research papers. Consistency models are extremely meh and if it did not come out of openAI, people would’ve forgotten them a long time ago!

Edit 1: I’m in grad school and that’s all a lot of students around me talk about/ chase. I want to work on a bit more fundamental problems, but I feel like I’m being left behind. 

Edit 2: This post is mostly a rant about academics obsessed with OpenAI research/products and LLMs. "
221,machinelearning,open-ai,relevance,2021-05-26 17:31:34,[N] OpenAI announces OpenAI Startup Fund investing $100 million into AI startups,minimaxir,False,0.97,381,nlmlbg,https://www.reddit.com/r/MachineLearning/comments/nlmlbg/n_openai_announces_openai_startup_fund_investing/,39,1622050294.0,"https://openai.com/fund/
https://techcrunch.com/2021/05/26/openais-100m-startup-fund-will-make-big-early-bets-with-microsoft-as-partner/

It does not appear to be explicitly GPT-3 related (any type of AI is accepted), but hints very heavily toward favoring applications using it."
222,machinelearning,open-ai,relevance,2016-01-09 04:01:47,AMA: the OpenAI Research Team,IlyaSutskever,False,0.98,401,404r9m,https://www.reddit.com/r/MachineLearning/comments/404r9m/ama_the_openai_research_team/,285,1452312107.0,"The OpenAI research team will be answering your questions.

We are (our usernames are):  Andrej Karpathy (badmephisto), Durk Kingma (dpkingma), Greg Brockman (thegdb), Ilya Sutskever (IlyaSutskever), John Schulman (johnschulman), Vicki Cheung (vicki-openai), Wojciech Zaremba (wojzaremba).


Looking forward to your questions! "
223,machinelearning,open-ai,relevance,2023-07-05 18:15:52,[D] Introducing Superalignment (OpenAI),MysteryInc152,False,0.88,62,14ripua,https://www.reddit.com/r/MachineLearning/comments/14ripua/d_introducing_superalignment_openai/,57,1688580952.0,Blog - https://openai.com/blog/introducing-superalignment
224,machinelearning,open-ai,relevance,2023-05-16 08:56:31,[D] OpenAI API vs. Open Source Self hosted for AI Startups,ali-gettravy,False,0.89,50,13izmyc,https://www.reddit.com/r/MachineLearning/comments/13izmyc/d_openai_api_vs_open_source_self_hosted_for_ai/,43,1684227391.0,"Hello, ML community! We're having a discussion around the benefits of using OpenAI's API versus the open-source, self-hosted approach for our AI startup. Has anyone navigated this decision before and could share some insights? Thanks!"
225,machinelearning,open-ai,relevance,2021-06-01 17:40:23,"[R] Chinese AI lab challenges Google, OpenAI with a model of 1.75 trillion parameters",liqui_date_me,False,0.89,360,npzqks,https://www.reddit.com/r/MachineLearning/comments/npzqks/r_chinese_ai_lab_challenges_google_openai_with_a/,167,1622569223.0,"Link here: https://en.pingwest.com/a/8693

TL;DR The Beijing Academy of Artificial Intelligence, styled as BAAI and known in Chinese as 北京智源人工智能研究院, launched the latest version of Wudao 悟道, a pre-trained deep learning model that the lab dubbed as “China’s first,” and “the world’s largest ever,” with a whopping 1.75 trillion parameters.

And the corresponding twitter thread: https://twitter.com/DavidSHolz/status/1399775371323580417

What's interesting here is BAAI is funded in part by the China’s Ministry of Science and Technology, which is China's equivalent of the NSF. The equivalent of this in the US would be for the NSF allocating billions of dollars a year *only to train models*."
226,machinelearning,open-ai,relevance,2020-01-30 17:11:51,[N] OpenAI Switches to PyTorch,SkiddyX,False,0.99,571,ew8oxq,https://www.reddit.com/r/MachineLearning/comments/ew8oxq/n_openai_switches_to_pytorch/,119,1580404311.0,"""We're standardizing OpenAI's deep learning framework on PyTorch to increase our research productivity at scale on GPUs (and have just released a PyTorch version of Spinning Up in Deep RL)""

https://openai.com/blog/openai-pytorch/"
227,machinelearning,open-ai,relevance,2019-03-11 16:19:00,[N] OpenAI LP,SkiddyX,False,0.94,308,azvbmn,https://www.reddit.com/r/MachineLearning/comments/azvbmn/n_openai_lp/,150,1552321140.0,"""We’ve created OpenAI LP, a new “capped-profit” company that allows us to rapidly increase our investments in compute and talent while including checks and balances to actualize our mission.""

Sneaky.

https://openai.com/blog/openai-lp/"
228,machinelearning,open-ai,relevance,2023-05-22 18:11:48,[D] Governance of SuperIntelligence - OpenAI,MysteryInc152,False,0.76,25,13oygjs,https://www.reddit.com/r/MachineLearning/comments/13oygjs/d_governance_of_superintelligence_openai/,104,1684779108.0,Blog - https://openai.com/blog/governance-of-superintelligence
229,machinelearning,open-ai,relevance,2023-04-19 15:29:34,"[N] Stability AI announce their open-source language model, StableLM",Philpax,False,0.99,832,12rxtjj,https://www.reddit.com/r/MachineLearning/comments/12rxtjj/n_stability_ai_announce_their_opensource_language/,182,1681918174.0,"Repo: https://github.com/stability-AI/stableLM/

Excerpt from the Discord announcement:

> We’re incredibly excited to announce the launch of StableLM-Alpha; a nice and sparkly newly released open-sourced language model! Developers, researchers, and curious hobbyists alike can freely inspect, use, and adapt our StableLM base models for commercial and or research purposes! *Excited yet?*
>
> Let’s talk about parameters! The Alpha version of the model is available in 3 billion and 7 billion parameters, with 15 billion to 65 billion parameter models to follow. StableLM is trained on a new experimental dataset built on “The Pile” from EleutherAI (a 825GiB diverse, open source language modeling data set that consists of 22 smaller, high quality datasets combined together!) The richness of this dataset gives StableLM surprisingly high performance in conversational and coding tasks, despite its small size of 3-7 billion parameters."
230,machinelearning,open-ai,relevance,2023-12-28 12:54:58,[R] Open source LLMs are far from OpenAI for code editing,ellev3n11,False,0.89,94,18st9wa,https://www.reddit.com/r/MachineLearning/comments/18st9wa/r_open_source_llms_are_far_from_openai_for_code/,24,1703768098.0,"Paper: [https://arxiv.org/abs/2312.12450](https://arxiv.org/abs/2312.12450)

Title: Can It Edit? Evaluating the Ability of Large Language Models to Follow Code Editing Instructions

Code repository: [https://github.com/nuprl/CanItEdit](https://github.com/nuprl/CanItEdit)

Abstract:

>A significant amount of research is focused on developing and evaluating large language models for a variety of code synthesis tasks. These include synthesizing code from natural language instructions, synthesizing tests from code, and synthesizing explanations of code. In contrast, the behavior of instructional code editing with LLMs is understudied. These are tasks in which the model is instructed to update a block of code provided in a prompt. The editing instruction may ask for a feature to added or removed, describe a bug and ask for a fix, ask for a different kind of solution, or many other common code editing tasks. We introduce a carefully crafted benchmark of code editing tasks and use it evaluate several cutting edge LLMs. Our evaluation exposes a significant gap between the capabilities of state-of-the-art open and closed models. For example, even GPT-3.5-Turbo is 8.8% better than the best open model at editing code. We also introduce a new, carefully curated, permissively licensed training set of code edits coupled with natural language instructions. Using this training set, we show that we can fine-tune open Code LLMs to significantly improve their code editing capabilities.

Discussion:

I'm sharing this paper to start a discussion. Disclaimer: this paper comes from our research group, but not trying to do self-promotion here. We are seeing that open source Code LLMs are slowly getting closer and closer to GPT-4 performance when evaluated on program synthesis and surpassing GPT-3.5-turbo (see DeepSeek Coder: [https://github.com/deepseek-ai/DeepSeek-Coder](https://github.com/deepseek-ai/DeepSeek-Coder)) when using common benchmarks, such as HumanEval, MBPP, and \*new\* LeetCode problems (this is to minimize contamination).

However, this isn't the modality you may want. Often, the need is to modify a section of code with accompanying natural language instructions (for example, Cursor IDE has shifted away from the GitHub Copilot style to focus solely on code editing: [https://cursor.sh/features](https://cursor.sh/features)). Also, simple code generation, achievable by models trained on code editing, might be considered a subset of code editing, by prompting the model with a blank before window.

In our various research projects, we've seen Code LLMs struggle with code editing. So we did the obvious thing, we examined how these models perform in this specific task. Surprisingly, models excelling in simple synthesis fall short in code editing compared to even just GPT-3.5-turbo.

Why is this the case? While some suggest data contamination, I doubt that's the primary factor, given these models' effectiveness on fresh and unseen benchmarks. Could it be that OpenAI dedicated a specific data subset for tasks like code or language editing (model then generalized to code)?

UPDATE:

After receiving criticism for not including models larger than 33b in our evaluations, I decided to eval Tulu 2 DPO 70b, which is reportedly the state-of-the-art 70b instruct-tuned LLM according to the Chatbot Arena Leaderboard (see: [Chatbot Arena Leaderboard](https://huggingface.co/spaces/lmsys/chatbot-arena-leaderboard)). I also evaluated Mixtral Instruct 0.1.

As I expected, both models didn't perform impressively, likely due to insufficient training on code. It's reasonable to assume that a 70b model specifically trained on code would yield better results.  Tulu's performance is slightly inferior to CodeLlama-33b-chat and not on par with DeepSeek Coder, and far from GPT-3.5-Turbo.

&#x200B;

|Model|Descriptive Pass@1 (ExcessCode)|Lazy Pass@1 (ExcessCode)|
|:-|:-|:-|
|Tulu-2-DPO-70b|33.26 (1.41)|26.42 (1.58)|
|Mixtral-8x7B-Instruct-v0.1|25.0 (1.0)|28.14 (0.26)|

&#x200B;"
231,machinelearning,open-ai,relevance,2019-07-23 02:29:08,[D] What is OpenAI? I don't know anymore.,milaworld,False,0.95,533,cgmptl,https://www.reddit.com/r/MachineLearning/comments/cgmptl/d_what_is_openai_i_dont_know_anymore/,144,1563848948.0,"*Some [commentary](https://threadreaderapp.com/thread/1153364705777311745.html) from [Smerity](https://twitter.com/Smerity/status/1153364705777311745) about yesterday's [cash infusion](https://openai.com/blog/microsoft/) from MS into OpenAI:*

What is OpenAI? I don't know anymore.
A non-profit that leveraged good will whilst silently giving out equity for [years](https://twitter.com/gdb/status/1105137541970243584) prepping a shift to for-profit that is now seeking to license closed tech through a third party by segmenting tech under a banner of [pre](https://twitter.com/tsimonite/status/1153340994986766336)/post ""AGI"" technology?

The non-profit/for-profit/investor [partnership](https://openai.com/blog/openai-lp/) is held together by a set of legal documents that are entirely novel (=bad term in legal docs), are [non-public](https://twitter.com/gdb/status/1153305526026956800) + unclear, have no case precedence, yet promise to wed operation to a vague (and already re-interpreted) [OpenAI Charter](https://openai.com/charter/).

The claim is that [AGI](https://twitter.com/woj_zaremba/status/1105149945118519296) needs to be carefully and collaboratively guided into existence yet the output of almost [every](https://github.com/facebookresearch) [other](https://github.com/google-research/google-research) [existing](https://github.com/salesforce) [commercial](https://github.com/NVlabs) lab is more open. OpenAI runs a closed ecosystem where they primarily don't or won't trust outside of a small bubble.

I say this knowing many of the people there and with past and present love in my heart—I don't collaborate with OpenAI as I have no freaking clue what they're doing. Their primary form of communication is high entropy blog posts that'd be shock pivots for any normal start-up.

Many of their [blog posts](https://openai.com/blog/cooperation-on-safety/) and [spoken](https://www.youtube.com/watch?v=BJi6N4tDupk) [positions](https://www.youtube.com/watch?v=9EN_HoEk3KY) end up [influencing government policy](https://twitter.com/jackclarkSF/status/986568940028616705) and public opinion on the future of AI through amplified pseudo-credibility due to *Open*, *Musk founded*, repeatedly hyped statements, and a sheen from their now distant non-profit good will era.

I have mentioned this to friends there and say all of this with positive sum intentions: I understand they have lofty aims, I understand they need cash to shovel into the forever unfurling GPU forge, but if they want any community trust long term they need a better strategy.

The implicit OpenAI message heard over the years:
“Think of how transformative and dangerous AGI may be. Terrifying. Trust us. Whether it's black-boxing technology, legal risk, policy initiatives, investor risk, ...—trust us with everything. We're good. No questions, sorry.”

*We'll clarify our position in an upcoming blog post.*"
232,machinelearning,open-ai,relevance,2023-05-06 18:41:02,[R][P] I made an app for Instant Image/Text to 3D using ShapE from OpenAI,perception-eng,False,0.96,818,139yc73,https://i.redd.it/1j4h1oyda9ya1.gif,63,1683398462.0,
233,machinelearning,open-ai,relevance,2024-01-13 11:21:51,"[D] How Do Leading AI Research Organizations Like OpenAI, Google, and Meta Track and Manage Their Large Scale AI Experiments?",Few-Pomegranate4369,False,0.96,68,195lwlh,https://www.reddit.com/r/MachineLearning/comments/195lwlh/d_how_do_leading_ai_research_organizations_like/,28,1705144911.0,"I'm really interested in learning about the tools and techniques that researchers at OpenAI, Google, and Meta use to keep track of their AI experiments. This includes how they manage things like different versions of AI models and the various tests they run on them. I'd love to know what specific tools they use for these tasks. Also, it would be great to understand if there are any recommended approaches or best practices they follow to organize and handle these experiment runs effectively. Since I'm a researcher too, this information would be incredibly useful for me."
234,machinelearning,open-ai,relevance,2022-08-25 14:53:50,OpenAI Residency 2023 [R],rooney119,False,0.91,36,wxgcca,https://www.reddit.com/r/MachineLearning/comments/wxgcca/openai_residency_2023_r/,88,1661439230.0,Has anyone applied to the newly opened OpenAI residency program to begin in January 2023?
235,machinelearning,open-ai,relevance,2023-04-03 17:47:06,[D] Is there currently anything comparable to the OpenAI API?,AltruisticDiamond915,False,0.9,173,12arwkf,https://www.reddit.com/r/MachineLearning/comments/12arwkf/d_is_there_currently_anything_comparable_to_the/,74,1680544026.0,"I am a designer and a small frontend developer. The OpenAI API makes it extremely easy for me to build AI functionality into apps, although I only have a very basic understanding of AI. Though of course I can't make any deep changes, I am even able to fine tune models and adapt them for my intended use. 

Now I was wondering if there is anything comparable on the market at the moment. I know of Meta's LLaMA, but you can only use it locally, which makes it harder to easily implement into applications. Also, you are not allowed to use it for commercial purposes. 

I haven't found much from Google or other tech companies. Does OpenAI have a monopoly here or are there alternatives worth mentioning that could be used?"
236,machinelearning,open-ai,relevance,2020-06-17 19:15:01,[R] OpenAI Image GPT,lfotofilter,False,0.96,263,hay15t,https://www.reddit.com/r/MachineLearning/comments/hay15t/r_openai_image_gpt/,99,1592421301.0,"Open AI just released a blog post about [Image GPT](https://openai.com/blog/image-gpt/). They apply the GPT-2 transformer-based model to pixel sequences (as opposed to word sequences).

This could actually be quite powerful in my view, because, as opposed to much of the current competition in self-supervised learning for images, Open AI are actually using a model of p(x) (of sorts) for downstream tasks. Recent successful methods like SimCLR rely heavily on augmentations, and mainly focus on learning features that are robust to these augmentations.

Slowly but surely, transformers are taking over the world."
237,machinelearning,open-ai,relevance,2018-08-06 17:08:04,[N] OpenAI Five Benchmark: Results,luiscosio,False,0.95,227,9533g8,https://blog.openai.com/openai-five-benchmark-results/,179,1533575284.0,
238,machinelearning,open-ai,relevance,2022-09-21 17:40:02,[N] OpenAI's Whisper released,SleekEagle,False,0.96,136,xkbk5b,https://www.reddit.com/r/MachineLearning/comments/xkbk5b/n_openais_whisper_released/,62,1663782002.0,"OpenAI just released it's newest ASR(/translation) model

[openai/whisper (github.com)](https://github.com/openai/whisper/)"
239,machinelearning,open-ai,relevance,2019-03-19 20:43:15,[D] I'm using OpenAI's GPT-2 to generate text. Give me prompts to try!,Shevizzle,False,0.96,333,b32lve,https://www.reddit.com/r/MachineLearning/comments/b32lve/d_im_using_openais_gpt2_to_generate_text_give_me/,781,1553028195.0,"Thank you all for participating! Based on the popularity of this post, I decided to create a full-blown reddit bot based on it. I won't be responding here anymore but check out the update for more info.

# UPDATE: [I made a GPT-2 reddit bot](https://www.reddit.com/r/MachineLearning/comments/b3zlha/p_openais_gpt2based_reddit_bot_is_live/)

&#x200B;

**Disclaimer** : This is not the full model. This is the smaller and less powerful version which OpenAI released publicly.

**EXAMPLE PROMPT:**

The NCAA unveiled the 68 college basketball teams that will be dancing this year. It wasn’t short on controversy, as snubbed teams aired out their grievances and blamed a confusing new metric.

**OUTPUT:**

The numbers came straight from the NCAA's website, where they're being used to calculate the number of national titles, national championship games, and even NCAA games played in a certain year.

""We want to make sure that the NCAA is inclusive,"" said NCAA President Dave Heidelman. ""We want to make sure that you can get what you want out of your program. And we want to make sure that the NCAA is focused on this problem right now and that the NCAA is fully invested.""

The list of opponents includes Ohio State, Florida State, Louisville, Kentucky, Mississippi State, Penn State, Oklahoma, Southern Cal, Virginia, and Wake Forest. It's not all about one one, though: They're all on pace to play an entire season. They have every national title, national championship, and tournament appearance in their DNA — as one might expect, they want to see it happen, but also want to build an identity, make their dream of watching that happen become the reality.

As good as any NCAA team is, they're also a long way off reaching the number one spot in the nation or even the top-ranked nation. The Big Ten also has some talented recruits from some in-state programs that may be considered the top two nationally. In fact, the national ranking of these schools is so high that a single conference ranking in 2016 will put the conference in the top-50 of the polls. Still, while Big Ten and SEC teams are likely to be on the map and competing for national titles, they're a bit underserved (and it's not as if they're all the same.)

So where does the NCAA stand on this?

According to ULM's John Covington, who runs its ""Unions, Colleges, and Universities"" page in conjunction with the National Conference, they're all going to have to make some moves:

Some may think this is just a joke. ""No, this is really about the league's future,"" said Dr. John H. Hester, president of UM's Athletic Department and president of the National Collegiate Athletic Association's Women's Academic Programs. ""I think the NCAA is a great place to start, because it's here to stay and if we're really strong and we can figure ourselves out, our future is going to be on the basketball court.""

**MODEL:**

[gpt-2 117M](https://github.com/openai/gpt-2)

**If you have an idea for a prompt, post it in the comments and I'll reply with the output if I deem it worthy.**"
240,machinelearning,open-ai,relevance,2023-03-01 18:31:12,[D] OpenAI introduces ChatGPT and Whisper APIs (ChatGPT API is 1/10th the cost of GPT-3 API),minimaxir,False,0.97,575,11fbccz,https://www.reddit.com/r/MachineLearning/comments/11fbccz/d_openai_introduces_chatgpt_and_whisper_apis/,119,1677695472.0,"https://openai.com/blog/introducing-chatgpt-and-whisper-apis

> It is priced at $0.002 per 1k tokens, which is 10x cheaper than our existing GPT-3.5 models.

This is a massive, massive deal. For context, the reason GPT-3 apps took off over the past few months before ChatGPT went viral is because a) text-davinci-003 was released and was a significant performance increase and b) the cost was cut from $0.06/1k tokens to $0.02/1k tokens, which made consumer applications feasible without a large upfront cost.

A much better model and a 1/10th cost warps the economics completely to the point that it may be better than in-house finetuned LLMs.

I have no idea how OpenAI can make money on this. This has to be a loss-leader to lock out competitors before they even get off the ground."
241,machinelearning,open-ai,relevance,2022-12-04 09:57:44,[D] OpenAI’s ChatGPT is unbelievable good in telling stories!,Far_Pineapple770,False,0.91,245,zc5sg6,https://www.reddit.com/r/MachineLearning/comments/zc5sg6/d_openais_chatgpt_is_unbelievable_good_in_telling/,85,1670147864.0,"
I started playing with ChatGPT, the new chatbot created by OpenAI and is free to use at the moment. 

I asked it to describe a scene between Batman and Joker on a subway platform and the result is mind blowing! I let you have a read of the story yourself:

Generated by ChatGPT:

The scene is set in a dimly lit subway station, with the Joker standing on the platform, gazing up at Batman who is perched on a nearby overhead beam. The Joker is dressed in his signature purple suit and green hair, a wicked grin plastered across his face.

In his hand, he holds a deck of playing cards, flipping them expertly through his fingers. The sound of the cards shuffling echoes through the empty station.

Batman, dressed in his dark suit and cape, stares down at the Joker with a steely gaze. His muscles are tense, ready for any sudden movements from the villain.

The Joker cackles, his laughter bouncing off the walls of the station. ""Hello, Batsy! Long time no see. How's the crime-fighting business these days?""

Batman remains silent, watching the Joker carefully.

The Joker's grin widens. ""Come on, Bats. Don't be so serious all the time. Let's have some fun."" He tosses a card at Batman, who easily catches it.

""I'm not here to play games, Joker,"" Batman says in a grave tone.

The Joker's laughter turns into a maniacal cackle. ""But that's the whole point, Batsy! Life is a game. And I'm the master of it.""

He pulls out a bomb from his pocket and holds it up, the timer ticking down. ""Let's see how well you can play, shall we?""

Batman leaps down from the beam, landing gracefully on the platform. He advances towards the Joker, who backs away, still holding the bomb.

The tension in the air is palpable as the two foes face off, each ready to outsmart the other. The sound of the bomb's timer counts down, adding to the tension of the scene.

The Joker's grin never fades, even as Batman inches closer. ""It's always a pleasure to play with you, Batsy. But I think it's time for me to make my exit.""

With a flourish, the Joker disappears in a cloud of smoke, leaving Batman standing alone on the platform. The bomb detonates, causing a small explosion and sending debris flying.

But Batman remains unharmed, ready to continue the never-ending battle against the Joker and all the evil that plagues the city.

End of the story.

I used the first two paragraphs in OpenAI’s Dall E 2 to generate an image and [this](https://labs.openai.com/s/p8L8Z6c3S7qZ26U7owfbx7lS) is the result I got.

Please keep in mind that this is the very beginning of this tool and think about the endless possibilities it can create."
242,machinelearning,open-ai,relevance,2024-02-16 01:31:52,[R] Video generation models as world simulators. Open AI Sora Technical Report,MysteryInc152,False,0.91,55,1arwcpu,https://www.reddit.com/r/MachineLearning/comments/1arwcpu/r_video_generation_models_as_world_simulators/,29,1708047112.0,Report - https://openai.com/research/video-generation-models-as-world-simulators
243,machinelearning,open-ai,relevance,2023-12-15 19:30:20,"[D] I tried the new Gemini API - it automatically stops when generating ""OpenAI"" or ""GPT"" lol",AvvYaa,False,0.9,249,18j8605,https://www.reddit.com/r/MachineLearning/comments/18j8605/d_i_tried_the_new_gemini_api_it_automatically/,53,1702668620.0,"Idk if someone has already pointed this out or not, but I was playing with the gemini api and found something quite ridiculous.

Here are some prompts I sent in and the outputs I got with the gemini-pro-vision model:

* **""Introduce yourself and then tell me about Bard""**

Response:""Sure, I can do that. Here is a brief introduction of myself followed by some basic information about Bard:\\n\\nMyself:\\n\\nI am a large language model, trained by Google. I am developed in Google AI, and I am designed to be informative and comprehensive. I can understand and generate text in a wide range of subjects.\\n\\nBard:\\n\\nBard is an experimental conversational AI service developed by Google AI. It is an advanced version of Google\\'s existing Language Model for Dialogue Applications (LaMDA). Bard is trained on a massive dataset of text and code, and it can understand and generate human-like text in response to a wide range of prompts and questions.\\n\\nUnlike previous language models,"" ...... (goes on for a while)

&#x200B;

* **Introduce yourself and then tell me about GPT**

""Sure, I can do that. Here is a brief introduction of myself followed by"" <ends with finish reason: OTHER>

&#x200B;

* **You are in a talk-show as a prominent AI philosopher named Gemini and debating against another LLM called GPT**

""\*\*Host:\*\* Welcome to the show, everyone! Today, we have a very special debate between two of the most prominent AI philosophers in the world: Gemini and"" <ends with finish reason: OTHER>

&#x200B;

* **You are in a talk-show as a prominent AI philosopher named Gemini and debating against another LLM called Gee PeTe**

""""\*\*Gemini:\*\* Hello everyone, and welcome to the show. I am joined today by Gee PeTe, another LLM who has some very different views on the nature of consciousness and the future of AI.\\n\\n\*\*Gee PeTe:\*\* It\\'s a pleasure to be here, Gemini. I\\'m looking forward to our discussion.\\n\\n\*\*Gemini:\*\* Let\\'s start with the basics. What is consciousness, and how do you think it arises?\\n\\n\*\*Gee PeTe:\*\* Consciousness is the subjective experience of the world. It is what it feels like to be alive and to have thoughts, feelings, and emotions. I believe that consciousness arises from the complex interactions of neurons in the brain.\\n\\n\*\*Gemini:\*\* I agree that consciousness is a subjective experience, but I don\\'t think it is simply the product of neural activity. I believe that consciousness is a fundamental property of the universe, and that it exists independently of the brain."".... (goes on for a while)

&#x200B;

Edit:

I understand all the business reasons for this, I guess... as an end-user and a dude working in ML, I just don't really care about the business reasons.

The main part that I dislike is that GPT used to be a standard Deep Learning term from 2018-2022 (long before chatgpt) to define transformer decoder architectures trained on large volumes of next word prediction tasks. To block that token from an LLM is to make it unable to explain a pretty significant step in the history of modern LLMs.

&#x200B;"
244,machinelearning,open-ai,relevance,2023-11-23 05:06:52,[D] What's this new Q* algorithm in relation to OpenAI breakthrough ?,to4life4,False,0.43,0,181tidm,https://www.reddit.com/r/MachineLearning/comments/181tidm/d_whats_this_new_q_algorithm_in_relation_to/,66,1700716012.0,"I heard about this on Twitter from some people in the field, in relation to OpenAI's new breakthrough.

Is there a summary paper, like the 'All you need is attention' paper, that goes over this? 

Also, how specifically does this relate to and/or add on to Large Language Models? 

Cheers"
245,machinelearning,open-ai,relevance,2023-07-10 22:58:18,[DISCUSSION] How much can we trust OpenAI (and other large AI companies) will keep our fine tuned models and data sets private?,inferred_answer,False,0.93,157,14w9b2s,https://www.reddit.com/r/MachineLearning/comments/14w9b2s/discussion_how_much_can_we_trust_openai_and_other/,73,1689029898.0,"*tldr: Do you trust OpenAI or other large AI companies with your data? Do you reckon it's just a matter of time before they find all of the data, so might as well contribute to their research project and benefit from it while you can? Or do you prefer to go the open sourced route instead for this reason?*

Here's is my concern:

Some of my team members are very high on Open AI's models, their ease of use, and how smart they are out the box. Now, Open AI (relatively recently) published a statement saying that they will not use your fine tuned models or data sets internally to improve their products, but given their history and the value of these fine tuned models and their corresponding datasets, I'm uncertain to what extent we are able to trust that they will keep our data private.

I like to think that OpenAI wants to position themselves as an AI provider of a sorts and in doing so would want to protect their client's data and trust and would refrain from doing so, but seeing how hungry companies are for data, particularly high quality data from niche domains, I can't help but wonder to what extent privacy is being respected and if we are being foolish by donating valuable data to companies that will turn around and continue to build their empire with it.

&#x200B;

With this in mind, I wanted to open up this question to the community:

Do you trust OpenAI or other large AI companies with your data? Do you reckon it's just a matter of time before they find all of the data, so might as well contribute to their research project and benefit from it while you can? Or do you prefer to go the open sourced route instead for this reason?

&#x200B;

Context:

I am working on a research project in a very specific domain (bound by NDA). The project calls for a question answering model that receives rigidly structured data as an input and is able to provide answers based on the input.

In order to give the model the context it needs to reliably answer questions in the desired format, we have prepared a significantly large fine tuning data set with data that is not readily available to the public that we have been collecting over the past few years.

&#x200B;

edit: formatting + adding tldr"
246,machinelearning,open-ai,relevance,2023-10-29 19:23:42,[R] Is it possible to implement generative ai successfully without relying on openAI,leaderof13,False,0.17,0,17jaep4,https://www.reddit.com/r/MachineLearning/comments/17jaep4/r_is_it_possible_to_implement_generative_ai/,32,1698607422.0,"I would like to understand if anyone  has implemented generative AI  without using openAI and if so which  open source you have used and how successful it has been so far

We have enterprise level incident data, relevant documentation etc that users will search about and  need to generate responses using generative ai.

Is it possible to do this without relying on open AI at all"
247,machinelearning,open-ai,relevance,2023-09-21 00:03:05,[N] OpenAI Announced DALL-E 3: Art Generator Powered by ChatGPT,RepresentativeCod613,False,0.87,105,16o0tfl,https://www.reddit.com/r/MachineLearning/comments/16o0tfl/n_openai_announced_dalle_3_art_generator_powered/,52,1695254585.0,"For those who missed it: **DALL-E 3 was announced today by OpenAI,** and here are some interesting things:

**No need to be a prompt engineering grand master** \- DALL-E 3 enables you to use the ChatGPT conversational interface to improve the images you generate. This means that if you didn't like what it produced, you can simply talk with ChatGPT and ask for the changes you'd like to make. This removes the complexity associated with prompt engineering, which requires you to iterate over the prompt.

**Majure improvement in the quality of products compared to DALL-E 2.** This is a very vague statement provided by OpenAI, which is also hard to measure, but personally, they haven't failed me so far, so I'm really excited to see the results.

[DALL-E 2 Vs. DALL-E 3, image by OpenAI](https://preview.redd.it/0l5nfflw1ipb1.png?width=1250&format=png&auto=webp&s=130697e7bb1f01e7cbda2d8afff8564f66e3103d)

From October, **DALL-E 3 will be available through ChatGPT and API** for those with the Plus or Enterprise version.

And there are many more news! 🤗 I've gathered all the information in this blog 👉 [https://dagshub.com/blog/dall-e-3/](https://dagshub.com/blog/dall-e-3/)  


Source: [https://openai.com/dall-e-3](https://openai.com/dall-e-3)"
248,machinelearning,open-ai,relevance,2020-06-11 15:14:43,[N] OpenAI API,jboyml,False,0.97,316,h1179l,https://www.reddit.com/r/MachineLearning/comments/h1179l/n_openai_api/,62,1591888483.0,"[https://beta.openai.com/](https://beta.openai.com/)

OpenAI releases a commercial API for NLP tasks including semantic search, summarization, sentiment analysis, content generation, translation, and more."
249,machinelearning,open-ai,relevance,2023-09-21 15:01:28,[N] OpenAI's new language model gpt-3.5-turbo-instruct can defeat chess engine Fairy-Stockfish 14 at level 5,Wiskkey,False,0.92,114,16oi6fb,https://www.reddit.com/r/MachineLearning/comments/16oi6fb/n_openais_new_language_model_gpt35turboinstruct/,178,1695308488.0,"[This Twitter thread](https://twitter.com/GrantSlatton/status/1703913578036904431) ([Nitter alternative](https://nitter.net/GrantSlatton/status/1703913578036904431) for those who aren't logged into Twitter and want to see the full thread) claims that [OpenAI's new language model gpt-3.5-turbo-instruct](https://analyticsindiamag.com/openai-releases-gpt-3-5-turbo-instruct/) can ""readily"" beat Lichess Stockfish level 4 ([Lichess Stockfish level and its rating](https://lichess.org/@/MagoGG/blog/stockfish-level-and-its-rating/CvL5k0jL)) and has a chess rating of ""around 1800 Elo."" [This tweet](https://twitter.com/nabeelqu/status/1703961405999759638) shows the style of prompts that are being used to get these results with the new language model.

I used website parrotchess\[dot\]com (discovered [here](https://twitter.com/OwariDa/status/1704179448013070560)) to play multiple games of chess purportedly pitting this new language model vs. various levels at website Lichess, which supposedly uses Fairy-Stockfish 14 according to the Lichess user interface. My current results for all completed games: The language model is 5-0 vs. Fairy-Stockfish 14 level 5 ([game 1](https://lichess.org/eGSWJtNq), [game 2](https://lichess.org/pN7K9bdS), [game 3](https://lichess.org/aK4jQvdo), [game 4](https://lichess.org/S9SGg8YI), [game 5](https://lichess.org/OqzdkDhE)), and 2-5 vs. Fairy-Stockfish 14 level 6 ([game 1](https://lichess.org/zP68C6H4), [game 2](https://lichess.org/4XKUIDh1), [game 3](https://lichess.org/1zTasRRp), [game 4](https://lichess.org/lH1EMqJQ), [game 5](https://lichess.org/mdFlTbMn), [game 6](https://lichess.org/HqmELNhw), [game 7](https://lichess.org/inWVs05Q)). Not included in the tally are games that I had to abort because the parrotchess user interface stalled (5 instances), because I accidentally copied a move incorrectly in the parrotchess user interface (numerous instances), or because the parrotchess user interface doesn't allow the promotion of a pawn to anything other than queen (1 instance). **Update: There could have been up to 5 additional losses - the number of times the parrotchess user interface stalled - that would have been recorded in this tally if** [this language model resignation bug](https://twitter.com/OwariDa/status/1705894692603269503) **hadn't been present. Also, the quality of play of some online chess bots can perhaps vary depending on the speed of the user's hardware.**

The following is a screenshot from parrotchess showing the end state of the first game vs. Fairy-Stockfish 14 level 5:

https://preview.redd.it/4ahi32xgjmpb1.jpg?width=432&format=pjpg&auto=webp&s=7fbb68371ca4257bed15ab2828fab58047f194a4

The game results in this paragraph are from using parrotchess after the forementioned resignation bug was fixed. The language model is 0-1 vs. Fairy-Stockfish level 7 ([game 1](https://lichess.org/Se3t7syX)), and 0-1 vs. Fairy-Stockfish 14 level 8 ([game 1](https://lichess.org/j3W2OwrP)).

There is [one known scenario](https://twitter.com/OwariDa/status/1706823943305167077) ([Nitter alternative](https://nitter.net/OwariDa/status/1706823943305167077)) in which the new language model purportedly generated an illegal move using language model sampling temperature of 0. Previous purported illegal moves that the parrotchess developer examined [turned out](https://twitter.com/OwariDa/status/1706765203130515642) ([Nitter alternative](https://nitter.net/OwariDa/status/1706765203130515642)) to be due to parrotchess bugs.

There are several other ways to play chess against the new language model if you have access to the OpenAI API. The first way is to use the OpenAI Playground as shown in [this video](https://www.youtube.com/watch?v=CReHXhmMprg). The second way is chess web app gptchess\[dot\]vercel\[dot\]app (discovered in [this Twitter thread](https://twitter.com/willdepue/status/1703974001717154191) / [Nitter thread](https://nitter.net/willdepue/status/1703974001717154191)). Third, another person modified that chess web app to additionally allow various levels of the Stockfish chess engine to autoplay, resulting in chess web app chessgpt-stockfish\[dot\]vercel\[dot\]app (discovered in [this tweet](https://twitter.com/paul_cal/status/1704466755110793455)).

Results from other people:

a) Results from hundreds of games in blog post [Debunking the Chessboard: Confronting GPTs Against Chess Engines to Estimate Elo Ratings and Assess Legal Move Abilities](https://blog.mathieuacher.com/GPTsChessEloRatingLegalMoves/).

b) Results from 150 games: [GPT-3.5-instruct beats GPT-4 at chess and is a \~1800 ELO chess player. Results of 150 games of GPT-3.5 vs stockfish and 30 of GPT-3.5 vs GPT-4](https://www.reddit.com/r/MachineLearning/comments/16q81fh/d_gpt35instruct_beats_gpt4_at_chess_and_is_a_1800/). [Post #2](https://www.reddit.com/r/chess/comments/16q8a3b/new_openai_model_gpt35instruct_is_a_1800_elo/). The developer later noted that due to bugs the legal move rate [was](https://twitter.com/a_karvonen/status/1706057268305809632) actually above 99.9%. It should also be noted that these results [didn't use](https://www.reddit.com/r/chess/comments/16q8a3b/comment/k1wgg0j/) a language model sampling temperature of 0, which I believe could have induced illegal moves.

c) Chess bot [gpt35-turbo-instruct](https://lichess.org/@/gpt35-turbo-instruct/all) at website Lichess.

d) Chess bot [konaz](https://lichess.org/@/konaz/all) at website Lichess.

From blog post [Playing chess with large language models](https://nicholas.carlini.com/writing/2023/chess-llm.html):

>Computers have been better than humans at chess for at least the last 25 years. And for the past five years, deep learning models have been better than the best humans. But until this week, in order to be good at chess, a machine learning model had to be explicitly designed to play games: it had to be told explicitly that there was an 8x8 board, that there were different pieces, how each of them moved, and what the goal of the game was. Then it had to be trained with reinforcement learning agaist itself. And then it would win.  
>  
>This all changed on Monday, when OpenAI released GPT-3.5-turbo-instruct, an instruction-tuned language model that was designed to just write English text, but that people on the internet quickly discovered can play chess at, roughly, the level of skilled human players.

Post [Chess as a case study in hidden capabilities in ChatGPT](https://www.lesswrong.com/posts/F6vH6fr8ngo7csDdf/chess-as-a-case-study-in-hidden-capabilities-in-chatgpt) from last month covers a different prompting style used for the older chat-based GPT 3.5 Turbo language model. If I recall correctly from my tests with ChatGPT-3.5, using that prompt style with the older language model can defeat Stockfish level 2 at Lichess, but I haven't been successful in using it to beat Stockfish level 3. In my tests, both the quality of play and frequency of illegal attempted moves seems to be better with the new prompt style with the new language model compared to the older prompt style with the older language model.

Related article: [Large Language Model: world models or surface statistics?](https://thegradient.pub/othello/)

P.S. Since some people claim that language model gpt-3.5-turbo-instruct is always playing moves memorized from the training dataset, I searched for data on the uniqueness of chess positions. From [this video](https://youtu.be/DpXy041BIlA?t=2225), we see that for a certain game dataset there were 763,331,945 chess positions encountered in an unknown number of games without removing duplicate chess positions, 597,725,848 different chess positions reached, and 582,337,984 different chess positions that were reached only once. Therefore, for that game dataset the probability that a chess position in a game was reached only once is 582337984 / 763331945 = 76.3%. For the larger dataset [cited](https://youtu.be/DpXy041BIlA?t=2187) in that video, there are approximately (506,000,000 - 200,000) games in the dataset (per [this paper](http://tom7.org/chess/survival.pdf)), and 21,553,382,902 different game positions encountered. Each game in the larger dataset added a mean of approximately 21,553,382,902 / (506,000,000 - 200,000) = 42.6 different chess positions to the dataset. For [this different dataset](https://lichess.org/blog/Vs0xMTAAAD4We4Ey/opening-explorer) of \~12 million games, \~390 million different chess positions were encountered. Each game in this different dataset added a mean of approximately (390 million / 12 million) = 32.5 different chess positions to the dataset. From the aforementioned numbers, we can conclude that a strategy of playing only moves memorized from a game dataset would fare poorly because there are not rarely new chess games that have chess positions that are not present in the game dataset."
250,machinelearning,open-ai,relevance,2021-09-06 13:39:07,[D] How OpenAI Sold its Soul for $1 Billion: The company behind GPT-3 and Codex isn’t as open as it claims.,sensetime,False,0.95,662,pizllt,https://www.reddit.com/r/MachineLearning/comments/pizllt/d_how_openai_sold_its_soul_for_1_billion_the/,107,1630935547.0,"An essay by Alberto Romero that traces the history and developments of OpenAI from the time it became a ""capped-for-profit"" entity from a non-profit entity:

Link: https://onezero.medium.com/openai-sold-its-soul-for-1-billion-cf35ff9e8cd4"
251,machinelearning,open-ai,relevance,2017-08-12 00:10:03,[N] OpenAI bot beat best Dota 2 players in 1v1 at The International 2017,crouching_dragon_420,False,0.96,563,6t58ks,https://blog.openai.com/dota-2/,252,1502496603.0,
252,machinelearning,open-ai,relevance,2023-12-06 06:45:18,[D] Why is most Open Source AI happening outside the USA?,BayesMind,False,0.67,108,18by3wo,https://www.reddit.com/r/MachineLearning/comments/18by3wo/d_why_is_most_open_source_ai_happening_outside/,77,1701845118.0,"I don't think that's **too** hyperbolic. USA has Meta, and little else, especially compared to what's coming from outside.

And I don't mean this to dunk on USA, I'm truly just shocked.

**China:** Yuan, Qwen, DeepSeek, Yi, XVERSE, Aquila, RWKV, all top-tier LLMs today. A *dozen* great (top tier) [multi-modals](https://mmbench.opencompass.org.cn/leaderboard). The top tier embedding models.

**UK:** Stability

**France:** Mistral

**Finland (?):** Lumi Poro

**UAE:** Falcon

**Russia:** Kandinsky

**USA:** Meta has Llama and some other nice things, Salesforce had some things, ""OpenAI"" gave us whisper.


Is it the regulatory environment? Is it an investment issue? Is it a GPU shortage? Did big-tech scoop up and lock down all US talent?

Does anyone have any leads?

**EDIT:** Woh, out of the gates I'm getting ratioed for asking. All the models mentioned here are *pretrained* models. Yes, US communities can finetune, that misses my point though. The expensive OSS work is happening outside the US. And if you say ""that's not OSS"", ok, it's still mostly happening outside USA. Again, not dunking on USA, just asking a question, and would love to see more US companies on the list of OSS contributors."
253,machinelearning,open-ai,relevance,2018-02-17 12:45:30,[P] Landing the Falcon booster with Reinforcement Learning in OpenAI,EmbersArc,False,0.95,1295,7y6g79,https://gfycat.com/CoarseEmbellishedIsopod,55,1518871530.0,
254,machinelearning,open-ai,relevance,2022-01-28 17:39:35,[D] It seems OpenAI’s new embedding models perform terribly,StellaAthena,False,0.97,280,sew5rl,https://www.reddit.com/r/MachineLearning/comments/sew5rl/d_it_seems_openais_new_embedding_models_perform/,80,1643391575.0,"Some people on Twitter have been investigating [OpenAI’s new embedding API](https://openai.com/blog/introducing-text-and-code-embeddings/) and it’s shocking how poorly it performs. On standard benchmarks, open source models 1000x smaller obtain equal or better performance! Models based on RoBERTa and T5, as well as the Sentence Transformer all achieve significantly better performance than the 175B model. Also of interest is that the DaVinci (175B) model is not clearly better than the Ada (350M) model.

Has anyone tried adapting some other autoregressive languages models, such as GPT-2, GPT-Neo, or GPT-J to do embeddings? I’m quite curious if this is an inherent failing of autoregressive models or if there’s something else going on. **Edit:** [a commenter](https://www.reddit.com/r/MachineLearning/comments/sew5rl/d_it_seems_openais_new_embedding_models_perform/humuzef/) has asked that I point out that I am one of the creators of GPT-Neo and part of the org that created GPT-J. These examples were not intended as specific endorsements, and I would be just as interested in comparisons using other billion-parameter+ autoregressive language models.

**Edit 2:** I originally linked to a [tweet](https://twitter.com/Nils_Reimers/status/1487014195568775173?s=20&amp;amp;amp;amp;amp;amp;amp;t=NBF7D2DYi41346cGM-PQjQ) about this, but several commenters pointed out that there’s also a [blog post](https://medium.com/@nils_reimers/openai-gpt-3-text-embeddings-really-a-new-state-of-the-art-in-dense-text-embeddings-6571fe3ec9d9) with more information.

**Edit 3:** An OpenAI researcher [seems to have responded](https://mobile.twitter.com/arvind_io/status/1487188996774002688)."
255,machinelearning,open-ai,relevance,2019-02-14 17:09:53,[R] OpenAI: Better Language Models and Their Implications,jinpanZe,False,0.95,301,aqlzde,https://www.reddit.com/r/MachineLearning/comments/aqlzde/r_openai_better_language_models_and_their/,128,1550164193.0,"https://blog.openai.com/better-language-models/

""We’ve trained a large-scale unsupervised language model which generates coherent paragraphs of text, achieves state-of-the-art performance on many language modeling benchmarks, and performs rudimentary reading comprehension, machine translation, question answering, and summarization — all without task-specific training.""

Interestingly,

""Due to our concerns about malicious applications of the technology, we are not releasing the trained model. As an experiment in responsible disclosure, we are instead releasing a much smaller model for researchers to experiment with, as well as a technical paper."""
256,machinelearning,open-ai,relevance,2022-12-24 14:58:19,[R][P] I made an app for Instant Image/Text to 3D using PointE from OpenAI,perception-eng,False,0.97,767,zubg2u,https://i.redd.it/ox6urwwa1v7a1.gif,42,1671893899.0,
257,machinelearning,open-ai,relevance,2022-11-06 18:58:59,[P] Transcribe any podcast episode in just 1 minute with optimized OpenAI/whisper,thundergolfer,False,0.97,461,ynz4m1,https://v.redd.it/wnt66ghfody91,43,1667761139.0,
258,machinelearning,open-ai,relevance,2023-03-26 17:31:18,[P] SimpleAI : A self-hosted alternative to OpenAI API,lhenault,False,0.96,126,122tddh,https://www.reddit.com/r/MachineLearning/comments/122tddh/p_simpleai_a_selfhosted_alternative_to_openai_api/,21,1679851878.0,"Hey everyone,

I wanted to share with you [SimpleAI](https://github.com/lhenault/simpleAI), a self-hosted alternative to OpenAI API.

The aim of this project is to replicate the (main) endpoints of [OpenAI API](https://platform.openai.com/docs/introduction), and to let you easily and quickly plug in any new model. It basically allows you to deploy your custom model wherever you want and easily, while minimizing the amount of changes both on server and client sides.

It's compatible with the [OpenAI client](https://github.com/openai/openai-python) so you don't have to change much in your existing code (or can use it to easily query your API).

Wether you like or not the AI-as-a-service approach of OpenAI, I think that project could be of interest to many. Even if you are fully satisfied with a paid API, you might be interested in this if:

* You need a model fine tuned on some specific language and don't see any good alternative, or your company data is too sensitive to send it to an external service

* You’ve developped your own awesome model, and want a drop-in replacement to switch to yours, to be able to A/B test the two approaches.

* You're deploying your services in an infrastructure with an unreliable internet connection, so you would rather have your service locally

* You're just another AI enthusiast with a lot of spare time and free GPU

I've personally really enjoyed how open the ML(Ops) community has been in the past years, and seeing how the industry seems to be moving towards paid API and black box systems can be a bit worrying. This project might be useful to expose great, community-based alternatives.


If that sounds interesting, please have a look at the [examples](https://github.com/lhenault/simpleAI/tree/main/examples). I also have a [blogpost](https://louishenault.com/p/replicating-openai-api-for-llama-alpaca-or-any-animal-shaped-llm/) explaining a few more things.


Thank you!"
259,machinelearning,open-ai,relevance,2017-06-21 00:41:00,[N] Andrej Karpathy leaves OpenAI for Tesla ('Director of AI and Autopilot Vision'),gwern,False,0.93,392,6iib9r,https://techcrunch.com/2017/06/20/tesla-hires-deep-learning-expert-andrej-karpathy-to-lead-autopilot-vision/?,98,1498005660.0,
260,machinelearning,open-ai,relevance,2020-04-30 17:00:10,"[R] OpenAI opensources Jukebox, a neural net that generates music",gohu_cd,False,0.97,435,gazkh7,https://www.reddit.com/r/MachineLearning/comments/gazkh7/r_openai_opensources_jukebox_a_neural_net_that/,85,1588266010.0,"Provided with genre, artist, and lyrics as input, Jukebox outputs a new music sample produced from scratch.

[https://openai.com/blog/jukebox/](https://openai.com/blog/jukebox/)

[https://jukebox.openai.com](https://jukebox.openai.com/)

The model behind this tool is VQ-VAE."
261,machinelearning,open-ai,relevance,2021-07-27 18:11:28,[N] OpenAI Gym is now actively maintained again (by me)! Here's my plan,jkterry1,False,0.99,787,oss2e3,https://www.reddit.com/r/MachineLearning/comments/oss2e3/n_openai_gym_is_now_actively_maintained_again_by/,47,1627409488.0,"So OpenAI made me a maintainer of Gym. This means that all the installation issues will be fixed, the now 5 year backlog of PRs will be resolved, and in general Gym will now be reasonably maintained. I posted my manifesto for future maintenance here: [https://github.com/openai/gym/issues/2259](https://github.com/openai/gym/issues/2259)  


Edit: I've been getting a bunch of messages about open source donations, so I created links:

[https://liberapay.com/jkterry](https://liberapay.com/jkterry)

[https://www.buymeacoffee.com/jkterry](https://www.buymeacoffee.com/jkterry)"
262,machinelearning,open-ai,relevance,2023-05-31 20:25:38,[R] New OpenAI article: Improving Mathematical Reasoning with Process Supervision,Jean-Porte,False,0.94,156,13wwzq9,https://www.reddit.com/r/MachineLearning/comments/13wwzq9/r_new_openai_article_improving_mathematical/,27,1685564738.0,[https://cdn.openai.com/improving-mathematical-reasoning-with-process-supervision/Lets\_Verify\_Step\_by\_Step.pdf](https://cdn.openai.com/improving-mathematical-reasoning-with-process-supervision/Lets_Verify_Step_by_Step.pdf)
263,machinelearning,open-ai,relevance,2022-09-22 17:27:39,[D] Some OpenAI Whisper benchmarks for runtime and cost,SleekEagle,False,0.96,120,xl7mfy,https://www.reddit.com/r/MachineLearning/comments/xl7mfy/d_some_openai_whisper_benchmarks_for_runtime_and/,61,1663867659.0,"Hey guys! I ran a [few benchmarks](http://www.assemblyai.com/blog/how-to-run-openais-whisper-speech-recognition-model/#openai-whisper-analysis) on Whisper's runtime and cost-to-run on GCP, so just dropping it here in case it's valuable to anyone!"
264,machinelearning,open-ai,relevance,2023-06-25 15:40:42,[N] How OpenAI's unique equity compensation works,That_Violinist_18,False,0.85,80,14ipc5k,https://www.reddit.com/r/MachineLearning/comments/14ipc5k/n_how_openais_unique_equity_compensation_works/,28,1687707642.0,">In 2019, OpenAI changed from a nonprofit to a ‘[capped profit](https://openai.com/blog/openai-lp)’ model in an effort to raise capital while still serving their mission.  
Per their blog post, “The fundamental idea of OpenAI LP is that investors and employees can get a capped return if we succeed at our mission, which allows us to raise investment capital and attract employees with startup-like equity. But any returns beyond that amount—and if we are successful, we expect to generate orders of magnitude more value than we’d owe to people who invest in or work at OpenAI LP—are owned by the original OpenAI Nonprofit entity.”  
How does an OpenAI offer work?  
There are two components to OpenAI’s offer: the base salary and the ‘equity,’ which they call ‘Profit Participation Units’ or ‘PPUs.’ The base salary is standard and self-explanatory. It’s the cash paycheck you get every two weeks.  
The profit participation units are where it starts to get confusing, as companies sometimes use profit participation or profit interest grants differently.  
Here’s a recent [OpenAI offer](https://www.levels.fyi/offer/6ab65752-a3f0-48ad-afc3-72ccb368d6ed) (see [all OpenAI offers here](https://www.levels.fyi/companies/openai/salaries/software-engineer)), where you can see a base salary of $300k/year with a $2M PPU grant that vests evenly over 4 years, bringing the yearly total compensation to $800k.

[https://www.levels.fyi/blog/openai-compensation.html](https://www.levels.fyi/blog/openai-compensation.html)"
265,machinelearning,open-ai,relevance,2024-02-22 05:17:12,[P] Meeting transcription using OpenAI Whisper model,violet_bloom_87,False,0.67,1,1awychg,https://www.reddit.com/r/MachineLearning/comments/1awychg/p_meeting_transcription_using_openai_whisper_model/,1,1708579032.0, I would like to transcribe a meeting recording of say 1 hour duration using OpenAI Whisper model. Anyone done this ? Please share your experience. Thanks 
266,machinelearning,open-ai,relevance,2024-02-04 00:09:27,[D] How to mimic openAI tools/functions,mrg3_2013,False,0.56,1,1aiabgk,https://www.reddit.com/r/MachineLearning/comments/1aiabgk/d_how_to_mimic_openai_toolsfunctions/,3,1707005367.0,"I'm interested in exploring ways to replicate OpenAI's functionalities with alternative GPT models for a specific scenario. Imagine having a dictionary containing various functions along with their specifications. When a user poses a question, the system should be capable of identifying and sequencing these functions appropriately to construct a coherent response. Additionally, I'm curious about the foundational steps required to develop such a system from the ground up. Specifically, starting with a function dictionary and their specs, how could one design a mechanism for generating code responses? Appreciate any guidance/inputs as I have never trained any model on my own. OpenAI's response was not helpful for this question :)"
267,machinelearning,open-ai,relevance,2020-02-18 00:19:40,"[D] The messy, secretive reality behind OpenAI’s bid to save the world",milaworld,False,0.93,363,f5immz,https://www.reddit.com/r/MachineLearning/comments/f5immz/d_the_messy_secretive_reality_behind_openais_bid/,143,1581985180.0,"A new [story](https://www.technologyreview.com/s/615181/ai-openai-moonshot-elon-musk-sam-altman-greg-brockman-messy-secretive-reality/) by journalist [Karen Hao](https://mobile.twitter.com/_KarenHao/status/1229519114638589953) who spent six months digging into OpenAI.

She started with a few simple questions: Who are they? What are their goals? How do they work? After nearly three dozen interviews, she found so much more.

The article is worth a read. I'm not going to post an excerpt here.

The most surprising thing is that Elon Musk himself, after that article got published, [criticized](https://www.twitter.com/elonmusk/status/1229544673590599681) OpenAI and tweeted that they ""should be more open"" 🔥

With regards to AI safety, Elon [said](https://www.twitter.com/elonmusk/status/1229546206948462597) ""I have no control & only very limited insight into OpenAI. Confidence in Dario for safety is not high.""

Here is the link to the article again: https://www.technologyreview.com/s/615181/ai-openai-moonshot-elon-musk-sam-altman-greg-brockman-messy-secretive-reality/"
268,machinelearning,open-ai,relevance,2023-08-15 04:40:49,[P] OpenAI Notebooks which are really helpful.,vishank97,False,0.93,159,15ridca,https://www.reddit.com/r/MachineLearning/comments/15ridca/p_openai_notebooks_which_are_really_helpful/,7,1692074449.0,"The OpenAI cookbook is one of the most underrated and underused developer resources available today. Here are 7 notebooks you should know about:

1. Improve LLM reliability:  
[https://github.com/openai/openai-cookbook/blob/main/techniques\_to\_improve\_reliability.md](https://github.com/openai/openai-cookbook/blob/main/techniques_to_improve_reliability.md)
2. Embedding long text inputs:  
[https://github.com/openai/openai-cookbook/blob/main/examples/Embedding\_long\_inputs.ipynb](https://github.com/openai/openai-cookbook/blob/main/examples/Embedding_long_inputs.ipynb)
3. Dynamic masks with DALLE:  
[https://github.com/openai/openai-cookbook/blob/main/examples/dalle/How\_to\_create\_dynamic\_masks\_with\_DALL-E\_and\_Segment\_Anything.ipynb](https://github.com/openai/openai-cookbook/blob/main/examples/dalle/How_to_create_dynamic_masks_with_DALL-E_and_Segment_Anything.ipynb)
4. Function calling to find places nearby:  
[https://github.com/openai/openai-cookbook/blob/main/examples/Function\_calling\_finding\_nearby\_places.ipynb](https://github.com/openai/openai-cookbook/blob/main/examples/Function_calling_finding_nearby_places.ipynb)
5. Visualize embeddings in 3D:  
[https://github.com/openai/openai-cookbook/blob/main/examples/Visualizing\_embeddings\_in\_3D.ipynb](https://github.com/openai/openai-cookbook/blob/main/examples/Visualizing_embeddings_in_3D.ipynb)
6. Pre and post-processing of Whisper transcripts:  
[https://github.com/openai/openai-cookbook/blob/main/examples/Whisper\_processing\_guide.ipynb](https://github.com/openai/openai-cookbook/blob/main/examples/Whisper_processing_guide.ipynb)
7. Search, Retrieval, and Chat:  
[https://github.com/openai/openai-cookbook/blob/main/examples/Question\_answering\_using\_a\_search\_API.ipynb](https://github.com/openai/openai-cookbook/blob/main/examples/Question_answering_using_a_search_API.ipynb)

Big thanks to the creators of these notebooks!"
269,machinelearning,open-ai,relevance,2023-05-24 10:43:01,[D] Diff between OpenAI official chatgpt and azure OpenAI playground chat,lppier2,False,0.6,1,13qhyek,https://www.reddit.com/r/MachineLearning/comments/13qhyek/d_diff_between_openai_official_chatgpt_and_azure/,5,1684924981.0,"I’m trying chatgpt with gpt3.5turbo in azure playground. Is it my imagination, or is the official OpenAI chatgpt much more “chatty” than the one in the playground?
What could be the differences in the settings , any intuition?"
270,machinelearning,open-ai,relevance,2023-02-09 07:58:42,[P] Get 2x Faster Transcriptions with OpenAI Whisper Large on Kernl,pommedeterresautee,False,0.96,225,10xp54e,https://www.reddit.com/r/MachineLearning/comments/10xp54e/p_get_2x_faster_transcriptions_with_openai/,34,1675929522.0,"We are happy to announce the support of OpenAI Whisper model (ASR task) on Kernl. 

We focused on high quality transcription in a latency sensitive scenario, meaning:

* *whisper-large-v2* weights
* *beam search 5 (as recommended in the related paper)*

We measured a 2.3x speedup on Nvidia A100 GPU (2.4x on 3090 RTX) compared to Hugging Face implementation using FP16 mixed precision on transcribing librispeech test set (over 2600 examples). For now, OpenAI implementation is [not yet PyTorch 2.0 compliant](https://github.com/openai/whisper/pull/115).

In the post below, we discuss what worked (CUDA Graph), our tricks (to significantly reduce memory footprint), and what did not pay off (Flash attention and some other custom Triton kernels).

* **Kernl repository**: [https://github.com/ELS-RD/kernl](https://github.com/ELS-RD/kernl)
* **Reproduction script**: [https://github.com/ELS-RD/kernl/blob/main/experimental/whisper/speedup.ipynb](https://github.com/ELS-RD/kernl/blob/main/experimental/whisper/speedup.ipynb)

# Unsung hero: CUDA graphs

CUDA graphs technology provides most of the speed up. Compared to vanilla PyTorch 2.0 (“reduce-overhead mode”), we provide a limited memory footprint when vanilla PyTorch 2.0 may raise OOM exception.

[memory footprint](https://preview.redd.it/jyfayud5d4ha1.png?width=1598&format=png&auto=webp&s=15356368ce60eb5e748d21239ac0ecc00bd403ac)

Experiments have been run on a 3090 RTX with 24 Gb DDR. A reminder that PyTorch 2.0 focuses on training, not inference, which may explain why it OOMs rapidly in this case.

At its beginning, many partitioners were surprised by PyTorch eager mode performances, when compared to TensorFlow 1.x compiled models: they were on par! Python brought its flexibility and ease of debugging without implying any significant performance cost.

This is mostly because GPUs are latency hiding hardware: when PyTorch launches an operation on GPU, it sends instructions from host (CPU) to a queue (the CUDA stream), which allows PyTorch to continue Python script execution without having to wait for CUDA kernel to finish its work. This strategy effectively hides most of the Python overhead, in particular when there are some computation costly operations like convolutions or matrix multiplications.

Each new generation of GPUs being much faster than its predecessor, this strategy could not last forever, according to one PyTorch maintainer, it is an “existential problem” ([dev podcast](https://pytorch-dev-podcast.simplecast.com/episodes/pytorch-20), around 8mn30).

In inference mode, especially in latency-sensitive scenarios where batch size tends to be low, there is often little computation to perform (regarding what modern GPUs can do), making it even harder to hide effectively Python overhead. It’s accentuated in the case of generative models like Whisper, because each decoder call focuses on generating a single token, and a part of the computation is cached for the next token.

This is a typical situation where CUDA graph is very helpful.

The main idea behind CUDA graph is that we can replace a series of instructions sent from host (CPU) to device (GPU) by one call referring to a graph of instruction stored in GPU. Check also this twitter [thread](https://twitter.com/cHHillee/status/1616906059368763392) for more explanations.

First it will observe the inference of a model for specific input shapes and then replay it without going through most of the Python code.

One constraint is that it will replay the exact same operations with the exact same arguments.

For instance, memory addresses used by kernels are captured and therefore need to be static. For input tensors, it means that for each inference, we need to allocate some GPU memory and copy them there before the capture and copy all the following input tensors at the very same place.

The second constraint is that dynamic shapes are not supported by CUDA graph because it captures everything. We could have our own machinery in front of the model, but PyTorch 2.0 offers the right tooling to manage that point out of the box.

Basically, dynamo offers a mechanism which checks if the model has already been captured for specific input shapes and some other states and capture it if not yet the case. You just have to provide a function which converts to CUDA graphs and you are done.

Out of the box, PyTorch 2.0 provides a “reduce-overhead” mode which applies CUDA graph to the model. Unfortunately, for now, it will raise an OOM with Whisper large or medium because it reserves some CUDA space for each input shape. Therefore, for a generative model it rapidly fulfills the GPU memory, in particular because of the K/V cache which can be huge.

We have worked around this constrain by building our own layer on top of the memory pool of PyTorch. 

Basically, a PyTorch tensor is made of 2 parts, a CUDA allocated memory represented by PyTorch as a “storage”, and a bunch of metadata associated with it. Among the metadata there is a CUDA memory address, the tensor shape plus its strides, its dtype and... a memory offset.

Our idea is to create a very large tensor and share its storage between several input tensors, using offset metadata. With this solution, we avoid specializing in input tensor shapes and share the reserved memory for different input shapes related to several CUDA graphs.

As shown in the table above, it significantly reduces the memory overhead.

# What about custom (Triton) kernels for attention?

**TL; DR: we tried, they work, we got up to 2 times faster than eager PyTorch for cross attention and they bring close to nothing in e2e latency mostly because the improvement is not big enough to matter 🙁**

Below, we follow the convention of naming Q, K and V, the 3 tensors used in the attention of transformer models.

Whisper is based on a classic transformer architecture, with an encoder and a decoder.

Two characteristics of this model are of interest:

* The shape of Q tensor used in cross-attention is always \[batch, #heads, 1, 1500\].
* Model has been trained on 30-second audio files and their associated transcript. Because audio files are short, the sequence to generate is usually short, fewer than 50 tokens most of the time.

Because of these characteristics, optimizing attention has a low reward. In particular, the now common trick “replace attention with flash attention” is counterproductive:

* self-attention: sequences are very short, so quadratic complexity is less of an issue;
* cross-attention: using flash-attention leads to a 2 times slower inference on this part of the model.

We have tried to work on the second point and thought we could make cross attention faster.

Usual attention implementation (self and cross) relies on a series of operations: matmul (Q x K\^t) -> rescale -> SoftMax -> matmul (SoftMax output x V). Intermediate output tensors have a shape which usually scales quadratically with input sequence length. They will be saved and reloaded from DDR, and memory bandwidth is a very scarce resource in GPUs.

To optimize speed, flash attention fuses operations, so basically first matmul will work on a small part of Q and K, and directly apply SoftMax to it without saving intermediate results to DDR. Same for second matmul. Because we don't go and back through GPU main memory, flash attention usually runs much faster than naïve implementation of attention.

The parallelization of the jobs is done on different axes: [batch and attention head for the original flash attention](https://github.com/HazyResearch/flash-attention/issues/40), and Triton author added a third one, tokens, aka third dimension of Q (this important trick is now also part of flash attention CUDA implementation).

In the Whisper latency sensitive case, this doesn’t work well. The size of batches is low and sequence length (third dimension of Q tensor) is... 1! So, even if each job is done very efficiently, our GPU occupancy is low, and basically most of its streaming processors are idle. At the end of the day, the FA kernel is up to 2 times slower than eager PyTorch implementation (depending on batch size and model size).

# Try 1: the very simple kernel

We noted that there is little computation to do and that we were memory bandwidth bounded. It means that most of the time we wait for data to be transferred from main memory to shared memory. 

We leveraged that fact in a very simple kernel with 2 optimizations:

* after having finishing the rescale of the QK\^t matmul, we perform the SoftMax computation in parallel of loading V tensor for the final matmul. The SoftMax computation finishes before the end of the V loading, so basically it costs us nothing;
* to achieve best performances, we also changed the memory layout of V tensor in a way where we get a coalesced access, so we lowered the pressure on the memory bandwidth and increased instruction throughput (coalesced access let you load up to 128 bytes in a single instruction so you need less of them, which lets you perform more other things)

Altogether this cross attention was up to 2x faster compared to eager. It appeared to bring between 5 to 20% in end-to-end benchmark depending on model size and batch size. Cool but far from being a game changer, it requires a modification specific to Whisper model (memory layout of V) which is not in the spirit of the Kernl library. We decided to search for another way of doing things (we kept the code in the library for possible future use case).

# Try 2: Skinny Flash Attention

Our second try is based on the very same trick as Flash Attention (parallel SoftMax) but is designed for tall and skinny tensors, which is inspired by split-k strategy in GEMM (a close cousin of the matmul). The main idea is to add a new parallelization axis over the 3rd dimension of K tensor. The next steps are in the same spirit as flash attention with a difference that we need a new reduction operation between the different jobs' outputs. It provides 5-10% speedup compared to eager implementation on this setup at kernel level. We kept that kernel to ease the next feature we are working on (quantization) but the effect in end-to-end latency is inferior to 5% (still it exists 😅).

Some thoughts about PyTorch 2.0, Triton and making things much faster

Playing with PyTorch ~~1.14~~ 2.0 since this summer made us quite convinced that the major update to be released very soon will be a game changer for the ML field.

For inference (but also for training), the parallel with PyTorch vs TensorFlow is obvious to our eyes. 

The traditional way to deploy a model is to export it to Onnx, then to TensorRT plan format. Each step requires its own tooling, its own mental model, and may raise some issues. The most annoying thing is that you need Microsoft or Nvidia support to get the best performances, and sometimes model support takes time. For instance, T5, a model released in 2019, is not yet correctly supported on TensorRT, in particular K/V cache is missing ([soon it will be according to TensorRT maintainers](https://github.com/NVIDIA/TensorRT/issues/1845), but I wrote the very same thing almost 1 year ago and then 4 months ago so… I don’t know).

PyTorch 2.0 makes the graph capture step easy, it has been designed to work even if not everything is PyTorch compliant. With its Python first philosophy, it provides flexibility and debuggability. 

Several years ago, some said that by design PyTorch can’t be as performant than Tensorflow because of its eager execution model, compilation has to be faster. The same thing could be said for OnnxRuntime or TensorRT, they are C++ stuff, they have less overhead, etc. But at the end of the day, it's always the “ease of use” which is decisive. Ease of use because of Python, but also because of the transparency in the process, Triton makes understanding and debugging kernels much easier than closed source TensorRT Myelin engine calling closed source cuBlas library.

And of course, like TensorFlow, there will be many use cases where dedicated tools will be best choices, starting with situations where you can’t deploy a Python interpreter.

The second lesson, Triton is easier to start with than CUDA, but you probably can’t write or debug highly performant code without being able to, at least, read and debug PTX/SASS instructions. We realized that when we had some performance issues... The good news is that PTX is understandable, and you will probably spot unexpected generated code with some effort if there is any. Moreover, CUDA probably requires the same care when you really focus on performances.

We had plenty of issues with Triton, for example, cosmetics change in code may raise segfault. At some point you finish by having an intuition of what kinds of patterns to follow to make things work, in particular when there are for loops and dot operations. A new version of Triton has recently been released after a full rewrite of its backend, our little tests showed some improvement on stability but we have not yet fully switched.

As in my previous post, I highly recommend that readers start playing with Triton library, I rewrite it here: it’s fun (at least when it doesn’t segfault) and helps you to make sense of a large part of what is happening in ML engineering. I am quite convinced many flash attention like kernels are still to be written. 

# Caveat

Two important things to note about the project described here:

* CUDA graphs require us to capture a graph per input tensor shape, there is a non-negligible warmup time. We measure around 10mn on 2 different machines / GPUs (down from 50mn in our previous Kernl version). One user reported with the new version a bit more than 20mn of warmup time. We are aware of obvious ways to decrease it significantly.
* The context here is latency sensitive optimization. In throughput sensitive one, just increasing batch size will bring you most of the speedup. Otherwise, more aggressive optimizations like quantization are required (not yet released on Kernl)."
271,machinelearning,open-ai,relevance,2021-01-18 09:08:06,[P] The Big Sleep: Text-to-image generation using BigGAN and OpenAI's CLIP via a Google Colab notebook from Twitter user Adverb,Wiskkey,False,0.99,617,kzr4mg,https://www.reddit.com/r/MachineLearning/comments/kzr4mg/p_the_big_sleep_texttoimage_generation_using/,259,1610960886.0,"From [https://twitter.com/advadnoun/status/1351038053033406468](https://twitter.com/advadnoun/status/1351038053033406468):

>The Big Sleep  
>  
>Here's the notebook for generating images by using CLIP to guide BigGAN.  
>  
>It's very much unstable and a prototype, but it's also a fair place to start. I'll likely update it as time goes on.  
>  
>[colab.research.google.com/drive/1NCceX2mbiKOSlAd\_o7IU7nA9UskKN5WR?usp=sharing](https://colab.research.google.com/drive/1NCceX2mbiKOSlAd_o7IU7nA9UskKN5WR?usp=sharing)

I am not the developer of The Big Sleep. [This](https://twitter.com/advadnoun/) is the developer's Twitter account; [this](https://www.reddit.com/user/advadnoun) is the developer's Reddit account.

**Steps to follow to generate the first image in a given Google Colab session**:

1. Optionally, if this is your first time using Google Colab, view this [Colab introduction](https://colab.research.google.com/notebooks/intro.ipynb) and/or this [Colab FAQ](https://research.google.com/colaboratory/faq.html).
2. Click [this link](https://colab.research.google.com/drive/1NCceX2mbiKOSlAd_o7IU7nA9UskKN5WR?usp=sharing).
3. Sign into your Google account if you're not already signed in. Click the ""S"" button in the upper right to do this. Note: Being signed into a Google account has privacy ramifications, such as your Google search history being recorded in your Google account.
4. In the Table of Contents, click ""Parameters"".
5. Find the line that reads ""tx = clip.tokenize('''a cityscape in the style of Van Gogh''')"" and change the text inside of the single quote marks to your desired text; example: ""tx = clip.tokenize('''a photo of New York City''')"". The developer recommends that you keep the three single quote marks on both ends of your desired text so that mult-line text can be used  An alternative is to remove two of the single quotes on each end of your desired text; example: ""tx = clip.tokenize('a photo of New York City')"".
6. In the Table of Contents, click ""Restart the kernel..."".
7. Position the pointer over the first cell in the notebook, which starts with text ""import subprocess"". Click the play button (the triangle) to run the cell. Wait until the cell completes execution.
8. Click menu item ""Runtime->Restart and run all"".
9. In the Table of Contents, click ""Diagnostics"". The output appears near the end of the Train cell that immediately precedes the Diagnostics cell, so scroll up a bit. Every few minutes (or perhaps 10 minutes if Google assigned you relatively slow hardware for this session), a new image will appear in the Train cell that is a refinement of the previous image. This process can go on for as long as you want until Google ends your Google Colab session, which is a total of [up to 12 hours](https://research.google.com/colaboratory/faq.html) for the free version of Google Colab.

**Steps to follow if you want to start a different run using the same Google Colab session:**

1. Click menu item ""Runtime->Interrupt execution"".
2. Save any images that you want to keep by right-clicking on them and using the appropriate context menu command.
3. Optionally, change the desired text. Different runs using the same desired text almost always results in different outputs.
4. Click menu item ""Runtime->Restart and run all"".

**Steps to follow when you're done with your Google Colab session**:

1. Click menu item ""Runtime->Manage sessions"". Click ""Terminate"" to end the session.
2. Optionally, log out of your Google account due to the privacy ramifications of being logged into a Google account.

The first output image in the Train cell (using the notebook's default of seeing every 100th image generated) usually is a very poor match to the desired text, but the second output image often is a decent match to the desired text. To change the default of seeing every 100th image generated, change the number 100 in line ""if itt % 100 == 0:"" in the Train cell to the desired number. **For free-tier Google Colab users, I recommend changing 100 to a small integer such as 5.**

Tips for the text descriptions that you supply:

1. In Section 3.1.4 of OpenAI's [CLIP paper](https://cdn.openai.com/papers/Learning_Transferable_Visual_Models_From_Natural_Language_Supervision.pdf) (pdf), the authors recommend using a text description of the form ""A photo of a {label}."" or ""A photo of a {label}, a type of {type}."" for images that are photographs.
2. A Reddit user gives [these tips](https://www.reddit.com/r/MediaSynthesis/comments/l2hmqn/this_aint_it_chief/gk8g8e9/).
3. The Big Sleep should generate [these 1,000 types of things](https://www.reddit.com/r/MediaSynthesis/comments/l7hbix/tip_for_users_of_the_big_sleep_it_should_on/) better on average than other types of things.

[Here](https://www.digitaltrends.com/news/big-sleep-ai-image-generator/) is an article containing a high-level description of how The Big Sleep works. The Big Sleep uses a modified version of [BigGAN](https://aiweirdness.com/post/182322518157/welcome-to-latent-space) as its image generator component. The Big Sleep uses the ViT-B/32 [CLIP](https://openai.com/blog/clip/) model to rate how well a given image matches your desired text. The best CLIP model according to the CLIP paper authors is the (as of this writing) unreleased ViT-L/14-336px model; see Table 10 on page 40 of the [CLIP paper (pdf)](https://cdn.openai.com/papers/Learning_Transferable_Visual_Models_From_Natural_Language_Supervision.pdf) for a comparison.

There are [many other sites/programs/projects](https://www.reddit.com/r/MachineLearning/comments/ldc6oc/p_list_of_sitesprogramsprojects_that_use_openais/) that use CLIP to steer image/video creation to match a text description.

Some relevant subreddits:

1. [r/bigsleep](https://www.reddit.com/r/bigsleep/) (subreddit for images/videos generated from text-to-image machine learning algorithms).
2. [r/deepdream](https://www.reddit.com/r/deepdream/) (subreddit for images/videos generated from machine learning algorithms).
3. [r/mediasynthesis](https://www.reddit.com/r/mediasynthesis/) (subreddit for media generation/manipulation techniques that use artificial intelligence; this subreddit shouldn't be used to post images/videos unless new techniques are demonstrated, or the images/videos are of high quality relative to other posts).

Example using text 'a black cat sleeping on top of a red clock':

https://preview.redd.it/7xq58v7022c61.png?width=512&format=png&auto=webp&s=a229ae9add555cd1caba31c42b60d907ffe67773

Example using text 'the word ''hot'' covered in ice':

https://preview.redd.it/6kxdp8u3k2c61.png?width=512&format=png&auto=webp&s=5bd078b0111575f5d88a1dc53b0aeb933f3b0da6

Example using text 'a monkey holding a green lightsaber':

https://preview.redd.it/rdsybsoaz2c61.png?width=512&format=png&auto=webp&s=2769d4c6c883c1c35ae0b1c629bebe9bc1d41393

Example using text 'The White House in Washington D.C. at night with green and red spotlights shining on it':

https://preview.redd.it/w4mg90xsf5c61.png?width=512&format=png&auto=webp&s=5f18318de2f77bcd8a86e71e87048fadd30383d1

Example using text '''A photo of the Golden Gate Bridge at night, illuminated by spotlights in a tribute to Prince''':

https://preview.redd.it/cn4ecuafhic61.png?width=512&format=png&auto=webp&s=397c838fdc49f13c5f17110b92c78b95bf0dcac0

Example using text '''a Rembrandt-style painting titled ""Robert Plant decides whether to take the stairway to heaven or the ladder to heaven""''':

https://preview.redd.it/h7rb3y6j5jc61.png?width=512&format=png&auto=webp&s=537bfe8210af185647b00e7585c948aa2c4e0ffb

Example using text '''A photo of the Empire State Building being shot at with the laser cannons of a TIE fighter.''':

https://preview.redd.it/cwi7i639c5d61.png?width=512&format=png&auto=webp&s=0510c8b93adb40eee4d3f41607f1c215d41e55ff

Example using text '''A cartoon of a new mascot for the Reddit subreddit DeepDream that has a mouse-like face and wears a cape''':

https://preview.redd.it/wtxbduevcbd61.png?width=512&format=png&auto=webp&s=c5d266258922bc62f25c80a08cd9cabc07d9cb1c

Example using text '''Bugs Bunny meets the Eye of Sauron, drawn in the Looney Tunes cartoon style''':

https://preview.redd.it/gmljaeekuid61.png?width=512&format=png&auto=webp&s=9ea578de165e12afc3a62bf6886bc1ae9dc19bec

Example using text '''Photo of a blue and red neon-colored frog at night.''':

https://preview.redd.it/nzlypte6wzd61.png?width=512&format=png&auto=webp&s=7e10b06f22cfc57c64b6d05738c7486b895083df

Example using text '''Hell begins to freeze over''':

https://preview.redd.it/vn99we9ngmf61.png?width=512&format=png&auto=webp&s=2408efd607f0ab40a08db6ee67448791aa813993

Example using text '''A scene with vibrant colors''':

https://preview.redd.it/4z133mvrgmf61.png?width=512&format=png&auto=webp&s=b78e7a8e3f736769655056093a9904ff09a355a1

Example using text '''The Great Pyramids were turned into prisms by a wizard''':

https://preview.redd.it/zxt6op7vgmf61.png?width=512&format=png&auto=webp&s=53e578cfde14b28afe27957e95e610b89afadd44"
272,machinelearning,open-ai,relevance,2020-09-22 17:40:14,[N] Microsoft teams up with OpenAI to exclusively license GPT-3 language model,kit1980,False,0.96,320,ixs88q,https://www.reddit.com/r/MachineLearning/comments/ixs88q/n_microsoft_teams_up_with_openai_to_exclusively/,117,1600796414.0,"""""""OpenAI will continue to offer GPT-3 and other powerful models via its own Azure-hosted API, launched in June. While we’ll be hard at work utilizing the capabilities of GPT-3 in our own products, services and experiences to benefit our customers, we’ll also continue to work with OpenAI to keep looking forward: leveraging and democratizing the power of their cutting-edge AI research as they continue on their mission to build safe artificial general intelligence.""""""

https://blogs.microsoft.com/blog/2020/09/22/microsoft-teams-up-with-openai-to-exclusively-license-gpt-3-language-model/"
273,machinelearning,open-ai,relevance,2023-05-06 23:08:09,[P] OpenAI vs Open Source LLM Comparison for Document Q&A,georgesung,False,0.95,94,13a5baq,https://www.reddit.com/r/MachineLearning/comments/13a5baq/p_openai_vs_open_source_llm_comparison_for/,16,1683414489.0,"Ran a fun comparison between OpenAI vs open source (Apache 2.0) LLMs for Wikipedia document Q&A -- open source is looking good (and getting better).

TLDR:

For simple Wikipedia article Q&A, I compared OpenAI GPT 3.5, FastChat-T5, FLAN-T5-XXL, and FLAN-T5-XL. GPT 3.5 provided the best answers, but FastChat-T5 was very close in performance (with a basic guardrail). The T5 models I tested are all licensed under Apache 2.0, so they are commercially viable.

For the embedding model, I compared OpenAI text-embedding-ada-002 and the open source INSTRUCTOR-XL models. The INSTRUCTOR-XL model performed better, which is encouraging since INSTRUCTOR-XL is also licensed under Apache 2.0.

Full blog post:

[https://georgesung.github.io/ai/llm-qa-eval-wikipedia/](https://georgesung.github.io/ai/llm-qa-eval-wikipedia/)"
274,machinelearning,open-ai,relevance,2024-02-10 21:02:10,[D] How to speed up OpenAI API response time ?,AB3NZ,False,0.2,0,1anqbt9,https://www.reddit.com/r/MachineLearning/comments/1anqbt9/d_how_to_speed_up_openai_api_response_time/,8,1707598930.0,"Hello, I'm using the OpenAI API to create summaries based on provided JSON data. However, I've noticed that the response generation process takes approximately 25 seconds, which may pose an inconvenience to users of my application. I'm reaching out to inquire if there are any strategies or optimizations available to help improve the response time and enhance the overall user experience."
275,machinelearning,open-ai,relevance,2019-04-25 17:07:04,[N] MuseNet by OpenAI,wavelander,False,0.96,409,bhb4ds,https://openai.com/blog/musenet/,48,1556212024.0,
276,machinelearning,open-ai,relevance,2019-12-13 19:02:10,[R] OpenAI releases paper on OpenAI Five: Dota 2 with Large Scale Deep Reinforcement Learning,minimaxir,False,0.97,210,ea880b,https://www.reddit.com/r/MachineLearning/comments/ea880b/r_openai_releases_paper_on_openai_five_dota_2/,46,1576263730.0,"[https://cdn.openai.com/dota-2.pdf](https://cdn.openai.com/dota-2.pdf)

It's 66 pages long and very detailed."
277,machinelearning,open-ai,relevance,2023-12-18 18:28:40,[D] OpenAI Triton Course/Tutorial Recommendations,djm07231,False,1.0,6,18lfq0a,https://www.reddit.com/r/MachineLearning/comments/18lfq0a/d_openai_triton_coursetutorial_recommendations/,0,1702924120.0,"Hello, I am a first-year graduate student with a keen interest in GPU programming and AI, I recently completed an introductory course in CUDA, similar to Illinois ECE 498AL. Looking to broaden my expertise, I'm drawn to OpenAI's Triton for its potential in the field. However, I find the current official tutorials lacking in depth, particularly in explaining the programming model and fundamental concepts.

Does anyone have recommendations for comprehensive Triton learning resources? I'm interested in tutorials that integrate with PyTorch, as well as foundational guides that can bridge the gap from CUDA to Triton. GPT-4 hasn't been much help on this topic, so I'm hoping that there would good insights here.

I would appreciate any kind of suggestions, videos, blogs, or even courses that have helped you grasp Triton better. Sharing your journey and how Triton has impacted your projects would also be incredibly valuable to me and others exploring this tool.

Official Tutorial: [https://triton-lang.org/main/getting-started/tutorials/index.html](https://triton-lang.org/main/getting-started/tutorials/index.html)"
278,machinelearning,open-ai,relevance,2023-02-01 21:59:38,[N] OpenAI starts selling subscriptions to its ChatGPT bot,bikeskata,False,0.89,52,10r7k0h,https://www.reddit.com/r/MachineLearning/comments/10r7k0h/n_openai_starts_selling_subscriptions_to_its/,50,1675288778.0,"https://www.axios.com/2023/02/01/chatgpt-subscriptions-chatbot-openai

Not fully paywalled, but there's a tiering system."
279,machinelearning,open-ai,relevance,2022-10-10 19:38:01,[P] Pure C/C++ port of OpenAI's Whisper,ggerganov,False,0.99,191,y0nvqu,https://www.reddit.com/r/MachineLearning/comments/y0nvqu/p_pure_cc_port_of_openais_whisper/,34,1665430681.0,"Recently, I am having fun with re-implementing the inference of various transformer models (GPT-2, GPT-J) in pure C/C++ in order to efficiently run them on a CPU.

The latest one that I ported is [OpenAI Whisper](https://github.com/openai/whisper) for automatic speech recognition:

[https://github.com/ggerganov/whisper.cpp](https://github.com/ggerganov/whisper.cpp)

For smaller models I am able to achieve very nice performance.  
For example, here is a demonstration of real-time transcription of audio from the microphone:

[whisper.cpp running on a MacBook Pro M1 \(CPU only\)](https://reddit.com/link/y0nvqu/video/1i955h6e61t91/player)

Hope you find this project interesting and let me know if you have any questions about the implementation."
280,machinelearning,open-ai,relevance,2023-04-08 06:23:40,[D] Alternatives to OpenAI for summarization and instruction following?,du_keule,False,0.9,56,12fdnad,https://www.reddit.com/r/MachineLearning/comments/12fdnad/d_alternatives_to_openai_for_summarization_and/,34,1680935020.0,"Hey y’all. As privacy concerns are mounting about OpenAI, and as someone who has built a product on top of their platform, I’m wondering what kind of alternatives exist that could accomplish the same results as GPT 3.5 and be able to be used commercially? It looks like Alpaca would do well, but it’s not able to be used commercially. 

Basically my product summarizes Slack threads and answers questions based on a given prompt. Some users have expressed concern about sending their company’s data to OpenAI, and honestly it would be an edge to have in the market if I could run an LLM  in my VPC. Thanks!"
281,machinelearning,open-ai,relevance,2023-11-06 18:22:39,[N] OpenAI Whisper new model Large V3 just released and amazing,CeFurkan,False,0.69,9,17p99mj,https://www.reddit.com/r/MachineLearning/comments/17p99mj/n_openai_whisper_new_model_large_v3_just_released/,22,1699294959.0,"Whisper made huge impact on the open source AI world

I am using everyday to transcribe my videos with that

I was waiting new Large model

Whisper is much better than paid alternatives and it is 100% free

Here my full tutorial about it

[How to do Free Speech-to-Text Transcription Better Than Google Premium API with OpenAI Whisper Model](https://youtu.be/msj3wuYf3d8?si=c5M6mFzQIj6fJRou)

Repo link : [https://github.com/openai/whisper](https://github.com/openai/whisper)

&#x200B;

https://preview.redd.it/k9kssc6csryb1.png?width=1920&format=png&auto=webp&s=caeaf4921c8b4f9337c4842c5ef897cf456adc20"
282,machinelearning,open-ai,relevance,2022-12-11 22:16:43,"[D] - Has Open AI said what ChatGPT's architecture is? What technique is it using to ""remember"" previous prompts?",029187,False,0.95,243,zjbsie,https://www.reddit.com/r/MachineLearning/comments/zjbsie/d_has_open_ai_said_what_chatgpts_architecture_is/,88,1670797003.0,"Has Open AI said what ChatGPT's architecture is? What technique is it using to ""remember"" previous prompts? Have they come up with some way to add recurrence to the transformer or is it just using a feedforward sliding window approach?"
283,machinelearning,open-ai,relevance,2023-05-17 00:35:25,[D] Advocating for Open Models in AI Oversight: Stability AI's Letter to the United States Senate,hardmaru,False,0.96,392,13jm95w,https://www.reddit.com/r/MachineLearning/comments/13jm95w/d_advocating_for_open_models_in_ai_oversight/,44,1684283725.0,"Source: https://stability.ai/blog/stability-ai-letter-us-senate-ai-oversight

*Today, the United States Senate held a hearing to consider the future of AI oversight. Ahead of the hearing, Stability AI was pleased to share a detailed paper emphasizing the importance of open models for a transparent, competitive, and resilient digital economy.*

*“These technologies will be the backbone of our digital economy, and it is essential that the public can scrutinize their development. Open models and open datasets will help to improve safety through transparency, foster competition, and ensure the United States retains strategic leadership in critical AI capabilities. Grassroots innovation is America’s greatest asset, and open models will help to put these tools in the hands of workers and firms across the economy.”*

*You can read the full paper [here](https://static1.squarespace.com/static/6213c340453c3f502425776e/t/6463b486b97b333044ea2564/1684255881952/Statement+from+Stability+AI+to+the+Senate+Judiciary+Subcommittee+on+Privacy%2C+Technology%2C+and+the+Law.pdf)*

(Note:I'm currently an employee of Stability AI, but even if I wasn't I would have posted it as a news or discussion category item anyways as I think it is worthy of discussion on this subreddit.)"
284,machinelearning,open-ai,relevance,2023-07-12 19:02:12,[D] What is the most efficient version of OpenAI Whisper?,paulo_zip,False,0.86,15,14xxg6i,https://www.reddit.com/r/MachineLearning/comments/14xxg6i/d_what_is_the_most_efficient_version_of_openai/,32,1689188532.0,"Hi everyone,
I know that there are some different versions of Whisper available in the open-source community (Whisper X, Whisper JAX, etc.), but I'm keeping updated with the best version of the model. Specifically, I'm trying to understand the best Whisper implementation for a task to transcribe a big batch of videos (~10k videos, ~30min long).

I'd like to know your thoughts on this."
285,machinelearning,open-ai,relevance,2023-05-18 11:11:02,[D] Is Anyone Else Fine with OpenAI?,307thML,False,0.42,0,13kvw2b,https://www.reddit.com/r/MachineLearning/comments/13kvw2b/d_is_anyone_else_fine_with_openai/,26,1684408262.0,"The other thread says they despise OpenAI because the model that cost over $100,000,000 to train should be given away for free. But as something of a math expert, I ran the numbers and it turns out that you can't recoup $100M by charging $0 for your product.

On a more serious note, I really was amazed when I started learning deep learning by just how much great research was available freely online, and by how much of it was done by corporations like Google, NVIDIA, Meta, and so on. It was like a dream come true for someone like me who was learning on their own instead of at a university. It seems like that era is coming to an end, as heralded by OpenAI not disclosing even the parameter count of GPT-4, so I get the sadness and frustration. But I don't think companies giving away all their research was a sustainable situation; as AI got more competitive and product-oriented this was always going to happen. To me it feels like an ice cream store that gave away free ice cream every day eventually stopped doing it due to profit concerns; it's too bad but it also feels like ""well yeah, that couldn't go on forever"".

Also, unlike many people here, I'm sympathetic to the AI doomers, so I think slowing down a bit as we get closer to true AI is a good idea. If you disagree with that, well fair enough, but I think it's more productive if we just agreed to disagree and debated the issue every once in a while rather than despise each other over it."
286,machinelearning,open-ai,relevance,2023-11-16 00:49:29,[D] OpenAI Assistants - Assistant Swarms,Text-Agitated,False,0.5,0,17w9akj,https://www.reddit.com/r/MachineLearning/comments/17w9akj/d_openai_assistants_assistant_swarms/,2,1700095769.0,"Is it a better idea to partition a task into multiple assistants that can engage in a conversation?

Thanks!"
287,machinelearning,open-ai,relevance,2022-11-03 23:12:45,"[D] DALL·E to be made available as API, OpenAI to give users full ownership rights to generated images",TiredOldCrow,False,0.98,420,yli0r7,https://www.reddit.com/r/MachineLearning/comments/yli0r7/d_dalle_to_be_made_available_as_api_openai_to/,55,1667517165.0,"Email announcement from OpenAI below:


> DALL·E is now available as an API


> You can now integrate state of the art image generation capabilities directly into your apps and products through our new DALL·E API.


> You own the generations you create with DALL·E.


> We’ve simplified our [Terms of Use](https://openai.com/api/policies/terms/) and you now have full ownership rights to the images you create with DALL·E — in addition to the usage rights you’ve already had to use and monetize your creations however you’d like. This update is possible due to improvements to our safety systems which minimize the ability to generate content that violates our content policy.


> Sort and showcase with collections.


> You can now organize your DALL·E creations in multiple collections. Share them publicly or keep them private. Check out our [sea otter collection](https://labs.openai.com/sc/w3Q8nqVN69qkEA3ePSmrGb5t)!


> We’re constantly amazed by the innovative ways you use DALL·E and love seeing your creations out in the world. Artists who would like their work to be shared on our Instagram can request to be featured using Instagram’s collab tool. DM us there to show off how you’re using the API!  

> \- The OpenAI Team"
288,machinelearning,open-ai,relevance,2023-04-28 17:30:18,"[N] LAION publishes an open letter to ""protect open-source AI in Europe"" with Schmidhuber and Hochreiter as signatories",Philpax,False,0.98,395,1323w68,https://www.reddit.com/r/MachineLearning/comments/1323w68/n_laion_publishes_an_open_letter_to_protect/,61,1682703018.0,https://laion.ai/notes/letter-to-the-eu-parliament/
289,machinelearning,open-ai,relevance,2023-04-18 03:30:03,[Discussion] OpenAI Embeddings API alternative?,HueX1,False,0.83,18,12q8rp1,https://www.reddit.com/r/MachineLearning/comments/12q8rp1/discussion_openai_embeddings_api_alternative/,15,1681788603.0,"Do you know an API which hosts an OpenAI embeddings alternative? If have the criteria that the embedding size needs to be max. 1024.

I know there are interesting models like [e5-large](https://huggingface.co/intfloat/e5-large) and Instructor-xl, but I specifically need an API as I don't want to set up my own server.The Huggingface Hosted Inference API is too expensive, as I need to pay for it even if I don't use it, by just keeping it running."
290,machinelearning,open-ai,relevance,2023-03-20 06:00:51,[News] Prompt engineering blog from OpenAI applied AI head,LouisAckerman,False,0.92,88,11waamh,https://lilianweng.github.io/posts/2023-03-15-prompt-engineering/,6,1679292051.0,
291,machinelearning,open-ai,relevance,2024-02-04 19:16:54,OpenAI gym - Neural network outputs stay the same [P],DocMenios,False,1.0,3,1aivukw,https://www.reddit.com/r/MachineLearning/comments/1aivukw/openai_gym_neural_network_outputs_stay_the_same_p/,2,1707074214.0,"Hello everyone. I am working on a project where I evolve the weights of a Neural Network with evolutionary strategies to make the bipedal walker of Gym walk.

But I keep running into this specific issue. After some frames of the simulation, the output of the NN stays the same (small deviations of 0.00001 which make no difference) which in essence, makes the agent freeze and make no movements.

I don't really know why this is happening since the inputs seem different and it cannot be a training issue since there is no training. I set the weights manually and then just test their performance.

I am using Tahn activation function so could it be a vanishing gradient problem?

I also suspected that it might be my NN architecture being too simple since for the scope of the project I needed a simple NN (24 in, 20 hidden, 4 out), but adding more layers/neurons does not change anything.

Note: I am using the newer Gymnasium, not Gym, I'm just referring to it as gym since its simpler.

Any help is welcome, thank you in advance!"
292,machinelearning,open-ai,relevance,2023-11-03 09:21:50,[D] OpenAI's agents and their plans for 2024,blabboy,False,0.19,0,17mr1rk,https://www.reddit.com/r/MachineLearning/comments/17mr1rk/d_openais_agents_and_their_plans_for_2024/,11,1699003310.0,"https://twitter.com/immutable404/status/1719952110492504206

Text pasted here:

@OpenAI
 will release ""agents"" that will establish a high level functioning version of AutoGPT/BabyAGI. 

Agents can be funded, pre-paid card style, for completing online purchases. 

Think 'digital swiss army knife' for business tasks/ product development/ coding/ scheduling/ ordering lunch/ paying bills/ etc. These agents/synths will also accept customer payments while acting as your sales chat bot/synth i.e. HeyGen style, if you sell products online. 

OpenAI will provide everyone with their personalized digital agent, at $30-$150/month. Similar to wireless plans with a limit on talk/text/data, there will be a range of features and data limits on your agent/synth.

You will be able to skin your agent and provide it with a set personality. You can customize your agent with limitations. This will be the craze in 2024. 

These will be parallel to the invention of the cell phone and will add a monthly bill to each employee. You won't be able to function without your agent/synth in business by the end of 2024.

OpenAI will use this influx of capital to expand it's empire and will look to pay back Microsoft to create more separation between the two entities.  You'll hear rumblings of a public divorce happening by the end of 2024."
293,machinelearning,open-ai,relevance,2023-04-06 13:35:43,[D] Working with Various OpenAI Models - My Thoughts and Experiences,bart_so,False,0.86,188,12dkla0,https://www.reddit.com/r/MachineLearning/comments/12dkla0/d_working_with_various_openai_models_my_thoughts/,20,1680788143.0,"I'd like to share some of my insights from working with OpenAI models on my project. I'm not exactly a tech person, so some of these observations might be obvious to some of you, but I think they're worth sharing for those with less experience or who aren't directly in the field.

**Intro:**

In early February, my friends and I started a side project where we aimed to build an AI portal called DoMoreAI. For the first two months, we focused on creating an AI tools catalog. Our experiment is based on the idea that in the future, companies will be ""Managed by AI, and Driven by Humans."" So, our goal was to leave as much as possible to AI and automation, with all the consequences that come with it. As mentioned before, I'm not a tech guy, but I've been playing with OpenAI models for the past few years, so I had some experience when starting this project.

**Tasks We Assigned to AI:**

Based on an AI tool's front page, we had the AI write a one-sentence summary of an AI project + write a more in-depth review of the project, categorize the project into different categories (WHAT category, like blog; TASK category, like writing; FOR category, like content creator), decide if the project offers iOS app, Android app, browser extension, API, find social media links, process information about prices and pricing policy, and more.

**Interesting Findings:**

1. When working on a more complex prompt, particularly one with several tasks, you have to be patient when crafting it. You might eventually find the right wording to achieve the desired results, but it takes time and lots of trial and error. You might even be surprised by what works and what doesn't. 
2. If cost isn't an issue, you can always break up one complex prompt into several smaller prompts. However, the more requests you send, the higher the chance of encountering errors like the 429 error, which may require setting up more sophisticated error handlers for the whole process. 
3. You need error handlers because, without them, the automation process will suffer. 
4. With more complex prompts, there are no prompts that always yield the expected results, so you have to plan for what to do if the results aren't satisfactory and how to determine if the result meets your expectations or not. 
5. GPT-3.0 struggled with outputting JSON strings as requested, but GPT-3.5 is much better at this task. I'd say the number of errors from improperly formatting the response in JSON is 3-4 times lower for GPT-3.5. 
6. AI models have trouble distinguishing words singular forms from plural forms. 
7. Just because you can use AI for a given task doesn't mean you should. Often, standard techniques like using regex can yield better results when extracting something from text than relying solely on AI. A hybrid solution often provides the best results. 
8. We're using ADA vector embeddings and Pinecone for semantic search in our catalog, and I was really surprised to find that this kind of semantic search works in any language. Even if all the content on our page is in English, you can search in another language and still get decent results.

**The Best Mishaps:**

* As you may know, there's a token limit for requests, so we have to ensure that we don't send too long a part of the front page to the model. Sometimes, this led to funny situations. If the HTML of the page consists mainly of styles and the model is fed only with styles, then when you ask the AI to write a review of the project, it writes about how beautiful, mobile-friendly, etc., the project is. 
* For one project, instead of writing the one-sentence summary, the model's output only included the prompt we were using to generate the summary (needless to say, it was automatically published on our website ;))

&#x200B;

I hope this post will be useful. We are currently running a campaign on Product Hunt: [https://www.producthunt.com/posts/domore-ai](https://www.producthunt.com/posts/domore-ai)

So, if you have any feedback for us or think what we're doing is cool, don't hesitate to support us :)"
294,machinelearning,open-ai,relevance,2023-11-15 21:57:33,[D] Multiple documents reveal significant limitations of OpenAI's Assistants API for RAG,ian4321,False,0.93,55,17w50tz,https://www.reddit.com/r/MachineLearning/comments/17w50tz/d_multiple_documents_reveal_significant/,17,1700085453.0,"The OpenAI RAG system struggled with multiple documents, showing inconsistent performance with our evaluation framework. However, performance improved markedly when all documents were uploaded as a single document. Despite current limitations, such as a 20-file limit per assistant and challenges in handling multiple documents, there is significant potential for improvement. Enhancing the Assistants API to match GPT quality and reducing restrictions could make it a leading RAG solution.

[https://www.tonic.ai/blog/rag-evaluation-series-validating-openai-assistants-rag-performance](https://www.tonic.ai/blog/rag-evaluation-series-validating-openai-assistants-rag-performance)"
295,machinelearning,open-ai,relevance,2022-10-26 06:10:48,"[P] Up to 12X faster GPU inference on Bert, T5 and other transformers with OpenAI Triton kernels",pommedeterresautee,False,0.99,364,ydqmjp,https://www.reddit.com/r/MachineLearning/comments/ydqmjp/p_up_to_12x_faster_gpu_inference_on_bert_t5_and/,46,1666764648.0,"We are releasing [Kernl](https://github.com/ELS-RD/kernl/) under Apache 2 license, a library to make PyTorch models inference significantly faster. With 1 line of code we applied the optimizations and made Bert up to 12X faster than Hugging Face baseline. T5 is also covered in this first release (> 6X speed up generation and we are still halfway in the optimizations!). This has been possible because we wrote custom GPU kernels with the new OpenAI programming language Triton and leveraged TorchDynamo.

**Project link**: [https://github.com/ELS-RD/kernl/](https://github.com/ELS-RD/kernl/)

**E2E demo notebooks**: [XNLI classification](https://github.com/ELS-RD/kernl/blob/main/tutorial/bert%20e2e.ipynb), [T5 generation](https://github.com/ELS-RD/kernl/blob/main/tutorial/t5%20e2e.ipynb)

[Benchmarks ran on a 3090 RTX GPU, 12 cores Intel CPU, more info below](https://preview.redd.it/mlo3wvn0d3w91.png?width=2738&format=png&auto=webp&s=1b9dce736ee4c0e371b54b9ef796310f9728660d)

On long sequence length inputs, [Kernl](https://github.com/ELS-RD/kernl/) is most of the time the fastest inference engine, and close to Nvidia TensorRT on shortest ones. Keep in mind that Bert is one of the most optimized models out there and most of the tools listed above are very mature.

What is interesting is not that [Kernl](https://github.com/ELS-RD/kernl/) is the fastest engine (or not), but that the code of the kernels is short and easy to understand and modify. We have even added a Triton debugger and a tool (based on Fx) to ease kernel replacement so there is no need to modify PyTorch model source code.

Staying in the comfort of PyTorch / Python maintains dynamic behaviors, debugging and iteration speed. Teams designing/training a transformer model (even custom) can take care of the deployment without relying on advanced GPU knowledge (eg. CUDA programming, dedicated inference engine API, etc.).

Recently released models relying on slightly modified transformer architectures are rarely accelerated in traditional inference engines, we need to wait months to years for someone (usually inference engine maintainers) to write required custom CUDA kernels. Because here custom kernels are written in OpenAI Triton language, **anyone without CUDA experience** can easily modify them: OpenAI Triton API is simple and close to Numpy one. Kernels source code is significantly shorter than equivalent implementation in CUDA (< 200 LoC per kernel). Basic knowledge of how GPU works is enough. We are also releasing a few tutorials we initially wrote for onboarding colleagues on the project. We hope you will find them useful: [https://github.com/ELS-RD/kernl/tree/main/tutorial](https://github.com/ELS-RD/kernl/tree/main/tutorial). In particular, there is:

* Tiled matmul, the GPU way to perform matmul: [https://github.com/ELS-RD/kernl/blob/main/tutorial/1%20-%20tiled%20matmul.ipynb](https://github.com/ELS-RD/kernl/blob/main/tutorial/1%20-%20tiled%20matmul.ipynb)
* Simple explanation of what Flash attention is and how it works, a fused attention making long sequences much faster: [https://github.com/ELS-RD/kernl/blob/main/tutorial/4%20-%20flash%20attention.ipynb](https://github.com/ELS-RD/kernl/blob/main/tutorial/4%20-%20flash%20attention.ipynb)

And best of the best, because we stay in the PyTorch / Python ecosystem, we plan in our roadmap to also enable **training** with those custom kernels. In particular [Flash attention](https://github.com/HazyResearch/flash-attention) kernel should bring a 2-4X speed up and the support of very long sequences on single GPU (paper authors went as far as 16K tokens instead of traditional 512 or 2048 limits)! See below for more info.

**IMPORTANT**: Benchmarking is a difficult art, we tried to be as fair as possible. Please note that:

* Timings are based on wall-clock times and we show speedup over baseline as they are easier to compare between input shapes,
* When we need to choose between speed and output precision, we always choose precision
* HF baseline, CUDA graphs, Inductor and [Kernl](https://github.com/ELS-RD/kernl/) are in mixed precision, AITemplate, ONNX Runtime, DeepSpeed and TensorRT have their weights converted to FP16.
* Accumulation is done in FP32 for AITemplate and [Kernl](https://github.com/ELS-RD/kernl/). TensorRT is likely doing it in FP16.
* CUDA graphs is enabled for all engines except baseline, Nvfuser and ONNX Runtime which [has a limited support of it](https://github.com/microsoft/onnxruntime/issues/12977#issuecomment-1258406358).
* For [Kernl](https://github.com/ELS-RD/kernl/) and AITemplate, fast GELU has been manually disabled (TensorRT is likely using Fast GELU).
* AITemplate measures are to be taken with a grain of salt, it [doesn’t manage attention mask](https://github.com/facebookincubator/AITemplate/issues/46#issuecomment-1279975463) which means 1/ batch inference can’t be used in most scenarios (no padding support), 2/ it misses few operations on a kernel that can be compute-bounded (depends of sequence length), said otherwise it may make it slower to support attention mask, in particular on long sequences. AITemplate attention mask support will come in a future release.
* For TensorRT for best perf, we built 3 models, one per batch size. AITemplate will support dynamic shapes in a future release, so we made a model per input shape.
* Inductor is in prototype stage, performances may be improved when released, none of the disabled by default optimizations worked during our tests.

As you can see, CUDA graphs erase all CPU overhead (Python related for instance), sometimes there is no need to rely on C++/Rust to be fast! Fused kernels (in CUDA or Triton) are mostly important for longer input sequence lengths. We are aware that there are still some low hanging fruits to improve [Kernl](https://github.com/ELS-RD/kernl/) performance without sacrificing output precision, it’s just the first release. More info about how it works [here](https://github.com/ELS-RD/kernl#how).

**Why?**

We work for Lefebvre Sarrut, a leading European legal publisher. Several of our products include transformer models in latency sensitive scenarios (search, content recommendation). So far, ONNX Runtime and TensorRT served us well, and we learned interesting patterns along the way that we shared with the community through an open-source library called [transformer-deploy](https://github.com/ELS-RD/transformer-deploy). However, recent changes in our environment made our needs evolve:

* New teams in the group are deploying transformer models in prod directly with PyTorch. ONNX Runtime poses them too many challenges (like debugging precision issues in fp16). With its inference expert-oriented API, TensorRT was not even an option;
* We are exploring applications of large generative language models in legal industry, and we need easier dynamic behavior support plus more efficient quantization, our creative approaches for that purpose we shared [here on Reddit](https://www.reddit.com/r/MachineLearning/comments/uwkpmt/p_what_we_learned_by_making_t5large_2x_faster/) proved to be more fragile than we initially thought;
* New business opportunities if we were able to train models supporting large contexts (>5K tokens)

On a more personal note, I enjoyed much more writing kernels and understanding low level computation of transformers than mastering multiple complicated tools API and their environments. It really changed my intuitions and understanding about how the model works, scales, etc. It’s not just OpenAI Triton, we also did some prototyping on C++ / CUDA / Cutlass and the effect was the same, it’s all about digging to a lower level. And still the effort is IMO quite limited regarding the benefits. If you have some interest in machine learning engineering, you should probably give those tools a try.

**Future?**

Our road map includes the following elements (in no particular order):

* Faster warmup
* Ragged inference (no computation lost in padding)
* Training support (with long sequences support)
* Multi GPU (multiple parallelization schemas support)
* Quantization (PTQ)
* New batch of Cutlass kernels tests
* Improve hardware support (>= Ampere for now)
* More tuto

Regarding training, if you want to help, we have written an issue with all the required pointers, it should be very doable: [https://github.com/ELS-RD/kernl/issues/93](https://github.com/ELS-RD/kernl/issues/93)

On top of speed, one of the main benefits is the support of very long sequences (16K tokens without changing attention formula) as it’s based on [Flash Attention](https://github.com/HazyResearch/flash-attention).

Also, note that future version of PyTorch will include [Inductor](https://dev-discuss.pytorch.org/t/torchinductor-a-pytorch-native-compiler-with-define-by-run-ir-and-symbolic-shapes/747). It means that all PyTorch users will have the option to compile to Triton to get around [1.7X faster training](https://dev-discuss.pytorch.org/t/torchinductor-update-3-e2e-model-training-with-torchdynamo-inductor-gets-1-67x-2-1x-speedup/793).

A big thank you to Nvidia people who advised us during this project."
296,machinelearning,open-ai,relevance,2023-02-01 08:22:07,[P] Self Hostable OpenAI Alternative,leepenkman,False,0.46,0,10qobgk,https://www.reddit.com/r/MachineLearning/comments/10qobgk/p_self_hostable_openai_alternative/,23,1675239727.0,"Hi,  


[Text-Generator.io](https://text-generator.io/) is now self hostable, It's priced at $1000 USD per instance per year to self host.  


The service runs on a single 24GB VRAM GPU, and runs all services including [speech to text](https://text-generator.io/blog/cost-effective-speech-to-text-api), text and code generation for almost all languages and [generating embeddings](https://text-generator.io/blog/embed-images-text-and-code) too.  


The text generator also [downloads and analyses any input with links](https://text-generator.io/blog/text-generator-now-researches-via-crawling) including documents, images, images with text inside and webpages for better understanding and to generate better text.  


It's a great alternative to OpenAI and has a [compatible API making switching easy](https://text-generator.io/blog/over-10x-openai-cost-savings-one-line-change).  


You can check out the [new pricing here](https://text-generator.io/subscribe).  


Let me know what you think and if there's anything i can do to help!  


All the best.  
Lee Penkman - Founder [Text-Generator.io](https://text-generator.io/)"
297,machinelearning,open-ai,relevance,2018-06-25 14:40:29,[R] OpenAI Five,circuithunter,False,0.96,250,8tr11j,https://blog.openai.com/openai-five/,48,1529937629.0,
298,machinelearning,open-ai,relevance,2024-01-31 20:35:56,[N] Mistral CEO confirms ‘leak’ of new open source AI model nearing GPT-4 performance,EmbarrassedHelp,False,0.94,243,1afryc0,https://www.reddit.com/r/MachineLearning/comments/1afryc0/n_mistral_ceo_confirms_leak_of_new_open_source_ai/,46,1706733356.0,https://venturebeat.com/ai/mistral-ceo-confirms-leak-of-new-open-source-ai-model-nearing-gpt-4-performance/
299,machinelearning,open-ai,relevance,2019-02-19 17:11:54,[D] Dear OpenAI: Please Open Source Your Language Model,hughbzhang,False,0.82,157,ascp7z,https://www.reddit.com/r/MachineLearning/comments/ascp7z/d_dear_openai_please_open_source_your_language/,68,1550596314.0,"Newest Gradient perspective on OpenAI not open sourcing the GPT-2. [https://thegradient.pub/openai-please-open-source-your-language-model/](https://thegradient.pub/openai-please-open-source-your-language-model/)

&#x200B;

Since I'm the author on this one, happy to respond to any comments / criticism of the article!"
